This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-05-18T00:45:15.505Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.gitignore
backend/controllers/admin.controller.js
backend/controllers/announcement.controller.js
backend/controllers/auth.controller.js
backend/controllers/connection.controller.js
backend/controllers/jobPost.controller.js
backend/controllers/notification.controller.js
backend/controllers/post.controller.js
backend/controllers/project.controller.js
backend/controllers/user.controller.js
backend/emails/emailHandlers.js
backend/emails/emailTemplates.js
backend/jobs/projectCleanup.js
backend/lib/cloudinary.js
backend/lib/db.js
backend/lib/mailtrap.js
backend/middleware/admin.middleware.js
backend/middleware/auth.middleware.js
backend/models/announcement.model.js
backend/models/bannedUser.model.js
backend/models/connectionRequest.model.js
backend/models/jobPost.model.js
backend/models/notification.model.js
backend/models/post.model.js
backend/models/projectPost.model.js
backend/models/user.model.js
backend/routes/admin.route.js
backend/routes/announcement.route.js
backend/routes/auth.route.js
backend/routes/connection.route.js
backend/routes/jobPost.route.js
backend/routes/notification.route.js
backend/routes/post.route.js
backend/routes/project.route.js
backend/routes/user.route.js
backend/server.js
backend/teclogoazul.svg
frontend/dist/assets/index-CszfmkhN.js
frontend/dist/assets/index-Ddr-0FVO.css
frontend/dist/index.html
frontend/dist/logo.svg
frontend/dist/teclogoazul.svg
frontend/dist/vite.svg
frontend/eslint.config.js
frontend/index.html
frontend/package.json
frontend/postcss.config.js
frontend/public/logo.svg
frontend/public/teclogoazul.svg
frontend/public/vite.svg
frontend/README.md
frontend/src/App.jsx
frontend/src/components/AboutSection.jsx
frontend/src/components/Announcement.jsx
frontend/src/components/AnnouncementCreation.jsx
frontend/src/components/auth/LoginForm.jsx
frontend/src/components/auth/SignUpForm.jsx
frontend/src/components/CompanyInfoSection.jsx
frontend/src/components/CompanyQuestionnaire.jsx
frontend/src/components/EducationSection.jsx
frontend/src/components/ExperienceSection.jsx
frontend/src/components/FriendRequest.jsx
frontend/src/components/JobPost.jsx
frontend/src/components/JobPostCreation.jsx
frontend/src/components/layout/Layout.jsx
frontend/src/components/layout/Navbar.jsx
frontend/src/components/Post.jsx
frontend/src/components/PostAction.jsx
frontend/src/components/PostCreation.jsx
frontend/src/components/PostPefil.jsx
frontend/src/components/PostPerfil.jsx
frontend/src/components/ProfileHeader.jsx
frontend/src/components/ProjectCreation.jsx
frontend/src/components/ProjectPost.jsx
frontend/src/components/QuestionnaireModal.jsx
frontend/src/components/RecommendedUser.jsx
frontend/src/components/Sidebar.jsx
frontend/src/components/SkillsSection.jsx
frontend/src/components/UserCard.jsx
frontend/src/index.css
frontend/src/lib/axios.js
frontend/src/main.jsx
frontend/src/pages/AdminDashboardPage.jsx
frontend/src/pages/AnnouncementsPage.jsx
frontend/src/pages/auth/LoginPage.jsx
frontend/src/pages/auth/SignUpPage.jsx
frontend/src/pages/HomePage.jsx
frontend/src/pages/JobBoardPage.jsx
frontend/src/pages/NetworkPage.jsx
frontend/src/pages/NotificationsPage.jsx
frontend/src/pages/PostPage.jsx
frontend/src/pages/ProfilePage.jsx
frontend/src/pages/ProjectsPage.jsx
frontend/src/utils/dateUtils.js
frontend/tailwind.config.js
frontend/vite.config.js
package.json
README.md
repomixpy-output.txt

================================================================
Repository Files
================================================================

================
File: .gitignore
================
# Logs
#logs
#*.log
#npm-debug.log*
#yarn-debug.log*
#yarn-error.log*
#pnpm-debug.log*
#lerna-debug.log*

#node_modules
#dist
#dist-ssr
#*.local

#.env

# Editor directories and files
#.vscode/*
#!.vscode/extensions.json
#.idea
#.DS_Store
#*.suo
##*.ntvs*
#*.njsproj
#*.sln
#*.sw?

================
File: backend/controllers/admin.controller.js
================
// backend/controllers/admin.controller.js
import BannedUser from "../models/bannedUser.model.js";
import User from "../models/user.model.js";
import bcrypt from "bcryptjs";
import { sendWelcomeEmail } from "../emails/emailHandlers.js";

export const createUser = async (req, res) => {
    try {
        const { name, username, email, password, role, studentId } = req.body;
        
        // Validate inputs
        if (!name || !username || !email || !password || !role) {
            return res.status(400).json({ message: "Todos los campos son requeridos" });
        }
        
        // For 'egresado' role, validate student ID and email format
        if (role === 'egresado') {
            if (!studentId) {
                return res.status(400).json({ message: "ID de estudiante es requerido para egresados" });
            }
            
            // Validate student ID format
            if (!/^\d{8}$/.test(studentId)) {
                return res.status(400).json({ message: "ID de estudiante inválido. Debe ser un número de 8 dígitos." });
            }
            
            // Validate institutional email format
            const expectedEmail = `L${studentId}@tuxtla.tecnm.mx`;
            if (email.toLowerCase() !== expectedEmail.toLowerCase()) {
                return res.status(400).json({ 
                    message: "El correo institucional debe coincidir con el ID de estudiante (L{ID}@tuxtla.tecnm.mx)." 
                });
            }
            
            // Check if student ID already exists
            const existingStudentId = await User.findOne({ studentId });
            if (existingStudentId) {
                return res.status(400).json({ message: "Este ID de estudiante ya está registrado." });
            }
        }
        
        // Check if role is valid
        if (!['egresado', 'empresario', 'administrador'].includes(role)) {
            return res.status(400).json({ message: "Rol inválido" });
        }
        
        // Check if email exists
        const existingEmail = await User.findOne({ email });
        if (existingEmail) {
            return res.status(400).json({ message: "El correo ya está registrado" });
        }
        
        // Check if username exists
        const existingUsername = await User.findOne({ username });
        if (existingUsername) {
            return res.status(400).json({ message: "El nombre de usuario ya está registrado" });
        }
        
        // Name check has been removed to allow duplicate names
        
        // Hash password
        const salt = await bcrypt.genSalt(10);
        const hashedPassword = await bcrypt.hash(password, salt);
        
        // Create user
        const newUser = new User({
            name,
            email,
            password: hashedPassword,
            username,
            role,
            studentId: role === 'egresado' ? studentId : undefined,
            // Set isFirstLogin to true only for empresario users
            isFirstLogin: role === 'empresario' ? true : undefined
        });
        
        await newUser.save();
        
        // Send welcome email
        const profileUrl = process.env.CLIENT_URL + "/profile/" + newUser.username;
        try {
            await sendWelcomeEmail(newUser.email, newUser.name, profileUrl, newUser.role);
        } catch (emailError) {
            console.error("Error al enviar el correo de bienvenida", emailError);
        }
        
        res.status(201).json({ message: "Usuario creado exitosamente", user: {
            _id: newUser._id,
            name: newUser.name,
            email: newUser.email,
            username: newUser.username,
            role: newUser.role,
            studentId: newUser.studentId,
            isFirstLogin: newUser.isFirstLogin
        }});
        
    } catch (error) {
        console.error("Error creating user:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};





// Add this function to your existing admin.controller.js
export const banUser = async (req, res) => {
  try {
    const { userId } = req.params;
    const { reason } = req.body;
    
    // Find the user to be banned
    const userToBan = await User.findById(userId);
    
    if (!userToBan) {
      return res.status(404).json({ message: "Usuario no encontrado" });
    }
    
    // Create entry in banned collection
    if (userToBan.role === 'egresado' && userToBan.studentId) {
      const bannedUser = new BannedUser({
        studentId: userToBan.studentId,
        email: userToBan.email,
        reason: reason || "No se proporcionó razón",
        bannedBy: req.user._id
      });
      
      await bannedUser.save();
    }
    
    // Delete the user
    await User.findByIdAndDelete(userId);
    
    res.json({ message: "Usuario baneado exitosamente" });
  } catch (error) {
    console.error("Error banning user:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Function to get all banned users
export const getBannedUsers = async (req, res) => {
  try {
    const bannedUsers = await BannedUser.find().populate("bannedBy", "name username");
    res.json(bannedUsers);
  } catch (error) {
    console.error("Error getting banned users:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Function to unban a user
export const unbanUser = async (req, res) => {
  try {
    const { studentId } = req.params;
    
    const bannedUser = await BannedUser.findOneAndDelete({ studentId });
    
    if (!bannedUser) {
      return res.status(404).json({ message: "Usuario baneado no encontrado" });
    }
    
    res.json({ message: "Usuario desbaneado exitosamente" });
  } catch (error) {
    console.error("Error unbanning user:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

export const getAllUsers = async (req, res) => {
    try {
        const users = await User.find().select("-password");
        res.json(users);
    } catch (error) {
        console.error("Error fetching users:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};

export const updateUserRole = async (req, res) => {
    try {
        const { role } = req.body;
        const userId = req.params.id;
        
        if (!['egresado', 'empresario', 'administrador'].includes(role)) {
            return res.status(400).json({ message: "Rol inválido" });
        }
        
        const updatedUser = await User.findByIdAndUpdate(
            userId,
            { role },
            { new: true }
        ).select("-password");
        
        if (!updatedUser) {
            return res.status(404).json({ message: "Usuario no encontrado" });
        }
        
        res.json(updatedUser);
    } catch (error) {
        console.error("Error updating user role:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};

export const deleteUser = async (req, res) => {
    try {
        const userId = req.params.id;
        
        const deletedUser = await User.findByIdAndDelete(userId);
        
        if (!deletedUser) {
            return res.status(404).json({ message: "Usuario no encontrado" });
        }
        
        res.json({ message: "Usuario eliminado exitosamente" });
    } catch (error) {
        console.error("Error deleting user:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};

export const resetUserPassword = async (req, res) => {
    try {
        const userId = req.params.id;
        const { newPassword } = req.body;
        
        if (!newPassword || newPassword.length < 6) {
            return res.status(400).json({ 
                message: "La nueva contraseña debe tener al menos 6 caracteres" 
            });
        }
        
        // Find the user
        const user = await User.findById(userId);
        if (!user) {
            return res.status(404).json({ message: "Usuario no encontrado" });
        }
        
        // Hash the new password
        const salt = await bcrypt.genSalt(10);
        const hashedPassword = await bcrypt.hash(newPassword, salt);
        
        // Update user's password
        user.password = hashedPassword;
        await user.save();
        
        res.status(200).json({ message: "Contraseña restablecida exitosamente" });
    } catch (error) {
        console.error("Error resetting user password:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};

================
File: backend/controllers/announcement.controller.js
================
import cloudinary from "../lib/cloudinary.js";
import Announcement from "../models/announcement.model.js";

// Get all announcements
export const getAnnouncements = async (req, res) => {
  try {
    const announcements = await Announcement.find()
      .populate("author", "name username profilePicture headline")
      .sort({ createdAt: -1 });

    res.status(200).json(announcements);
  } catch (error) {
    console.error("Error in getAnnouncements controller:", error);
    res.status(500).json({ message: "Server error" });
  }
};

// Create a new announcement (admin only)
export const createAnnouncement = async (req, res) => {
  try {
    const { content, image } = req.body;
    let newAnnouncement;

    if (!content) {
      return res.status(400).json({ message: "El contenido es obligatorio" });
    }

    if (image) {
      const imgResult = await cloudinary.uploader.upload(image);
      newAnnouncement = new Announcement({
        author: req.user._id,
        content,
        image: imgResult.secure_url,
      });
    } else {
      newAnnouncement = new Announcement({
        author: req.user._id,
        content,
      });
    }

    await newAnnouncement.save();

    res.status(201).json(newAnnouncement);
  } catch (error) {
    console.error("Error in createAnnouncement controller:", error);
    res.status(500).json({ message: "Server error" });
  }
};

// Delete an announcement (admin only)
export const deleteAnnouncement = async (req, res) => {
  try {
    const announcementId = req.params.id;

    const announcement = await Announcement.findById(announcementId);

    if (!announcement) {
      return res.status(404).json({ message: "Anuncio no encontrado" });
    }

    // Delete the image from cloudinary if it exists
    if (announcement.image) {
      await cloudinary.uploader.destroy(announcement.image.split("/").pop().split(".")[0]);
    }

    await Announcement.findByIdAndDelete(announcementId);

    res.status(200).json({ message: "Anuncio eliminado exitosamente" });
  } catch (error) {
    console.error("Error in deleteAnnouncement controller:", error);
    res.status(500).json({ message: "Server error" });
  }
};

================
File: backend/controllers/auth.controller.js
================
import User from "../models/user.model.js";
import BannedUser from "../models/bannedUser.model.js";
import bcrypt from "bcryptjs";
import jwt from "jsonwebtoken";
import { sendWelcomeEmail } from "../emails/emailHandlers.js";

export const signup = async (req, res) => {
	try {
		const { name, username, email, password, studentId } = req.body;

		if (!name || !username || !email || !password || !studentId) {
			return res.status(400).json({ message: "All fields are required" });
		}
		
		// Check if student ID is banned
		if (studentId) {
			const isBanned = await BannedUser.findOne({ studentId });
			if (isBanned) {
				return res.status(403).json({ message: "Este ID de estudiante ha sido suspendido del sistema" });
			}
		}
		
		// Validate student ID format (assuming it's 8 digits)
        if (!/^\d{8}$/.test(studentId)) {
            return res.status(400).json({ message: "ID de estudiante inválido. Debe ser un número de 8 dígitos." });
        }
        
        // Validate institutional email format
        const expectedEmail = `L${studentId}@tuxtla.tecnm.mx`;
        if (email.toLowerCase() !== expectedEmail.toLowerCase()) {
            return res.status(400).json({ 
                message: "El correo institucional debe coincidir con tu ID de estudiante (L{ID}@tuxtla.tecnm.mx)." 
            });
        }
        
        // Check if student ID already exists
        const existingStudentId = await User.findOne({ studentId });
        if (existingStudentId) {
            return res.status(400).json({ message: "Este ID de estudiante ya está registrado." });
        }
		
		// Default role is 'egresado' - role assignment will be handled by admins
		const role = 'egresado';
		
		// Check if email already exists
		const existingEmail = await User.findOne({ email });
		if (existingEmail) {
			return res.status(400).json({ message: "El correo ya esta registrado" });
		}

		// Check if username already exists
		const existingUsername = await User.findOne({ username });
		if (existingUsername) {
			return res.status(400).json({ message: "El nombre de usuario ya esta registrado" });
		}

		// Removed name check - allowing duplicate names

		if (password.length < 6) {
			return res.status(400).json({ message: "La  contraseña debre tener almenos 6 caracteres" });
		}

		const salt = await bcrypt.genSalt(10);
		const hashedPassword = await bcrypt.hash(password, salt);

		const user = new User({
			name,
			email,
			password: hashedPassword,
			username,
			studentId, // Added studentId field
			role,
		});

		await user.save();

		const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET, { expiresIn: "3d" });

		// Set cookie with more permissive settings for development
		res.cookie("jwt-linkedin", token, {
			httpOnly: true,
			maxAge: 3 * 24 * 60 * 60 * 1000,
			sameSite: "lax", // Changed from strict to lax for development
			secure: process.env.NODE_ENV === "production",
		});

		res.status(201).json({ message: "Usuario registrado correctamente" });

		const profileUrl = process.env.CLIENT_URL + "/profile/" + user.username;

		try {
			await sendWelcomeEmail(user.email, user.name, profileUrl, user.role);
		} catch (emailError) {
			console.error("Error al enviar el correo de bienvenida", emailError);
		}
	} catch (error) {
		console.log("Error in signup: ", error.message);
		res.status(500).json({ message: "Internal server error" });
	}
};

export const login = async (req, res) => {
	try {
		const { username, password } = req.body;

		// Check if user exists
		const user = await User.findOne({ username });
		if (!user) {
			return res.status(400).json({ message: "Datos incorrectos" });
		}

		// Check password
		const isMatch = await bcrypt.compare(password, user.password);
		if (!isMatch) {
			return res.status(400).json({ message: "Datos incorrectos" });
		}

		// Create and send token
		const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET, { expiresIn: "3d" });
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Set cookie with more permissive settings for development
		res.cookie("jwt-linkedin", token, {
			httpOnly: true,
			maxAge: 3 * 24 * 60 * 60 * 1000,
			sameSite: "none", // Change from "lax" to "none"
			secure: true, // Add this when using sameSite: "none"
		});

		// Create response object with isFirstLogin for empresario users
		const responseData = { message: "Sesion iniciada correctamente" };
		
		// Add firstLogin info for empresario users
		if (user.role === 'empresario') {
			responseData.isFirstLogin = !!user.isFirstLogin;
		}

		res.json(responseData);
	} catch (error) {
		console.error("Error in login controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const logout = (req, res) => {
	res.clearCookie("jwt-linkedin");
	res.json({ message: "Sesion cerrada correctamente" });
};

export const getCurrentUser = async (req, res) => {
	try {
		res.json(req.user);
	} catch (error) {
		console.error("Error in getCurrentUser controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend/controllers/connection.controller.js
================
import { sendConnectionAcceptedEmail } from "../emails/emailHandlers.js";
import ConnectionRequest from "../models/connectionRequest.model.js";
import Notification from "../models/notification.model.js";
import User from "../models/user.model.js";

export const sendConnectionRequest = async (req, res) => {
	try {
		const { userId } = req.params;
		const senderId = req.user._id;

		if (senderId.toString() === userId) {
			return res.status(400).json({ message: "No puedes enviarte una petición de conexión a ti mismo" });
		}

		if (req.user.connections.includes(userId)) {
			return res.status(400).json({ message: "Ya tienes una conexión con esta persona" });
		}

		const existingRequest = await ConnectionRequest.findOne({
			sender: senderId,
			recipient: userId,
			status: "pending",
		});

		if (existingRequest) {
			return res.status(400).json({ message: "Ya enviaste una solicitud de conexión a esta persona" });
		}

		const newRequest = new ConnectionRequest({
			sender: senderId,
			recipient: userId,
		});

		await newRequest.save();

		res.status(201).json({ message: "Petición de contacto aceptada" });
	} catch (error) {
		res.status(500).json({ message: "Server error" });
	}
};

export const acceptConnectionRequest = async (req, res) => {
	try {
		const { requestId } = req.params;
		const userId = req.user._id;

		const request = await ConnectionRequest.findById(requestId)
			.populate("sender", "name email username")
			.populate("recipient", "name username");

		if (!request) {
			return res.status(404).json({ message: "Connection request not found" });
		}

		// check if the req is for the current user
		if (request.recipient._id.toString() !== userId.toString()) {
			return res.status(403).json({ message: "Sin autorización para aceptar esta conexión" });
		}

		if (request.status !== "pending") {
			return res.status(400).json({ message: "Esta petición ya ha sido procesada" });
		}

		request.status = "accepted";
		await request.save();

		// if im your friend then ur also my friend ;)
		await User.findByIdAndUpdate(request.sender._id, { $addToSet: { connections: userId } });
		await User.findByIdAndUpdate(userId, { $addToSet: { connections: request.sender._id } });

		const notification = new Notification({
			recipient: request.sender._id,
			type: "connectionAccepted",
			relatedUser: userId,
		});

		await notification.save();

		res.json({ message: "Conexión aceptada" });

		const senderEmail = request.sender.email;
		const senderName = request.sender.name;
		const recipientName = request.recipient.name;
		const profileUrl = process.env.CLIENT_URL + "/profile/" + request.recipient.username;

		try {
			await sendConnectionAcceptedEmail(senderEmail, senderName, recipientName, profileUrl);
		} catch (error) {
			console.error("Error in sendConnectionAcceptedEmail:", error);
		}
	} catch (error) {
		console.error("Error in acceptConnectionRequest controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const rejectConnectionRequest = async (req, res) => {
	try {
		const { requestId } = req.params;
		const userId = req.user._id;

		const request = await ConnectionRequest.findById(requestId);

		if (request.recipient.toString() !== userId.toString()) {
			return res.status(403).json({ message: "Not authorized to reject this request" });
		}

		if (request.status !== "pending") {
			return res.status(400).json({ message: "This request has already been processed" });
		}

		request.status = "rejected";
		await request.save();

		res.json({ message: "Connection request rejected" });
	} catch (error) {
		console.error("Error in rejectConnectionRequest controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const getConnectionRequests = async (req, res) => {
	try {
		const userId = req.user._id;

		const requests = await ConnectionRequest.find({ recipient: userId, status: "pending" }).populate(
			"sender",
			"name username profilePicture headline connections"
		);

		res.json(requests);
	} catch (error) {
		console.error("Error in getConnectionRequests controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const getUserConnections = async (req, res) => {
	try {
		const userId = req.user._id;

		const user = await User.findById(userId).populate(
			"connections",
			"name username profilePicture headline connections"
		);

		res.json(user.connections);
	} catch (error) {
		console.error("Error en el controlador getUserConnections:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const removeConnection = async (req, res) => {
	try {
		const myId = req.user._id;
		const { userId } = req.params;

		await User.findByIdAndUpdate(myId, { $pull: { connections: userId } });
		await User.findByIdAndUpdate(userId, { $pull: { connections: myId } });

		res.json({ message: "Conexión eliminada" });
	} catch (error) {
		console.error("Error in removeConnection controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const getConnectionStatus = async (req, res) => {
	try {
		const targetUserId = req.params.userId;
		const currentUserId = req.user._id;

		const currentUser = req.user;
		if (currentUser.connections.includes(targetUserId)) {
			return res.json({ status: "connected" });
		}

		const pendingRequest = await ConnectionRequest.findOne({
			$or: [
				{ sender: currentUserId, recipient: targetUserId },
				{ sender: targetUserId, recipient: currentUserId },
			],
			status: "pending",
		});

		if (pendingRequest) {
			if (pendingRequest.sender.toString() === currentUserId.toString()) {
				return res.json({ status: "pending" });
			} else {
				return res.json({ status: "received", requestId: pendingRequest._id });
			}
		}

		// if no connection or pending req found
		res.json({ status: "not_connected" });
	} catch (error) {
		console.error("Error in getConnectionStatus controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend/controllers/jobPost.controller.js
================
import JobPost from "../models/jobPost.model.js";

// Get all job posts
export const getJobPosts = async (req, res) => {
  try {
    const { status } = req.query;
    
    let query = {};
    
    // Filter by status if provided
    if (status) {
      query.status = status;
    }
    
    const jobPosts = await JobPost.find(query)
      .populate("author", "name username profilePicture headline")
      .sort({ createdAt: -1 });

    res.status(200).json(jobPosts);
  } catch (error) {
    console.error("Error in getJobPosts controller:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Create a new job post (admin only)
export const createJobPost = async (req, res) => {
  try {
    const { 
      title, 
      company, 
      location, 
      description, 
      requirements, 
      salary, 
      contactEmail, 
      applicationDeadline,
      jobType 
    } = req.body;

    if (!title || !company || !location || !description || !jobType) {
      return res.status(400).json({ message: "Campos obligatorios incompletos" });
    }

    const newJobPost = new JobPost({
      author: req.user._id,
      title,
      company,
      location,
      description,
      requirements,
      salary,
      contactEmail,
      applicationDeadline,
      jobType
    });

    await newJobPost.save();

    res.status(201).json(newJobPost);
  } catch (error) {
    console.error("Error in createJobPost controller:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Get a single job post by ID
export const getJobPostById = async (req, res) => {
  try {
    const jobPostId = req.params.id;
    
    const jobPost = await JobPost.findById(jobPostId)
      .populate("author", "name username profilePicture headline");
      
    if (!jobPost) {
      return res.status(404).json({ message: "Oferta de trabajo no encontrada" });
    }
    
    res.status(200).json(jobPost);
  } catch (error) {
    console.error("Error in getJobPostById controller:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Update job post (admin only)
export const updateJobPost = async (req, res) => {
  try {
    const jobPostId = req.params.id;
    const updateData = req.body;
    
    const jobPost = await JobPost.findById(jobPostId);
    
    if (!jobPost) {
      return res.status(404).json({ message: "Oferta de trabajo no encontrada" });
    }
    
    // Only the author can update the job post
    if (jobPost.author.toString() !== req.user._id.toString()) {
      return res.status(403).json({ message: "No autorizado para actualizar esta oferta" });
    }
    
    // Update only allowed fields
    const allowedFields = [
      'title', 'company', 'location', 'description', 'requirements', 
      'salary', 'contactEmail', 'applicationDeadline', 'status', 'jobType'
    ];
    
    const filteredData = {};
    for (const field of allowedFields) {
      if (updateData[field] !== undefined) {
        filteredData[field] = updateData[field];
      }
    }
    
    const updatedJobPost = await JobPost.findByIdAndUpdate(
      jobPostId,
      filteredData,
      { new: true }
    ).populate("author", "name username profilePicture headline");
    
    res.status(200).json(updatedJobPost);
  } catch (error) {
    console.error("Error in updateJobPost controller:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Delete job post (admin only)
export const deleteJobPost = async (req, res) => {
  try {
    const jobPostId = req.params.id;
    
    const jobPost = await JobPost.findById(jobPostId);
    
    if (!jobPost) {
      return res.status(404).json({ message: "Oferta de trabajo no encontrada" });
    }
    
    // Only the author can delete the job post
    if (jobPost.author.toString() !== req.user._id.toString()) {
      return res.status(403).json({ message: "No autorizado para eliminar esta oferta" });
    }
    
    await JobPost.findByIdAndDelete(jobPostId);
    
    res.status(200).json({ message: "Oferta de trabajo eliminada exitosamente" });
  } catch (error) {
    console.error("Error in deleteJobPost controller:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Change job post status (admin only)
export const changeJobStatus = async (req, res) => {
  try {
    const jobPostId = req.params.id;
    const { status } = req.body;
    
    if (!['active', 'closed', 'expired'].includes(status)) {
      return res.status(400).json({ message: "Estado no válido" });
    }
    
    const jobPost = await JobPost.findById(jobPostId);
    
    if (!jobPost) {
      return res.status(404).json({ message: "Oferta de trabajo no encontrada" });
    }
    
    // Only the author can change the job post status
    if (jobPost.author.toString() !== req.user._id.toString()) {
      return res.status(403).json({ message: "No autorizado para actualizar esta oferta" });
    }
    
    jobPost.status = status;
    await jobPost.save();
    
    res.status(200).json({ message: "Estado de la oferta actualizado exitosamente", jobPost });
  } catch (error) {
    console.error("Error in changeJobStatus controller:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

================
File: backend/controllers/notification.controller.js
================
import Notification from "../models/notification.model.js";

export const getUserNotifications = async (req, res) => {
	try {
		const notifications = await Notification.find({ recipient: req.user._id })
			.sort({ createdAt: -1 })
			.populate("relatedUser", "name username profilePicture")
			.populate("relatedPost", "content image");

		res.status(200).json(notifications);
	} catch (error) {
		console.error("Error en el getUserNotifications controller:", error);
		res.status(500).json({ message: "Internal server error" });
	}
};

export const markNotificationAsRead = async (req, res) => {
	const notificationId = req.params.id;
	try {
		const notification = await Notification.findByIdAndUpdate(
			{ _id: notificationId, recipient: req.user._id },
			{ read: true },
			{ new: true }
		);

		res.json(notification);
	} catch (error) {
		console.error("Error en el markNotificationAsRead controller:", error);
		res.status(500).json({ message: "Internal server error" });
	}
};

export const deleteNotification = async (req, res) => {
	const notificationId = req.params.id;

	try {
		await Notification.findOneAndDelete({
			_id: notificationId,
			recipient: req.user._id,
		});

		res.json({ message: "Notificación borrada exitosamente" });
	} catch (error) {
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend/controllers/post.controller.js
================
import cloudinary from "../lib/cloudinary.js";
import Post from "../models/post.model.js";
import Notification from "../models/notification.model.js";
import { sendCommentNotificationEmail } from "../emails/emailHandlers.js";

export const getFeedPosts = async (req, res) => {
	try {
		const posts = await Post.find({ author: { $in: [...req.user.connections, req.user._id] } })
			.populate("author", "name username profilePicture headline")
			.populate("comments.user", "name profilePicture")
			.sort({ createdAt: -1 });

		res.status(200).json(posts);
	} catch (error) {
		console.error("Error in getFeedPosts controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const createPost = async (req, res) => {
	try {
		const { content, image } = req.body;
		let newPost;

		if (image) {
			const imgResult = await cloudinary.uploader.upload(image);
			newPost = new Post({
				author: req.user._id,
				content,
				image: imgResult.secure_url,
			});
		} else {
			newPost = new Post({
				author: req.user._id,
				content,
			});
		}

		await newPost.save();

		res.status(201).json(newPost);
	} catch (error) {
		console.error("Error in createPost controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const deletePost = async (req, res) => {
	try {
		const postId = req.params.id;
		const userId = req.user._id;

		const post = await Post.findById(postId);

		if (!post) {
			return res.status(404).json({ message: "Post not found" });
		}

		// check if the current user is the author of the post
		if (post.author.toString() !== userId.toString()) {
			return res.status(403).json({ message: "You are not authorized to delete this post" });
		}

		// delete the image from cloudinary as well!
		if (post.image) {
			await cloudinary.uploader.destroy(post.image.split("/").pop().split(".")[0]);
		}

		await Post.findByIdAndDelete(postId);

		res.status(200).json({ message: "Post borrado" });
	} catch (error) {
		console.log("Error in delete post controller", error.message);
		res.status(500).json({ message: "Server error" });
	}
};

export const getPostById = async (req, res) => {
	try {
		const postId = req.params.id;
		const post = await Post.findById(postId)
			.populate("author", "name username profilePicture headline")
			.populate("comments.user", "name profilePicture username headline");

		res.status(200).json(post);
	} catch (error) {
		console.error("Error in getPostById controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const createComment = async (req, res) => {
	try {
		const postId = req.params.id;
		const { content } = req.body;

		const post = await Post.findByIdAndUpdate(
			postId,
			{
				$push: { comments: { user: req.user._id, content } },
			},
			{ new: true }
		).populate("author", "name email username headline profilePicture");

		// create a notification if the comment owner is not the post owner
		if (post.author._id.toString() !== req.user._id.toString()) {
			const newNotification = new Notification({
				recipient: post.author,
				type: "comment",
				relatedUser: req.user._id,
				relatedPost: postId,
			});

			await newNotification.save();

			try {
				const postUrl = process.env.CLIENT_URL + "/post/" + postId;
				await sendCommentNotificationEmail(
					post.author.email,
					post.author.name,
					req.user.name,
					postUrl,
					content
				);
			} catch (error) {
				console.log("Error in sending comment notification email:", error);
			}
		}

		res.status(200).json(post);
	} catch (error) {
		console.error("Error in createComment controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const likePost = async (req, res) => {
	try {
		const postId = req.params.id;
		const post = await Post.findById(postId);
		const userId = req.user._id;

		if (post.likes.includes(userId)) {
			// unlike the post
			post.likes = post.likes.filter((id) => id.toString() !== userId.toString());
		} else {
			// like the post
			post.likes.push(userId);
			// create a notification if the post owner is not the user who liked
			if (post.author.toString() !== userId.toString()) {
				const newNotification = new Notification({
					recipient: post.author,
					type: "like",
					relatedUser: userId,
					relatedPost: postId,
				});

				await newNotification.save();
			}
		}

		await post.save();

		res.status(200).json(post);
	} catch (error) {
		console.error("Error in likePost controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend/controllers/project.controller.js
================
// backend/controllers/project.controller.js
import cloudinary from "../lib/cloudinary.js";
import ProjectPost from "../models/projectPost.model.js";
import Notification from "../models/notification.model.js";
import mongoose from "mongoose";

// Update expired projects helper
const updateExpiredProjects = async () => {
    const now = new Date();
    await ProjectPost.updateMany(
        { expirationDate: { $lt: now }, status: "active" },
        { status: "expired" }
    );
};

// Get all projects
export const getProjects = async (req, res) => {
    try {
        const { status, interested, created } = req.query;
        const userId = req.user._id;
        
        let query = {};
        
        // Filter by status if provided
        if (status) {
            query.status = status;
        }
        
        // Filter projects the user is interested in
        if (interested === "true") {
            query["interestedUsers.user"] = userId;
        }
        
        // Filter projects created by the user
        if (created === "true") {
            query.author = userId;
        }
        
        const projects = await ProjectPost.find(query)
            .populate("author", "name username profilePicture headline")
            .populate("comments.user", "name profilePicture")
            .populate("interestedUsers.user", "name username profilePicture headline")
            .sort({ createdAt: -1 });
        
        // Convert Mongoose documents to plain objects
        const plainProjects = projects.map(project => project.toObject());
        
        res.status(200).json(plainProjects);
    } catch (error) {
        console.error("Error in getProjects controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Create a new project post
export const createProject = async (req, res) => {
    try {
        const { title, content, image, projectRequirements, projectGoals, expirationDays } = req.body;
        
        if (!title || !content) {
            return res.status(400).json({ message: "Title and content are required" });
        }
        
        // Calculate expiration date
        const expirationDate = new Date();
        expirationDate.setDate(expirationDate.getDate() + (parseInt(expirationDays) || 30));
        
        let newProject;
        
        if (image) {
            const imgResult = await cloudinary.uploader.upload(image);
            newProject = new ProjectPost({
                author: req.user._id,
                title,
                content,
                image: imgResult.secure_url,
                projectRequirements,
                projectGoals,
                expirationDate
            });
        } else {
            newProject = new ProjectPost({
                author: req.user._id,
                title,
                content,
                projectRequirements,
                projectGoals,
                expirationDate
            });
        }
        
        await newProject.save();
        
        // Return as plain object
        res.status(201).json(newProject.toObject());
    } catch (error) {
        console.error("Error in createProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Get project by ID
export const getProjectById = async (req, res) => {
    try {
        const projectId = req.params.id;
        
        if (!mongoose.Types.ObjectId.isValid(projectId)) {
            return res.status(400).json({ message: "Invalid project ID" });
        }
        
        const project = await ProjectPost.findById(projectId)
            .populate("author", "name username profilePicture headline")
            .populate("comments.user", "name profilePicture username headline")
            .populate("interestedUsers.user", "name username profilePicture headline");
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in getProjectById controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Update project
export const updateProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const { title, content, projectRequirements, projectGoals, status, expirationDays } = req.body;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.author.toString() !== req.user._id.toString()) {
            return res.status(403).json({ message: "Not authorized to update this project" });
        }
        
        if (title) project.title = title;
        if (content) project.content = content;
        if (projectRequirements) project.projectRequirements = projectRequirements;
        if (projectGoals) project.projectGoals = projectGoals;
        if (status) project.status = status;
        
        if (expirationDays) {
            const expirationDate = new Date();
            expirationDate.setDate(expirationDate.getDate() + parseInt(expirationDays));
            project.expirationDate = expirationDate;
        }
        
        await project.save();
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in updateProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Delete project
export const deleteProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.author.toString() !== req.user._id.toString()) {
            return res.status(403).json({ message: "Not authorized to delete this project" });
        }
        
        if (project.image) {
            const publicId = project.image.split('/').pop().split('.')[0];
            await cloudinary.uploader.destroy(publicId);
        }
        
        await ProjectPost.findByIdAndDelete(projectId);
        
        res.status(200).json({ message: "Project deleted successfully" });
    } catch (error) {
        console.error("Error in deleteProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Toggle interest in project
export const toggleInterestInProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const userId = req.user._id;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.status === "expired") {
            return res.status(400).json({ message: "Cannot show interest in an expired project" });
        }
        
        const isInterested = project.interestedUsers.some(
            interest => interest.user.toString() === userId.toString()
        );
        
        if (isInterested) {
            project.interestedUsers = project.interestedUsers.filter(
                interest => interest.user.toString() !== userId.toString()
            );
        } else {
            project.interestedUsers.push({ user: userId });
            
            if (project.author.toString() !== userId.toString()) {
                const notification = new Notification({
                    recipient: project.author,
                    type: "projectInterest",
                    relatedUser: userId,
                    relatedProject: projectId
                });
                await notification.save();
            }
        }
        
        await project.save();
        
        res.status(200).json({
            message: isInterested ? "Interest removed" : "Interest added",
            project: project.toObject()
        });
    } catch (error) {
        console.error("Error in toggleInterestInProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Add comment to project
export const addCommentToProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const { content } = req.body;
        
        if (!content) {
            return res.status(400).json({ message: "Comment content is required" });
        }
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.status === "expired") {
            return res.status(400).json({ message: "Cannot comment on an expired project" });
        }
        
        project.comments.push({
            user: req.user._id,
            content
        });
        
        await project.save();
        
        // Create notification for project author
        if (project.author.toString() !== req.user._id.toString()) {
            const notification = new Notification({
                recipient: project.author,
                type: "projectComment",
                relatedUser: req.user._id,
                relatedProject: projectId
            });
            await notification.save();
        }
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in addCommentToProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Like project
export const likeProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const userId = req.user._id;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.status === "expired") {
            return res.status(400).json({ message: "Cannot like an expired project" });
        }
        
        const isLiked = project.likes.includes(userId);
        
        if (isLiked) {
            project.likes = project.likes.filter(id => id.toString() !== userId.toString());
        } else {
            project.likes.push(userId);
            
            if (project.author.toString() !== userId.toString()) {
                const notification = new Notification({
                    recipient: project.author,
                    type: "projectLike",
                    relatedUser: userId,
                    relatedProject: projectId
                });
                await notification.save();
            }
        }
        
        await project.save();
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in likeProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

================
File: backend/controllers/user.controller.js
================
import User from "../models/user.model.js";
import cloudinary from "../lib/cloudinary.js";

export const getSuggestedConnections = async (req, res) => {
   try {
       const limit = parseInt(req.query.limit) || 5;
       const currentUser = await User.findById(req.user._id).select("connections");
       const suggestedUser = await User.find({
           _id: {
               $ne: req.user._id,
               $nin: currentUser.connections,
           },
       })
           .select("name username profilePicture headline")
           .limit(limit);
       res.json(suggestedUser);
   } catch (error) {
       console.error("Error in getSuggestedConnections controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

export const getSuggestedConnectionsBig = async (req, res) => {
   try {
       const limit = parseInt(req.query.limit) || 50;
       const currentUser = await User.findById(req.user._id).select("connections");
       const suggestedUser = await User.find({
           _id: {
               $ne: req.user._id,
               $nin: currentUser.connections,
           },
       })
           .select("name username profilePicture headline")
           .limit(limit);
       res.json(suggestedUser);
   } catch (error) {
       console.error("Error in getSuggestedConnections controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

export const getPublicProfile = async (req, res) => {
   try {
       const user = await User.findOne({ username: req.params.username }).select("-password");
       if (!user) {
           return res.status(404).json({ message: "User not found" });
       }
       res.json(user);
   } catch (error) {
       console.error("Error in getPublicProfile controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

export const updateProfile = async (req, res) => {
   try {
       const allowedFields = [
           "name",
           "username",
           "headline",
           "about",
           "location",
           "profilePicture",
           "bannerImg",
           "curriculumImg",
           "skills",
           "experience",
           "education",
           "companyInfo", // Added companyInfo to allowed fields
       ];
       
       const updatedData = {};
       for (const field of allowedFields) {
           if (req.body[field] !== undefined) { // Changed from req.body[field] to handle empty objects
               updatedData[field] = req.body[field];
           }
       }

       console.log("Server - Received update data:", req.body);
       console.log("Server - Processed update data:", updatedData);

       if (req.body.profilePicture) {
           const result = await cloudinary.uploader.upload(req.body.profilePicture);
           updatedData.profilePicture = result.secure_url;
       }

       if (req.body.bannerImg) {
           const result = await cloudinary.uploader.upload(req.body.bannerImg);
           updatedData.bannerImg = result.secure_url;
       }

       if (req.body.curriculumImg) {
           try {
               const base64Data = req.body.curriculumImg.split(';base64,').pop();
               
               const result = await cloudinary.uploader.upload(
                   `data:application/pdf;base64,${base64Data}`,
                   {
                       resource_type: "raw",
                       use_filename: true,
                       unique_filename: true,
                       format: "pdf",
                       public_id: `curriculum_${req.user._id}_${Date.now()}`,
                       tags: ['curriculum'],
                       access_mode: "public"
                   }
               );
               
               updatedData.curriculumImg = `${result.secure_url}?dl=1`;
               console.log('Curriculum URL:', updatedData.curriculumImg);
           } catch (error) {
               console.error('Error uploading curriculum:', error);
               throw error;
           }
       }

       const user = await User.findByIdAndUpdate(
           req.user._id, 
           { $set: updatedData }, 
           { new: true }
       ).select("-password");
       
       res.json(user);
   } catch (error) {
       console.error("Error in updateProfile controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

// Función para trabahar con los empresarios y su primer login  ↓
export const completeFirstLoginSetup = async (req, res) => {
   try {
       const userId = req.user._id;
       
       // Check if user is empresario
       if (req.user.role !== 'empresario') {
           return res.status(403).json({ message: "Esta acción solo está permitida para usuarios con rol de empresario" });
       }
       
       // Get company info from request
       const { companyInfo } = req.body;
       
       // Update user with companyInfo and set isFirstLogin to false
       const user = await User.findByIdAndUpdate(
           userId, 
           { 
               $set: { 
                   isFirstLogin: false,
                   companyInfo: companyInfo || {}
               } 
           }, 
           { new: true }
       ).select("-password");
       
       if (!user) {
           return res.status(404).json({ message: "Usuario no encontrado" });
       }
       
       res.json({
           message: "Configuración inicial completada exitosamente",
           user
       });
   } catch (error) {
       console.error("Error en completeFirstLoginSetup:", error);
       res.status(500).json({ message: "Error del servidor" });
   }
};

================
File: backend/emails/emailHandlers.js
================
import { mailtrapClient, sender } from "../lib/mailtrap.js";
import {
	createCommentNotificationEmailTemplate,
	createConnectionAcceptedEmailTemplate,
	createWelcomeEmailTemplate,
} from "./emailTemplates.js";

export const sendWelcomeEmail = async (email, name, profileUrl, role = 'egresado') => {
	const recipient = [{ email }];

	try {
		const response = await mailtrapClient.send({
			from: sender,
			to: recipient,
			subject: "Bienvenidos egresados de sistemas ITTG",
			html: createWelcomeEmailTemplate(name, profileUrl, role),
			category: "Bienvenido",
		});

		console.log("Welcome Email sent succesffully", response);
	} catch (error) {
		throw error;
	}
};

export const sendCommentNotificationEmail = async (
	recipientEmail,
	recipientName,
	commenterName,
	postUrl,
	commentContent
) => {
	const recipient = [{ email: recipientEmail }];

	try {
		const response = await mailtrapClient.send({
			from: sender,
			to: recipient,
			subject: "Comentaron tu post",
			html: createCommentNotificationEmailTemplate(recipientName, commenterName, postUrl, commentContent),
			category: "Notificación_comentario",
		});
		console.log("Comment Notification Email sent successfully", response);
	} catch (error) {
		throw error;
	}
};

export const sendConnectionAcceptedEmail = async (senderEmail, senderName, recipientName, profileUrl) => {
	const recipient = [{ email: senderEmail }];

	try {
		const response = await mailtrapClient.send({
			from: sender,
			to: recipient,
			subject: `${recipientName} se conecto contigo`,
			html: createConnectionAcceptedEmailTemplate(senderName, recipientName, profileUrl),
			category: "conexion_aceptada",
		});
	} catch (error) {}
};

================
File: backend/emails/emailTemplates.js
================
export function createWelcomeEmailTemplate(name, profileUrl, role = 'egresado') {
  let roleSpecificText = '';
  let additionalInfo = '';

  if (role === 'empresario') {
    roleSpecificText = "Como empresario, podrá conectarse con egresados, publicar ofertas de trabajo y dar a conocer su empresa.";
    additionalInfo = `
      <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #0077B5;">
        <p style="font-size: 16px; margin: 0; color: #0077B5;"><strong>¡Importante!</strong></p>
        <p style="margin-top: 10px;">La primera vez que inicie sesión, aparecerá un cuestionario para completar la información de su empresa. Esta información se mostrará en su perfil y ayudará a los egresados a conocer mejor su negocio.</p>
      </div>
    `;
  } else if (role === 'administrador') {
    roleSpecificText = "Como administrador, podrá gestionar usuarios y supervisar la plataforma.";
  } else {
    roleSpecificText = "Explore conexiones para su carrera profesional.";
  }
      
  return `
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bienvenidos egresados ittg</title>
  </head>
  <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
    <div style="background: linear-gradient(to right, #0077B5, #00A0DC); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
      <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSzFs7zNiYDWu_iddeOkErqpLlx16wvAxmhQ&s.svg" alt="tec Logo" style="width: 150px; margin-bottom: 20px;border-radius: 10px;">
      <h1 style="color: white; margin: 0; font-size: 28px;">Bienvenido a egresados ittg</h1>
    </div>
    <div style="background-color: #ffffff; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">
      <p style="font-size: 18px; color: #0077B5;"><strong>Hola ${name},</strong></p>
      <p>${roleSpecificText}</p>
      ${additionalInfo}
      <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0;">
        <p style="font-size: 16px; margin: 0;"><strong>Puedes iniciar con:</strong></p>
        <ul style="padding-left: 20px;">
          <li>Editar tu perfil</li>
          <li>Buscar contactos que te interesen</li>
        </ul>
      </div>
      <div style="text-align: center; margin: 30px 0;">
        <a href="${profileUrl}" style="background-color: #0077B5; color: white; padding: 14px 28px; text-decoration: none; border-radius: 30px; font-weight: bold; font-size: 16px; transition: background-color 0.3s;">Edita tu perfil</a>
      </div>
      <p>Puedes contactarnos para cualquier pregunta que necesites.</p>
      <p>Atentamente<br>Departamento de egresados</p>
    </div>
  </body>
  </html>
  `;
}

export const createConnectionAcceptedEmailTemplate = (senderName, recipientName, profileUrl) => `
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Conexión exitosa</title>
</head>
<body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
<div style="background: linear-gradient(to right, #0077B5, #00A0DC); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
  <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSzFs7zNiYDWu_iddeOkErqpLlx16wvAxmhQ&s.jpg" alt="logo_tec" style="width: 150px; margin-bottom: 20px;border-radius: 10px;"/>
  <h1 style="color: white; margin: 0; font-size: 28px;">Alguien se ha conectado contigo</h1>
</div>
<div style="background-color: #ffffff; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">
  <p style="font-size: 18px; color: #0077B5;"><strong>Hola ${senderName},</strong></p>
  <p>El usuario<strong>${recipientName}</strong> acepto tu solicitud de conexión.</p>
  <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0;">
    <p style="font-size: 16px; margin: 0;"><strong>Que sigue</strong></p>
    <ul style="padding-left: 20px;">
      <li>Mira el perfil de ${recipientName}</li>
      <li>Checa sus posts</li>
      <li>Busca intereses comunes</li>
    </ul>
  </div>
  <div style="text-align: center; margin: 30px 0;">
    <a href="${profileUrl}" style="background-color: #0077B5; color: white; padding: 14px 28px; text-decoration: none; border-radius: 30px; font-weight: bold; font-size: 16px; transition: background-color 0.3s;">Puedes ver el perfil de ${recipientName}</a>
  </div>
  <p>Busca más contactos laborales</p>
  <p>Atentamente,<br>Departamento de egresados</p>
</div>
</body>
</html>
`;

export const createCommentNotificationEmailTemplate = (recipientName, commenterName, postUrl, commentContent) => `
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Nuevo comentario en tu post</title>
</head>
<body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
<div style="background: linear-gradient(to right, #0077B5, #00A0DC); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
  <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSzFs7zNiYDWu_iddeOkErqpLlx16wvAxmhQ&s.jpg" alt="Logo tec" style="width: 150px; margin-bottom: 20px;border-radius: 10px;"/>
  <h1 style="color: white; margin: 0; font-size: 28px;">Nuevo comentario en tu post</h1>
</div>
<div style="background-color: #ffffff; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">
  <p style="font-size: 18px; color: #0077B5;"><strong>Hola ${recipientName},</strong></p>
  <p>${commenterName} Comento en tu post:</p>
  <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0;">
    <p style="font-style: italic; margin: 0;">"${commentContent}"</p>
  </div>
  <div style="text-align: center; margin: 30px 0;">
    <a href=${postUrl} style="background-color: #0077B5; color: white; padding: 14px 28px; text-decoration: none; border-radius: 30px; font-weight: bold; font-size: 16px; transition: background-color 0.3s;">View Comment</a>
  </div>
  <p>Mantente conectado respondiendo a sus comentarios.</p>
  <p>Atentamente.<br>Departamento de egresados</p>
</div>
</body>
</html>
`;

================
File: backend/jobs/projectCleanup.js
================
// backend/jobs/projectCleanup.js
import axios from "axios";
import ProjectPost from "../models/projectPost.model.js";
import cloudinary from "../lib/cloudinary.js";

/**
 * Function to clean up expired projects
 * This should be run on a schedule (e.g., daily)
 */
export const cleanupExpiredProjects = async () => {
    try {
        console.log("Running cleanup job for expired projects...");
        
        // Update the status of any expired projects
        const now = new Date();
        await ProjectPost.updateMany(
            { expirationDate: { $lt: now }, status: { $ne: "expired" } },
            { status: "expired" }
        );
        
        // Calculate threshold for deletion (7 days after expiration)
        const deleteThreshold = new Date();
        deleteThreshold.setDate(deleteThreshold.getDate() - 7);
        
        // Find projects to delete
        const projectsToDelete = await ProjectPost.find({
            status: "expired",
            expirationDate: { $lt: deleteThreshold }
        });
        
        console.log(`Found ${projectsToDelete.length} expired projects to delete.`);
        
        // Delete images from cloudinary
        for (const project of projectsToDelete) {
            if (project.image) {
                try {
                    const publicId = project.image.split('/').pop().split('.')[0];
                    await cloudinary.uploader.destroy(publicId);
                    console.log(`Deleted image for project ${project._id}`);
                } catch (error) {
                    console.error(`Error deleting image for project ${project._id}:`, error);
                }
            }
        }
        
        // Delete the projects from database
        const result = await ProjectPost.deleteMany({
            status: "expired",
            expirationDate: { $lt: deleteThreshold }
        });
        
        console.log(`Successfully deleted ${result.deletedCount} expired projects.`);
        
        return {
            success: true,
            deletedCount: result.deletedCount
        };
    } catch (error) {
        console.error("Error in project cleanup job:", error);
        return {
            success: false,
            error: error.message
        };
    }
};

// If you want to run this as a standalone script
if (process.env.NODE_ENV !== 'test') {
    // This can be called from a cron job or similar scheduled task
    // For example, using node-cron:
    // import cron from 'node-cron';
    // cron.schedule('0 0 * * *', cleanupExpiredProjects); // Run daily at midnight
}

export default cleanupExpiredProjects;

================
File: backend/lib/cloudinary.js
================
import { v2 as cloudinary } from "cloudinary";
import dotenv from "dotenv";

dotenv.config();

cloudinary.config({
	cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
	api_key: process.env.CLOUDINARY_API_KEY,
	api_secret: process.env.CLOUDINARY_API_SECRET,
});

export default cloudinary;

================
File: backend/lib/db.js
================
import mongoose from "mongoose";

export const connectDB = async () => {
	try {
		const conn = await mongoose.connect(process.env.MONGO_URI);
		console.log(`MongoDB connected: ${conn.connection.host}`);
	} catch (error) {
		console.error(`Error connecting to MongoDB: ${error.message}`);
		process.exit(1);
	}
};

================
File: backend/lib/mailtrap.js
================
import { MailtrapClient } from "mailtrap";
import dotenv from "dotenv";

dotenv.config();

const TOKEN = process.env.MAILTRAP_TOKEN;

export const mailtrapClient = new MailtrapClient({
	token: TOKEN,
});

export const sender = {
	email: process.env.EMAIL_FROM,
	name: process.env.EMAIL_FROM_NAME,
};

================
File: backend/middleware/admin.middleware.js
================
// backend/middleware/admin.middleware.js
export const isAdmin = async (req, res, next) => {
    try {
        if (req.user.role !== 'administrador') {
            return res.status(403).json({ message: "Acceso denegado. Solo administradores." });
        }
        next();
    } catch (error) {
        console.log("Error in isAdmin middleware:", error.message);
        res.status(500).json({ message: "Error del servidor" });
    }
};

================
File: backend/middleware/auth.middleware.js
================
import jwt from "jsonwebtoken";
import User from "../models/user.model.js";

export const protectRoute = async (req, res, next) => {
	try {
		const token = req.cookies["jwt-linkedin"];

		if (!token) {
			return res.status(401).json({ message: "Unauthorized - No Token Provided" });
		}

		const decoded = jwt.verify(token, process.env.JWT_SECRET);
		if (!decoded) {
			return res.status(401).json({ message: "Unauthorized - Invalid Token" });
		}

		const user = await User.findById(decoded.userId).select("-password");

		if (!user) {
			return res.status(401).json({ message: "User not found" });
		}

		req.user = user;

		next();
	} catch (error) {
		console.log("Error in protectRoute middleware:", error.message);
		res.status(500).json({ message: "Internal server error" });
	}
};

================
File: backend/models/announcement.model.js
================
import mongoose from "mongoose";

const announcementSchema = new mongoose.Schema(
  {
    author: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: "User", 
      required: true 
    },
    content: { 
      type: String,
      required: true 
    },
    image: { 
      type: String 
    }
  },
  { timestamps: true }
);

const Announcement = mongoose.model("Announcement", announcementSchema);

export default Announcement;

================
File: backend/models/bannedUser.model.js
================
import mongoose from "mongoose";

const bannedUserSchema = new mongoose.Schema(
  {
    studentId: {
      type: String,
      required: true,
      unique: true
    },
    email: {
      type: String,
      required: true
    },
    reason: {
      type: String,
      default: ""
    },
    bannedBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true
    },
    bannedAt: {
      type: Date,
      default: Date.now
    }
  },
  { timestamps: true }
);

const BannedUser = mongoose.model("BannedUser", bannedUserSchema);
export default BannedUser;

================
File: backend/models/connectionRequest.model.js
================
import mongoose from "mongoose";

const connectionRequestSchema = new mongoose.Schema(
	{
		sender: {
			type: mongoose.Schema.Types.ObjectId,
			ref: "User",
			required: true,
		},
		recipient: {
			type: mongoose.Schema.Types.ObjectId,
			ref: "User",
			required: true,
		},
		status: {
			type: String,
			enum: ["pending", "accepted", "rejected"],
			default: "pending",
		},
	},
	{ timestamps: true }
);

const ConnectionRequest = mongoose.model("ConnectionRequest", connectionRequestSchema);

export default ConnectionRequest;

================
File: backend/models/jobPost.model.js
================
import mongoose from "mongoose";

const jobPostSchema = new mongoose.Schema(
  {
    author: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: "User", 
      required: true 
    },
    title: { 
      type: String,
      required: true 
    },
    company: {
      type: String,
      required: true
    },
    location: {
      type: String,
      required: true
    },
    description: { 
      type: String,
      required: true 
    },
    requirements: {
      type: String,
      required: false
    },
    salary: {
      type: String,
      required: false
    },
    contactEmail: {
      type: String,
      required: false
    },
    applicationDeadline: {
      type: Date,
      required: false
    },
    status: {
      type: String,
      enum: ["active", "closed", "expired"],
      default: "active"
    },
    jobType: {
      type: String,
      enum: ["full-time", "part-time", "contract", "internship", "temporary"],
      required: true
    }
  },
  { timestamps: true }
);

// Indexes for efficient querying
jobPostSchema.index({ author: 1 });
jobPostSchema.index({ status: 1 });
jobPostSchema.index({ applicationDeadline: 1 });
jobPostSchema.index({ jobType: 1 });
jobPostSchema.index({ createdAt: -1 });

// Virtual field to check if job posting is expired
jobPostSchema.virtual('isExpired').get(function() {
  if (this.applicationDeadline) {
    return new Date() > this.applicationDeadline;
  }
  return false;
});

// Middleware to update expired job postings automatically
jobPostSchema.pre(['find', 'findOne'], async function() {
  try {
    // Update expired jobs before retrieval
    if (!this._conditions.status || this._conditions.status !== 'expired') {
      await mongoose.model('JobPost').updateMany(
        { 
          status: 'active',
          applicationDeadline: { $lt: new Date() }
        },
        { 
          $set: { status: 'expired' }
        }
      );
    }
  } catch (error) {
    console.error('Error updating expired job posts:', error);
  }
});

const JobPost = mongoose.model("JobPost", jobPostSchema);

export default JobPost;

================
File: backend/models/notification.model.js
================
// backend/models/notification.model.js
import mongoose from "mongoose";

const notificationSchema = new mongoose.Schema(
    {
        recipient: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "User",
            required: true,
        },
        type: {
            type: String,
            required: true,
            enum: [
                "like", 
                "comment", 
                "connectionAccepted",
                "projectInterest",   // New type for project interest
                "projectComment",    // New type for project comments
                "projectLike",       // New type for project likes
                "projectExpired"     // New type for expired projects
            ],
        },
        relatedUser: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "User",
        },
        relatedPost: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "Post",
        },
        relatedProject: {           // New field for project-related notifications
            type: mongoose.Schema.Types.ObjectId,
            ref: "ProjectPost",
        },
        read: {
            type: Boolean,
            default: false,
        },
    },
    { timestamps: true }
);

const Notification = mongoose.model("Notification", notificationSchema);

export default Notification;

================
File: backend/models/post.model.js
================
import mongoose from "mongoose";

const postSchema = new mongoose.Schema(
	{
		author: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
		content: { type: String },
		image: { type: String },
		likes: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
		comments: [
			{
				content: { type: String },
				user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
				createdAt: { type: Date, default: Date.now },
			},
		],
	},
	{ timestamps: true }
);

const Post = mongoose.model("Post", postSchema);

export default Post;

================
File: backend/models/projectPost.model.js
================
// backend/models/projectPost.model.js
import mongoose from "mongoose";

const projectPostSchema = new mongoose.Schema(
    {
        author: { 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User", 
            required: true 
        },
        title: { 
            type: String, 
            required: true 
        },
        content: { 
            type: String, 
            required: true 
        },
        image: { 
            type: String 
        },
        likes: [{ 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User" 
        }],
        comments: [
            {
                content: { type: String },
                user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
                createdAt: { type: Date, default: Date.now },
            },
        ],
        interestedUsers: [
            {
                user: { 
                    type: mongoose.Schema.Types.ObjectId, 
                    ref: "User" 
                },
                createdAt: { 
                    type: Date, 
                    default: Date.now 
                },
            },
        ],
        expirationDate: {
            type: Date,
            default: function() {
                const date = new Date();
                date.setDate(date.getDate() + 30);
                return date;
            },
            required: true
        },
        status: {
            type: String,
            enum: ["active", "completed", "expired"],
            default: "active"
        },
        projectRequirements: { 
            type: String 
        },
        projectGoals: { 
            type: String 
        }
    },
    { timestamps: true }
);

// Indexes
projectPostSchema.index({ expirationDate: 1 });
projectPostSchema.index({ status: 1 });
projectPostSchema.index({ author: 1 });

// Virtual field to check if project is expired
projectPostSchema.virtual('isExpired').get(function() {
    return new Date() > this.expirationDate;
});

// Function to update expired projects
const updateExpiredProjects = async () => {
    try {
        await mongoose.model('ProjectPost').updateMany(
            { 
                status: 'active',
                expirationDate: { $lt: new Date() }
            },
            { 
                $set: { status: 'expired' }
            }
        );
    } catch (error) {
        console.error('Error updating expired projects:', error);
    }
};

// Middleware to update expired projects before find operations
projectPostSchema.pre(['find', 'findOne'], async function() {
    // Only update if we're not specifically querying expired projects
    if (!this._conditions.status || this._conditions.status !== 'expired') {
        await updateExpiredProjects();
    }
});

const ProjectPost = mongoose.model("ProjectPost", projectPostSchema);

export default ProjectPost;

================
File: backend/models/user.model.js
================
import mongoose from "mongoose";
const userSchema = new mongoose.Schema(
    {
        name: {
            type: String,
            required: true,
        },
        username: { type: String, required: true, unique: true },
        email: { type: String, required: true, unique: true },
        password: { type: String, required: true },
        studentId: { type: String, unique: true }, // Added field for student ID
        role: {
            type: String,
            enum: ['egresado', 'empresario', 'administrador'],
            default: 'egresado'
        },
        // Esto lo usamos para checar si el empresario se estal loggeando por primera vez y enviarlo a llenar su cuestionario si es el caso 
        isFirstLogin: {
        type: Boolean,
        default: function() {
        // esta en default solo para los empresarios
        return this.role === 'empresario';
    }
},
        profilePicture: {
            type: String,
            default: "",
        },
        bannerImg: {
            type: String,
            default: "",
        },
        curriculumImg: {
            type: String,
            default: "",
        },
        headline: {
            type: String,
            default: "Egresado",
        },
        location: {
            type: String,
            default: "México",
        },
        about: {
            type: String,
            default: "",
        },
        skills: [String],
        experience: [
            {
                title: String,
                company: String,
                startDate: Date,
                endDate: Date,
                description: String,
            },
        ],
        education: [
            {
                school: String,
                fieldOfStudy: String,
                startYear: Number,
                endYear: Number,
            },
        ],
        connections: [
            {
                type: mongoose.Schema.Types.ObjectId,
                ref: "User",
            },
        ],
        // New company fields (only used if role is 'empresario')
        companyInfo: {
            companyName: { type: String, default: "" },
            industry: { type: String, default: "" },
            foundedYear: { type: Number },
            website: { type: String, default: "" },
            employees: { type: String, default: "" }, // Size range like "1-10", "11-50", etc.
            description: { type: String, default: "" },
            logo: { type: String, default: "" },
            location: { type: String, default: "" },
            contactEmail: { type: String, default: "" },
            contactPhone: { type: String, default: "" }
        }
    },
    { timestamps: true }
);

const User = mongoose.model("User", userSchema);
export default User;

================
File: backend/routes/admin.route.js
================
// backend/routes/admin.route.js
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import { isAdmin } from "../middleware/admin.middleware.js";
import { createUser, getAllUsers, updateUserRole, deleteUser, resetUserPassword } from "../controllers/admin.controller.js";
import { 
  banUser,
  getBannedUsers,
  unbanUser
} from "../controllers/admin.controller.js";




const router = express.Router();

router.post("/users", protectRoute, isAdmin, createUser);
router.get("/users", protectRoute, isAdmin, getAllUsers);
router.put("/users/:id/role", protectRoute, isAdmin, updateUserRole);
router.delete("/users/:id", protectRoute, isAdmin, deleteUser);

// New ban routes
router.post("/users/:userId/ban", protectRoute, isAdmin, banUser);
router.get("/banned-users", protectRoute, isAdmin, getBannedUsers);
router.delete("/banned-users/:studentId", protectRoute, isAdmin, unbanUser);

router.post("/users/:id/reset-password", protectRoute, isAdmin, resetUserPassword);

export default router;

================
File: backend/routes/announcement.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import { isAdmin } from "../middleware/admin.middleware.js";
import {
  getAnnouncements,
  createAnnouncement,
  deleteAnnouncement
} from "../controllers/announcement.controller.js";

const router = express.Router();

// Get all announcements (accessible to students and admins)
router.get("/", protectRoute, getAnnouncements);

// Create a new announcement (admin only)
router.post("/create", protectRoute, isAdmin, createAnnouncement);

// Delete an announcement (admin only)
router.delete("/:id", protectRoute, isAdmin, deleteAnnouncement);

export default router;

================
File: backend/routes/auth.route.js
================
import express from "express";
import { login, logout, signup, getCurrentUser } from "../controllers/auth.controller.js";
import { protectRoute } from "../middleware/auth.middleware.js";

const router = express.Router();

router.post("/signup", signup);
router.post("/login", login);
router.post("/logout", logout);

router.get("/me", protectRoute, getCurrentUser);

export default router;

================
File: backend/routes/connection.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
	acceptConnectionRequest,
	getConnectionRequests,
	getConnectionStatus,
	getUserConnections,
	rejectConnectionRequest,
	removeConnection,
	sendConnectionRequest,
} from "../controllers/connection.controller.js";

const router = express.Router();

router.post("/request/:userId", protectRoute, sendConnectionRequest);
router.put("/accept/:requestId", protectRoute, acceptConnectionRequest);
router.put("/reject/:requestId", protectRoute, rejectConnectionRequest);
// Get all connection requests for the current user
router.get("/requests", protectRoute, getConnectionRequests);
// Get all connections for a user
router.get("/", protectRoute, getUserConnections);
router.delete("/:userId", protectRoute, removeConnection);
router.get("/status/:userId", protectRoute, getConnectionStatus);

export default router;

================
File: backend/routes/jobPost.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import { isAdmin } from "../middleware/admin.middleware.js";
import {
  getJobPosts,
  createJobPost,
  getJobPostById,
  updateJobPost,
  deleteJobPost,
  changeJobStatus
} from "../controllers/jobPost.controller.js";

const router = express.Router();

// Get all job posts (accessible to students and admins)
router.get("/", protectRoute, getJobPosts);

// Get a specific job post by ID
router.get("/:id", protectRoute, getJobPostById);

// Create a new job post (admin only)
router.post("/create", protectRoute, isAdmin, createJobPost);

// Update a job post (admin only)
router.put("/:id", protectRoute, isAdmin, updateJobPost);

// Delete a job post (admin only)
router.delete("/:id", protectRoute, isAdmin, deleteJobPost);

// Change job post status (admin only)
router.patch("/:id/status", protectRoute, isAdmin, changeJobStatus);

export default router;

================
File: backend/routes/notification.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
	deleteNotification,
	getUserNotifications,
	markNotificationAsRead,
} from "../controllers/notification.controller.js";

const router = express.Router();

router.get("/", protectRoute, getUserNotifications);

router.put("/:id/read", protectRoute, markNotificationAsRead);
router.delete("/:id", protectRoute, deleteNotification);

export default router;

================
File: backend/routes/post.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
	createPost,
	getFeedPosts,
	deletePost,
	getPostById,
	createComment,
	likePost,
} from "../controllers/post.controller.js";

const router = express.Router();

router.get("/", protectRoute, getFeedPosts);
router.post("/create", protectRoute, createPost);
router.delete("/delete/:id", protectRoute, deletePost);
router.get("/:id", protectRoute, getPostById);
router.post("/:id/comment", protectRoute, createComment);
router.post("/:id/like", protectRoute, likePost);

export default router;

================
File: backend/routes/project.route.js
================
// backend/routes/project.route.js
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
    getProjects,
    createProject,
    getProjectById,
    updateProject,
    deleteProject,
    toggleInterestInProject,
    addCommentToProject,
    likeProject
} from "../controllers/project.controller.js";

const router = express.Router();

// Get all projects (with filtering options)
router.get("/", protectRoute, getProjects);

// Create a new project
router.post("/create", protectRoute, createProject);

// Get a specific project
router.get("/:id", protectRoute, getProjectById);

// Update a project
router.put("/:id", protectRoute, updateProject);

// Delete a project
router.delete("/:id", protectRoute, deleteProject);

// Toggle interest in a project
router.post("/:id/interest", protectRoute, toggleInterestInProject);

// Add a comment to a project
router.post("/:id/comment", protectRoute, addCommentToProject);

// Like a project
router.post("/:id/like", protectRoute, likeProject);

export default router;

================
File: backend/routes/user.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import { getSuggestedConnections, getPublicProfile, updateProfile,completeFirstLoginSetup } from "../controllers/user.controller.js";

const router = express.Router();

router.get("/suggestions", protectRoute, getSuggestedConnections);
router.get("/:username", protectRoute, getPublicProfile);

router.put("/profile", protectRoute, updateProfile);
router.put("/complete-first-login", protectRoute, completeFirstLoginSetup);

export default router;

================
File: backend/server.js
================
// backend/server.js
import express from "express";
import dotenv from "dotenv";
import cookieParser from "cookie-parser";
import cors from "cors";
import path from "path";
import authRoutes from "./routes/auth.route.js";
import userRoutes from "./routes/user.route.js";
import postRoutes from "./routes/post.route.js";
import notificationRoutes from "./routes/notification.route.js";
import connectionRoutes from "./routes/connection.route.js";
import adminRoutes from "./routes/admin.route.js";
import projectRoutes from "./routes/project.route.js"; // Add this line
import { connectDB } from "./lib/db.js";
import { cleanupExpiredProjects } from "./jobs/projectCleanup.js"; // Add this if you want automatic cleanup
import announcementRoutes from "./routes/announcement.route.js";
import jobPostRoutes from "./routes/jobPost.route.js";


dotenv.config();
const app = express();
const PORT = process.env.PORT || 5000;
const __dirname = path.resolve();

if (process.env.NODE_ENV !== "production") {
    app.use(
        cors({
            origin: ["http://localhost:5173", "http://127.0.0.1:5173"],
            credentials: true,
        })
    );
}

// Update these lines
app.use(express.json({ limit: "50mb" }));
app.use(express.urlencoded({ limit: "50mb", extended: true }));
app.use(cookieParser());

// Routes
app.use("/api/v1/auth", authRoutes);
app.use("/api/v1/users", userRoutes);
app.use("/api/v1/posts", postRoutes);
app.use("/api/v1/notifications", notificationRoutes);
app.use("/api/v1/connections", connectionRoutes);
app.use("/api/v1/admin", adminRoutes);
app.use("/api/v1/projects", projectRoutes); // Add this line
app.use("/api/v1/announcements", announcementRoutes);
app.use("/api/v1/jobs", jobPostRoutes);

 //esto hace que el frontend y el backend funcionen en el mismo lugar 
if (process.env.NODE_ENV === "production") {
    //el dirname es donde se inicia la pagina una vez que empieza todo 
    app.use(express.static(path.join(__dirname, "/frontend/dist")));
    app.get("*", (req, res) => {
       //esto hace que en caso de que metan otra dirección se reenvie al usuario al index 
        res.sendFile(path.resolve(__dirname, "frontend", "dist", "index.html"));
        

    });
}

// Optional: Set up automatic cleanup of expired projects
// This will run the cleanup job every day at midnight
if (process.env.NODE_ENV === "production") {
    setInterval(async () => {
        try {
            await cleanupExpiredProjects();
            console.log("Completed expired projects cleanup job");
        } catch (error) {
            console.error("Error in expired projects cleanup job:", error);
        }
    }, 24 * 60 * 60 * 1000); // Run every 24 hours
}

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
    connectDB();
});

================
File: backend/teclogoazul.svg
================
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
 "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000"
 preserveAspectRatio="xMidYMid meet">

<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M759 4935 c-15 -8 -30 -22 -34 -32 -4 -10 -28 -110 -54 -221 l-46
-204 -145 -48 c-80 -27 -160 -54 -178 -61 l-32 -13 0 -267 0 -266 178 -7 c627
-25 1005 -124 1442 -379 84 -49 95 -53 98 -36 7 42 -57 250 -97 315 -26 42
-192 152 -355 234 -208 105 -468 180 -679 197 -43 3 -80 9 -82 13 -7 11 95 28
242 42 273 25 578 -34 836 -163 177 -88 289 -169 438 -318 246 -246 390 -508
459 -836 28 -132 37 -360 20 -503 -11 -96 -62 -327 -74 -340 -3 -3 -33 3 -68
13 -146 41 -278 28 -379 -36 l-46 -29 14 -53 c38 -144 23 -306 -40 -421 -51
-93 -132 -146 -249 -161 -46 -6 -48 -7 -48 -40 0 -53 -34 -147 -74 -208 -83
-125 -219 -212 -415 -265 -84 -22 -116 -26 -256 -26 -141 -1 -166 2 -215 21
-45 17 -81 22 -195 25 -130 4 -147 7 -240 40 -55 19 -126 47 -157 61 l-58 27
0 -104 0 -104 72 -35 c65 -32 187 -75 259 -92 25 -6 27 -15 69 -208 41 -187
47 -204 76 -235 l33 -33 360 3 361 3 25 25 c21 21 32 58 69 233 24 115 47 211
49 214 3 3 58 22 122 44 l117 39 160 -141 c177 -156 200 -167 261 -131 46 26
455 328 490 360 15 14 31 42 37 61 10 36 -2 67 -133 352 l-35 76 59 84 c101
143 76 129 209 114 63 -8 165 -17 225 -20 108 -7 110 -7 133 18 16 17 53 118
118 323 92 293 104 347 84 383 -5 10 -95 67 -200 127 l-190 108 0 127 0 127
192 114 c152 90 195 120 203 142 8 23 -7 77 -94 339 -57 172 -110 322 -118
335 -25 40 -48 42 -269 16 -115 -13 -212 -23 -216 -22 -4 2 -41 48 -82 102
-73 97 -74 100 -62 130 7 17 45 106 85 198 39 92 71 178 71 192 0 14 -12 39
-27 55 -39 41 -520 380 -550 387 -39 10 -71 -11 -232 -159 l-150 -138 -98 31
c-54 18 -109 35 -122 39 -23 7 -28 22 -72 222 -42 188 -51 217 -74 237 -26 22
-28 22 -363 22 -273 -1 -342 -4 -363 -15z"/>
<path d="M264 3726 c-11 -44 10 -76 49 -76 137 0 588 -78 747 -129 l91 -29 14
35 c8 19 24 48 36 64 12 17 20 32 18 33 -2 2 -58 17 -124 34 -218 55 -387 78
-667 89 l-157 6 -7 -27z"/>
<path d="M2010 3591 c36 -93 53 -207 47 -310 -4 -53 -9 -108 -12 -122 -6 -25
-3 -27 72 -54 157 -55 281 -132 323 -199 30 -49 30 -134 0 -174 -22 -30 -20
-52 4 -52 7 0 33 18 58 40 62 54 90 122 96 230 14 288 -184 540 -528 669 -78
30 -81 29 -60 -28z"/>
<path d="M264 3564 c-4 -14 -2 -39 2 -57 l9 -31 175 -32 c222 -41 453 -93 573
-130 16 -5 18 1 15 72 l-3 78 -50 13 c-154 41 -592 113 -682 113 -27 0 -34 -5
-39 -26z"/>
<path d="M1323 3570 c-149 -76 -95 -302 72 -302 119 0 195 117 147 224 -38 87
-134 121 -219 78z m176 -64 c21 -25 9 -69 -21 -80 -50 -17 -89 42 -52 78 19
20 58 21 73 2z"/>
<path d="M1645 3413 c-13 -87 -61 -155 -140 -196 -56 -30 -164 -30 -221 0 -71
37 -134 126 -134 187 0 27 -35 43 -44 19 -30 -77 46 -257 133 -317 l37 -26
100 15 c54 8 134 15 178 15 92 0 267 -24 327 -45 23 -8 47 -15 54 -15 15 0 43
95 54 184 l7 67 -30 19 c-33 20 -257 122 -292 134 -19 6 -22 2 -29 -41z"/>
<path d="M264 3374 c-6 -25 1 -113 11 -122 10 -10 360 -116 525 -158 127 -33
203 -47 278 -51 56 -3 102 -3 102 1 0 4 -19 30 -41 59 -23 29 -50 71 -61 94
-20 46 -11 42 -173 82 -108 26 -598 121 -629 121 -3 0 -9 -12 -12 -26z"/>
<path d="M270 3141 c-18 -34 -9 -246 12 -266 2 -2 91 3 198 10 107 8 253 14
323 15 l128 0 60 42 59 42 -107 18 c-125 21 -299 62 -500 118 -78 22 -147 40
-152 40 -6 0 -15 -9 -21 -19z"/>
<path d="M2005 3012 c-9 -31 -18 -64 -21 -73 -3 -12 -21 -18 -62 -22 -60 -5
-151 -43 -136 -56 15 -13 90 -31 129 -31 32 0 36 -2 25 -15 -7 -8 -21 -15 -32
-15 -10 0 -16 -4 -13 -10 3 -5 1 -18 -5 -29 -10 -19 -12 -19 -58 -5 -81 27
-79 25 -47 39 l30 13 -28 11 c-47 18 -66 13 -113 -35 -110 -109 -139 -295 -67
-427 30 -54 79 -97 144 -127 56 -25 73 -25 127 1 42 21 44 24 39 55 -4 24 -2
34 7 34 20 0 47 35 36 46 -5 5 -6 22 -2 39 8 28 13 30 67 36 40 5 63 13 72 25
28 39 9 132 -60 291 -41 94 -37 105 36 109 53 2 78 33 85 102 5 54 10 49 -85
82 l-52 19 -16 -57z"/>
<path d="M1410 3039 c-138 -15 -303 -68 -373 -121 -16 -12 -5 -14 81 -15 234
-4 353 -54 381 -160 7 -26 7 -26 34 19 34 59 90 117 146 152 50 32 142 66 178
66 35 0 27 16 -14 28 -109 31 -301 45 -433 31z"/>
<path d="M580 2839 c-202 -11 -292 -24 -307 -45 -17 -23 -17 -105 0 -126 10
-13 48 -17 232 -22 121 -3 263 -10 315 -16 102 -11 333 -48 357 -57 10 -4 8 6
-8 36 -30 57 -23 127 18 185 l30 43 -150 6 c-174 8 -298 7 -487 -4z"/>
<path d="M1250 2772 c-57 -58 -45 -153 25 -186 41 -20 68 -20 105 -1 42 21 60
53 60 103 0 37 -6 50 -34 78 -29 29 -41 34 -81 34 -38 0 -52 -5 -75 -28z m120
-42 c40 -40 13 -100 -45 -100 -40 0 -55 16 -55 56 0 56 61 83 100 44z"/>
<path d="M1290 2685 c0 -10 11 -15 35 -15 24 0 35 5 35 15 0 10 -11 15 -35 15
-24 0 -35 -5 -35 -15z"/>
<path d="M289 2583 c-22 -5 -28 -58 -22 -187 5 -82 9 -106 20 -106 8 0 74 36
148 79 73 44 189 108 257 143 l123 62 -55 7 c-60 8 -445 9 -471 2z"/>
<path d="M1450 2560 c-14 -14 -33 -29 -43 -35 -15 -9 -14 -15 11 -64 28 -56
145 -191 156 -180 4 4 -7 28 -23 54 -36 57 -58 121 -69 195 l-7 55 -25 -25z"/>
<path d="M855 2558 c-45 -25 -328 -207 -447 -286 -105 -70 -131 -92 -148 -126
-31 -66 -44 -190 -31 -302 12 -99 39 -195 56 -201 6 -2 51 63 100 144 192 314
353 548 484 698 42 48 56 72 48 77 -17 11 -39 9 -62 -4z"/>
<path d="M946 2469 c-190 -241 -414 -598 -580 -929 -168 -333 -166 -326 -99
-401 76 -84 202 -126 404 -136 l126 -6 7 149 c25 534 104 962 241 1301 19 48
33 88 32 90 -2 1 -17 6 -34 9 -29 6 -35 1 -97 -77z"/>
<path d="M1112 2451 c-70 -182 -122 -481 -143 -816 -14 -219 -6 -662 11 -679
7 -7 70 -12 158 -14 170 -4 275 15 391 70 92 43 190 143 219 221 35 93 31 106
-40 147 -77 44 -196 154 -252 234 -137 192 -199 418 -199 719 l0 167 -36 9
c-86 21 -77 26 -109 -58z"/>
<path d="M1292 2378 c18 -378 229 -752 501 -888 98 -49 139 -58 182 -37 59 28
122 121 161 237 21 63 26 222 8 240 -9 9 -29 6 -79 -9 -156 -48 -329 -3 -491
127 -116 94 -227 261 -255 387 -20 92 -32 66 -27 -57z"/>
<path d="M1344 2463 c3 -16 28 -71 53 -123 107 -214 345 -378 516 -356 53 7
135 44 156 70 12 14 10 16 -16 16 -45 0 -120 26 -163 55 -30 21 -54 28 -99 30
-89 5 -162 30 -228 78 -76 57 -124 113 -162 193 -19 40 -37 64 -47 64 -12 0
-15 -6 -10 -27z"/>
</g>
</svg>

================
File: frontend/dist/assets/index-CszfmkhN.js
================
var Ec=e=>{throw TypeError(e)};var pl=(e,t,n)=>t.has(e)||Ec("Cannot "+n);var w=(e,t,n)=>(pl(e,t,"read from private field"),n?n.call(e):t.get(e)),A=(e,t,n)=>t.has(e)?Ec("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,n),D=(e,t,n,r)=>(pl(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n),W=(e,t,n)=>(pl(e,t,"access private method"),n);var Sa=(e,t,n,r)=>({set _(s){D(e,t,s,n)},get _(){return w(e,t,r)}});function fg(e,t){for(var n=0;n<t.length;n++){const r=t[n];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in e)){const a=Object.getOwnPropertyDescriptor(r,s);a&&Object.defineProperty(e,s,a.get?a:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const l of a.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function n(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(s){if(s.ep)return;s.ep=!0;const a=n(s);fetch(s.href,a)}})();function hg(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Ff={exports:{}},Wi={},Lf={exports:{}},H={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ca=Symbol.for("react.element"),mg=Symbol.for("react.portal"),pg=Symbol.for("react.fragment"),gg=Symbol.for("react.strict_mode"),yg=Symbol.for("react.profiler"),xg=Symbol.for("react.provider"),vg=Symbol.for("react.context"),wg=Symbol.for("react.forward_ref"),jg=Symbol.for("react.suspense"),Ng=Symbol.for("react.memo"),bg=Symbol.for("react.lazy"),Pc=Symbol.iterator;function Sg(e){return e===null||typeof e!="object"?null:(e=Pc&&e[Pc]||e["@@iterator"],typeof e=="function"?e:null)}var zf={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Af=Object.assign,If={};function ss(e,t,n){this.props=e,this.context=t,this.refs=If,this.updater=n||zf}ss.prototype.isReactComponent={};ss.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};ss.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function Uf(){}Uf.prototype=ss.prototype;function pu(e,t,n){this.props=e,this.context=t,this.refs=If,this.updater=n||zf}var gu=pu.prototype=new Uf;gu.constructor=pu;Af(gu,ss.prototype);gu.isPureReactComponent=!0;var Rc=Array.isArray,$f=Object.prototype.hasOwnProperty,yu={current:null},qf={key:!0,ref:!0,__self:!0,__source:!0};function Bf(e,t,n){var r,s={},a=null,l=null;if(t!=null)for(r in t.ref!==void 0&&(l=t.ref),t.key!==void 0&&(a=""+t.key),t)$f.call(t,r)&&!qf.hasOwnProperty(r)&&(s[r]=t[r]);var o=arguments.length-2;if(o===1)s.children=n;else if(1<o){for(var u=Array(o),c=0;c<o;c++)u[c]=arguments[c+2];s.children=u}if(e&&e.defaultProps)for(r in o=e.defaultProps,o)s[r]===void 0&&(s[r]=o[r]);return{$$typeof:ca,type:e,key:a,ref:l,props:s,_owner:yu.current}}function kg(e,t){return{$$typeof:ca,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function xu(e){return typeof e=="object"&&e!==null&&e.$$typeof===ca}function Cg(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(n){return t[n]})}var Oc=/\/+/g;function gl(e,t){return typeof e=="object"&&e!==null&&e.key!=null?Cg(""+e.key):t.toString(36)}function Ha(e,t,n,r,s){var a=typeof e;(a==="undefined"||a==="boolean")&&(e=null);var l=!1;if(e===null)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case ca:case mg:l=!0}}if(l)return l=e,s=s(l),e=r===""?"."+gl(l,0):r,Rc(s)?(n="",e!=null&&(n=e.replace(Oc,"$&/")+"/"),Ha(s,t,n,"",function(c){return c})):s!=null&&(xu(s)&&(s=kg(s,n+(!s.key||l&&l.key===s.key?"":(""+s.key).replace(Oc,"$&/")+"/")+e)),t.push(s)),1;if(l=0,r=r===""?".":r+":",Rc(e))for(var o=0;o<e.length;o++){a=e[o];var u=r+gl(a,o);l+=Ha(a,t,n,u,s)}else if(u=Sg(e),typeof u=="function")for(e=u.call(e),o=0;!(a=e.next()).done;)a=a.value,u=r+gl(a,o++),l+=Ha(a,t,n,u,s);else if(a==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function ka(e,t,n){if(e==null)return e;var r=[],s=0;return Ha(e,r,"","",function(a){return t.call(n,a,s++)}),r}function Eg(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(n){(e._status===0||e._status===-1)&&(e._status=1,e._result=n)},function(n){(e._status===0||e._status===-1)&&(e._status=2,e._result=n)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var Ie={current:null},Va={transition:null},Pg={ReactCurrentDispatcher:Ie,ReactCurrentBatchConfig:Va,ReactCurrentOwner:yu};function Wf(){throw Error("act(...) is not supported in production builds of React.")}H.Children={map:ka,forEach:function(e,t,n){ka(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return ka(e,function(){t++}),t},toArray:function(e){return ka(e,function(t){return t})||[]},only:function(e){if(!xu(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};H.Component=ss;H.Fragment=pg;H.Profiler=yg;H.PureComponent=pu;H.StrictMode=gg;H.Suspense=jg;H.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Pg;H.act=Wf;H.cloneElement=function(e,t,n){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=Af({},e.props),s=e.key,a=e.ref,l=e._owner;if(t!=null){if(t.ref!==void 0&&(a=t.ref,l=yu.current),t.key!==void 0&&(s=""+t.key),e.type&&e.type.defaultProps)var o=e.type.defaultProps;for(u in t)$f.call(t,u)&&!qf.hasOwnProperty(u)&&(r[u]=t[u]===void 0&&o!==void 0?o[u]:t[u])}var u=arguments.length-2;if(u===1)r.children=n;else if(1<u){o=Array(u);for(var c=0;c<u;c++)o[c]=arguments[c+2];r.children=o}return{$$typeof:ca,type:e.type,key:s,ref:a,props:r,_owner:l}};H.createContext=function(e){return e={$$typeof:vg,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:xg,_context:e},e.Consumer=e};H.createElement=Bf;H.createFactory=function(e){var t=Bf.bind(null,e);return t.type=e,t};H.createRef=function(){return{current:null}};H.forwardRef=function(e){return{$$typeof:wg,render:e}};H.isValidElement=xu;H.lazy=function(e){return{$$typeof:bg,_payload:{_status:-1,_result:e},_init:Eg}};H.memo=function(e,t){return{$$typeof:Ng,type:e,compare:t===void 0?null:t}};H.startTransition=function(e){var t=Va.transition;Va.transition={};try{e()}finally{Va.transition=t}};H.unstable_act=Wf;H.useCallback=function(e,t){return Ie.current.useCallback(e,t)};H.useContext=function(e){return Ie.current.useContext(e)};H.useDebugValue=function(){};H.useDeferredValue=function(e){return Ie.current.useDeferredValue(e)};H.useEffect=function(e,t){return Ie.current.useEffect(e,t)};H.useId=function(){return Ie.current.useId()};H.useImperativeHandle=function(e,t,n){return Ie.current.useImperativeHandle(e,t,n)};H.useInsertionEffect=function(e,t){return Ie.current.useInsertionEffect(e,t)};H.useLayoutEffect=function(e,t){return Ie.current.useLayoutEffect(e,t)};H.useMemo=function(e,t){return Ie.current.useMemo(e,t)};H.useReducer=function(e,t,n){return Ie.current.useReducer(e,t,n)};H.useRef=function(e){return Ie.current.useRef(e)};H.useState=function(e){return Ie.current.useState(e)};H.useSyncExternalStore=function(e,t,n){return Ie.current.useSyncExternalStore(e,t,n)};H.useTransition=function(){return Ie.current.useTransition()};H.version="18.3.1";Lf.exports=H;var N=Lf.exports;const Rg=hg(N),Og=fg({__proto__:null,default:Rg},[N]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Tg=N,Dg=Symbol.for("react.element"),_g=Symbol.for("react.fragment"),Mg=Object.prototype.hasOwnProperty,Fg=Tg.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,Lg={key:!0,ref:!0,__self:!0,__source:!0};function Qf(e,t,n){var r,s={},a=null,l=null;n!==void 0&&(a=""+n),t.key!==void 0&&(a=""+t.key),t.ref!==void 0&&(l=t.ref);for(r in t)Mg.call(t,r)&&!Lg.hasOwnProperty(r)&&(s[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps,t)s[r]===void 0&&(s[r]=t[r]);return{$$typeof:Dg,type:e,key:a,ref:l,props:s,_owner:Fg.current}}Wi.Fragment=_g;Wi.jsx=Qf;Wi.jsxs=Qf;Ff.exports=Wi;var i=Ff.exports,Hf={exports:{}},rt={},Vf={exports:{}},Kf={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(T,B){var Q=T.length;T.push(B);e:for(;0<Q;){var me=Q-1>>>1,be=T[me];if(0<s(be,B))T[me]=B,T[Q]=be,Q=me;else break e}}function n(T){return T.length===0?null:T[0]}function r(T){if(T.length===0)return null;var B=T[0],Q=T.pop();if(Q!==B){T[0]=Q;e:for(var me=0,be=T.length,Na=be>>>1;me<Na;){var An=2*(me+1)-1,ml=T[An],In=An+1,ba=T[In];if(0>s(ml,Q))In<be&&0>s(ba,ml)?(T[me]=ba,T[In]=Q,me=In):(T[me]=ml,T[An]=Q,me=An);else if(In<be&&0>s(ba,Q))T[me]=ba,T[In]=Q,me=In;else break e}}return B}function s(T,B){var Q=T.sortIndex-B.sortIndex;return Q!==0?Q:T.id-B.id}if(typeof performance=="object"&&typeof performance.now=="function"){var a=performance;e.unstable_now=function(){return a.now()}}else{var l=Date,o=l.now();e.unstable_now=function(){return l.now()-o}}var u=[],c=[],h=1,d=null,f=3,g=!1,m=!1,v=!1,j=typeof setTimeout=="function"?setTimeout:null,p=typeof clearTimeout=="function"?clearTimeout:null,y=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function x(T){for(var B=n(c);B!==null;){if(B.callback===null)r(c);else if(B.startTime<=T)r(c),B.sortIndex=B.expirationTime,t(u,B);else break;B=n(c)}}function b(T){if(v=!1,x(T),!m)if(n(u)!==null)m=!0,Z(C);else{var B=n(c);B!==null&&pr(b,B.startTime-T)}}function C(T,B){m=!1,v&&(v=!1,p(E),E=-1),g=!0;var Q=f;try{for(x(B),d=n(u);d!==null&&(!(d.expirationTime>B)||T&&!oe());){var me=d.callback;if(typeof me=="function"){d.callback=null,f=d.priorityLevel;var be=me(d.expirationTime<=B);B=e.unstable_now(),typeof be=="function"?d.callback=be:d===n(u)&&r(u),x(B)}else r(u);d=n(u)}if(d!==null)var Na=!0;else{var An=n(c);An!==null&&pr(b,An.startTime-B),Na=!1}return Na}finally{d=null,f=Q,g=!1}}var O=!1,k=null,E=-1,F=5,I=-1;function oe(){return!(e.unstable_now()-I<F)}function kt(){if(k!==null){var T=e.unstable_now();I=T;var B=!0;try{B=k(!0,T)}finally{B?R():(O=!1,k=null)}}else O=!1}var R;if(typeof y=="function")R=function(){y(kt)};else if(typeof MessageChannel<"u"){var z=new MessageChannel,X=z.port2;z.port1.onmessage=kt,R=function(){X.postMessage(null)}}else R=function(){j(kt,0)};function Z(T){k=T,O||(O=!0,R())}function pr(T,B){E=j(function(){T(e.unstable_now())},B)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(T){T.callback=null},e.unstable_continueExecution=function(){m||g||(m=!0,Z(C))},e.unstable_forceFrameRate=function(T){0>T||125<T?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):F=0<T?Math.floor(1e3/T):5},e.unstable_getCurrentPriorityLevel=function(){return f},e.unstable_getFirstCallbackNode=function(){return n(u)},e.unstable_next=function(T){switch(f){case 1:case 2:case 3:var B=3;break;default:B=f}var Q=f;f=B;try{return T()}finally{f=Q}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(T,B){switch(T){case 1:case 2:case 3:case 4:case 5:break;default:T=3}var Q=f;f=T;try{return B()}finally{f=Q}},e.unstable_scheduleCallback=function(T,B,Q){var me=e.unstable_now();switch(typeof Q=="object"&&Q!==null?(Q=Q.delay,Q=typeof Q=="number"&&0<Q?me+Q:me):Q=me,T){case 1:var be=-1;break;case 2:be=250;break;case 5:be=1073741823;break;case 4:be=1e4;break;default:be=5e3}return be=Q+be,T={id:h++,callback:B,priorityLevel:T,startTime:Q,expirationTime:be,sortIndex:-1},Q>me?(T.sortIndex=Q,t(c,T),n(u)===null&&T===n(c)&&(v?(p(E),E=-1):v=!0,pr(b,Q-me))):(T.sortIndex=be,t(u,T),m||g||(m=!0,Z(C))),T},e.unstable_shouldYield=oe,e.unstable_wrapCallback=function(T){var B=f;return function(){var Q=f;f=B;try{return T.apply(this,arguments)}finally{f=Q}}}})(Kf);Vf.exports=Kf;var zg=Vf.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ag=N,nt=zg;function P(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Yf=new Set,As={};function dr(e,t){Gr(e,t),Gr(e+"Capture",t)}function Gr(e,t){for(As[e]=t,e=0;e<t.length;e++)Yf.add(t[e])}var Wt=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),Gl=Object.prototype.hasOwnProperty,Ig=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Tc={},Dc={};function Ug(e){return Gl.call(Dc,e)?!0:Gl.call(Tc,e)?!1:Ig.test(e)?Dc[e]=!0:(Tc[e]=!0,!1)}function $g(e,t,n,r){if(n!==null&&n.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function qg(e,t,n,r){if(t===null||typeof t>"u"||$g(e,t,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function Ue(e,t,n,r,s,a,l){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=l}var Pe={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){Pe[e]=new Ue(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];Pe[t]=new Ue(t,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){Pe[e]=new Ue(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){Pe[e]=new Ue(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){Pe[e]=new Ue(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){Pe[e]=new Ue(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){Pe[e]=new Ue(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){Pe[e]=new Ue(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){Pe[e]=new Ue(e,5,!1,e.toLowerCase(),null,!1,!1)});var vu=/[\-:]([a-z])/g;function wu(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(vu,wu);Pe[t]=new Ue(t,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(vu,wu);Pe[t]=new Ue(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(vu,wu);Pe[t]=new Ue(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){Pe[e]=new Ue(e,1,!1,e.toLowerCase(),null,!1,!1)});Pe.xlinkHref=new Ue("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){Pe[e]=new Ue(e,1,!1,e.toLowerCase(),null,!0,!0)});function ju(e,t,n,r){var s=Pe.hasOwnProperty(t)?Pe[t]:null;(s!==null?s.type!==0:r||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(qg(t,n,s,r)&&(n=null),r||s===null?Ug(t)&&(n===null?e.removeAttribute(t):e.setAttribute(t,""+n)):s.mustUseProperty?e[s.propertyName]=n===null?s.type===3?!1:"":n:(t=s.attributeName,r=s.attributeNamespace,n===null?e.removeAttribute(t):(s=s.type,n=s===3||s===4&&n===!0?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}var Yt=Ag.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Ca=Symbol.for("react.element"),xr=Symbol.for("react.portal"),vr=Symbol.for("react.fragment"),Nu=Symbol.for("react.strict_mode"),Xl=Symbol.for("react.profiler"),Gf=Symbol.for("react.provider"),Xf=Symbol.for("react.context"),bu=Symbol.for("react.forward_ref"),Jl=Symbol.for("react.suspense"),Zl=Symbol.for("react.suspense_list"),Su=Symbol.for("react.memo"),tn=Symbol.for("react.lazy"),Jf=Symbol.for("react.offscreen"),_c=Symbol.iterator;function fs(e){return e===null||typeof e!="object"?null:(e=_c&&e[_c]||e["@@iterator"],typeof e=="function"?e:null)}var de=Object.assign,yl;function Ss(e){if(yl===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);yl=t&&t[1]||""}return`
`+yl+e}var xl=!1;function vl(e,t){if(!e||xl)return"";xl=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(c){var r=c}Reflect.construct(e,[],t)}else{try{t.call()}catch(c){r=c}e.call(t.prototype)}else{try{throw Error()}catch(c){r=c}e()}}catch(c){if(c&&r&&typeof c.stack=="string"){for(var s=c.stack.split(`
`),a=r.stack.split(`
`),l=s.length-1,o=a.length-1;1<=l&&0<=o&&s[l]!==a[o];)o--;for(;1<=l&&0<=o;l--,o--)if(s[l]!==a[o]){if(l!==1||o!==1)do if(l--,o--,0>o||s[l]!==a[o]){var u=`
`+s[l].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}while(1<=l&&0<=o);break}}}finally{xl=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?Ss(e):""}function Bg(e){switch(e.tag){case 5:return Ss(e.type);case 16:return Ss("Lazy");case 13:return Ss("Suspense");case 19:return Ss("SuspenseList");case 0:case 2:case 15:return e=vl(e.type,!1),e;case 11:return e=vl(e.type.render,!1),e;case 1:return e=vl(e.type,!0),e;default:return""}}function eo(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case vr:return"Fragment";case xr:return"Portal";case Xl:return"Profiler";case Nu:return"StrictMode";case Jl:return"Suspense";case Zl:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case Xf:return(e.displayName||"Context")+".Consumer";case Gf:return(e._context.displayName||"Context")+".Provider";case bu:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Su:return t=e.displayName||null,t!==null?t:eo(e.type)||"Memo";case tn:t=e._payload,e=e._init;try{return eo(e(t))}catch{}}return null}function Wg(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return eo(t);case 8:return t===Nu?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function Pn(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Zf(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function Qg(e){var t=Zf(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var s=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(l){r=""+l,a.call(this,l)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(l){r=""+l},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function Ea(e){e._valueTracker||(e._valueTracker=Qg(e))}function eh(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Zf(e)?e.checked?"true":"false":e.value),e=r,e!==n?(t.setValue(e),!0):!1}function di(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function to(e,t){var n=t.checked;return de({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??e._wrapperState.initialChecked})}function Mc(e,t){var n=t.defaultValue==null?"":t.defaultValue,r=t.checked!=null?t.checked:t.defaultChecked;n=Pn(t.value!=null?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function th(e,t){t=t.checked,t!=null&&ju(e,"checked",t,!1)}function no(e,t){th(e,t);var n=Pn(t.value),r=t.type;if(n!=null)r==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if(r==="submit"||r==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?ro(e,t.type,n):t.hasOwnProperty("defaultValue")&&ro(e,t.type,Pn(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function Fc(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!(r!=="submit"&&r!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,n!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,n!==""&&(e.name=n)}function ro(e,t,n){(t!=="number"||di(e.ownerDocument)!==e)&&(n==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var ks=Array.isArray;function Or(e,t,n,r){if(e=e.options,t){t={};for(var s=0;s<n.length;s++)t["$"+n[s]]=!0;for(n=0;n<e.length;n++)s=t.hasOwnProperty("$"+e[n].value),e[n].selected!==s&&(e[n].selected=s),s&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Pn(n),t=null,s=0;s<e.length;s++){if(e[s].value===n){e[s].selected=!0,r&&(e[s].defaultSelected=!0);return}t!==null||e[s].disabled||(t=e[s])}t!==null&&(t.selected=!0)}}function so(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(P(91));return de({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Lc(e,t){var n=t.value;if(n==null){if(n=t.children,t=t.defaultValue,n!=null){if(t!=null)throw Error(P(92));if(ks(n)){if(1<n.length)throw Error(P(93));n=n[0]}t=n}t==null&&(t=""),n=t}e._wrapperState={initialValue:Pn(n)}}function nh(e,t){var n=Pn(t.value),r=Pn(t.defaultValue);n!=null&&(n=""+n,n!==e.value&&(e.value=n),t.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),r!=null&&(e.defaultValue=""+r)}function zc(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function rh(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ao(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?rh(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Pa,sh=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,n,r,s){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,s)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(Pa=Pa||document.createElement("div"),Pa.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Pa.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function Is(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}var Rs={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Hg=["Webkit","ms","Moz","O"];Object.keys(Rs).forEach(function(e){Hg.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Rs[t]=Rs[e]})});function ah(e,t,n){return t==null||typeof t=="boolean"||t===""?"":n||typeof t!="number"||t===0||Rs.hasOwnProperty(e)&&Rs[e]?(""+t).trim():t+"px"}function ih(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=n.indexOf("--")===0,s=ah(n,t[n],r);n==="float"&&(n="cssFloat"),r?e.setProperty(n,s):e[n]=s}}var Vg=de({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function io(e,t){if(t){if(Vg[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(P(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(P(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(P(61))}if(t.style!=null&&typeof t.style!="object")throw Error(P(62))}}function lo(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var oo=null;function ku(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var uo=null,Tr=null,Dr=null;function Ac(e){if(e=ha(e)){if(typeof uo!="function")throw Error(P(280));var t=e.stateNode;t&&(t=Yi(t),uo(e.stateNode,e.type,t))}}function lh(e){Tr?Dr?Dr.push(e):Dr=[e]:Tr=e}function oh(){if(Tr){var e=Tr,t=Dr;if(Dr=Tr=null,Ac(e),t)for(e=0;e<t.length;e++)Ac(t[e])}}function uh(e,t){return e(t)}function ch(){}var wl=!1;function dh(e,t,n){if(wl)return e(t,n);wl=!0;try{return uh(e,t,n)}finally{wl=!1,(Tr!==null||Dr!==null)&&(ch(),oh())}}function Us(e,t){var n=e.stateNode;if(n===null)return null;var r=Yi(n);if(r===null)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(e=e.type,r=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!r;break e;default:e=!1}if(e)return null;if(n&&typeof n!="function")throw Error(P(231,t,typeof n));return n}var co=!1;if(Wt)try{var hs={};Object.defineProperty(hs,"passive",{get:function(){co=!0}}),window.addEventListener("test",hs,hs),window.removeEventListener("test",hs,hs)}catch{co=!1}function Kg(e,t,n,r,s,a,l,o,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(h){this.onError(h)}}var Os=!1,fi=null,hi=!1,fo=null,Yg={onError:function(e){Os=!0,fi=e}};function Gg(e,t,n,r,s,a,l,o,u){Os=!1,fi=null,Kg.apply(Yg,arguments)}function Xg(e,t,n,r,s,a,l,o,u){if(Gg.apply(this,arguments),Os){if(Os){var c=fi;Os=!1,fi=null}else throw Error(P(198));hi||(hi=!0,fo=c)}}function fr(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function fh(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Ic(e){if(fr(e)!==e)throw Error(P(188))}function Jg(e){var t=e.alternate;if(!t){if(t=fr(e),t===null)throw Error(P(188));return t!==e?null:e}for(var n=e,r=t;;){var s=n.return;if(s===null)break;var a=s.alternate;if(a===null){if(r=s.return,r!==null){n=r;continue}break}if(s.child===a.child){for(a=s.child;a;){if(a===n)return Ic(s),e;if(a===r)return Ic(s),t;a=a.sibling}throw Error(P(188))}if(n.return!==r.return)n=s,r=a;else{for(var l=!1,o=s.child;o;){if(o===n){l=!0,n=s,r=a;break}if(o===r){l=!0,r=s,n=a;break}o=o.sibling}if(!l){for(o=a.child;o;){if(o===n){l=!0,n=a,r=s;break}if(o===r){l=!0,r=a,n=s;break}o=o.sibling}if(!l)throw Error(P(189))}}if(n.alternate!==r)throw Error(P(190))}if(n.tag!==3)throw Error(P(188));return n.stateNode.current===n?e:t}function hh(e){return e=Jg(e),e!==null?mh(e):null}function mh(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=mh(e);if(t!==null)return t;e=e.sibling}return null}var ph=nt.unstable_scheduleCallback,Uc=nt.unstable_cancelCallback,Zg=nt.unstable_shouldYield,e0=nt.unstable_requestPaint,pe=nt.unstable_now,t0=nt.unstable_getCurrentPriorityLevel,Cu=nt.unstable_ImmediatePriority,gh=nt.unstable_UserBlockingPriority,mi=nt.unstable_NormalPriority,n0=nt.unstable_LowPriority,yh=nt.unstable_IdlePriority,Qi=null,_t=null;function r0(e){if(_t&&typeof _t.onCommitFiberRoot=="function")try{_t.onCommitFiberRoot(Qi,e,void 0,(e.current.flags&128)===128)}catch{}}var jt=Math.clz32?Math.clz32:i0,s0=Math.log,a0=Math.LN2;function i0(e){return e>>>=0,e===0?32:31-(s0(e)/a0|0)|0}var Ra=64,Oa=4194304;function Cs(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pi(e,t){var n=e.pendingLanes;if(n===0)return 0;var r=0,s=e.suspendedLanes,a=e.pingedLanes,l=n&268435455;if(l!==0){var o=l&~s;o!==0?r=Cs(o):(a&=l,a!==0&&(r=Cs(a)))}else l=n&~s,l!==0?r=Cs(l):a!==0&&(r=Cs(a));if(r===0)return 0;if(t!==0&&t!==r&&!(t&s)&&(s=r&-r,a=t&-t,s>=a||s===16&&(a&4194240)!==0))return t;if(r&4&&(r|=n&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=r;0<t;)n=31-jt(t),s=1<<n,r|=e[n],t&=~s;return r}function l0(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function o0(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,s=e.expirationTimes,a=e.pendingLanes;0<a;){var l=31-jt(a),o=1<<l,u=s[l];u===-1?(!(o&n)||o&r)&&(s[l]=l0(o,t)):u<=t&&(e.expiredLanes|=o),a&=~o}}function ho(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function xh(){var e=Ra;return Ra<<=1,!(Ra&4194240)&&(Ra=64),e}function jl(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function da(e,t,n){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-jt(t),e[t]=n}function u0(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var s=31-jt(n),a=1<<s;t[s]=0,r[s]=-1,e[s]=-1,n&=~a}}function Eu(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-jt(n),s=1<<r;s&t|e[r]&t&&(e[r]|=t),n&=~s}}var te=0;function vh(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var wh,Pu,jh,Nh,bh,mo=!1,Ta=[],xn=null,vn=null,wn=null,$s=new Map,qs=new Map,rn=[],c0="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function $c(e,t){switch(e){case"focusin":case"focusout":xn=null;break;case"dragenter":case"dragleave":vn=null;break;case"mouseover":case"mouseout":wn=null;break;case"pointerover":case"pointerout":$s.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":qs.delete(t.pointerId)}}function ms(e,t,n,r,s,a){return e===null||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[s]},t!==null&&(t=ha(t),t!==null&&Pu(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,s!==null&&t.indexOf(s)===-1&&t.push(s),e)}function d0(e,t,n,r,s){switch(t){case"focusin":return xn=ms(xn,e,t,n,r,s),!0;case"dragenter":return vn=ms(vn,e,t,n,r,s),!0;case"mouseover":return wn=ms(wn,e,t,n,r,s),!0;case"pointerover":var a=s.pointerId;return $s.set(a,ms($s.get(a)||null,e,t,n,r,s)),!0;case"gotpointercapture":return a=s.pointerId,qs.set(a,ms(qs.get(a)||null,e,t,n,r,s)),!0}return!1}function Sh(e){var t=Bn(e.target);if(t!==null){var n=fr(t);if(n!==null){if(t=n.tag,t===13){if(t=fh(n),t!==null){e.blockedOn=t,bh(e.priority,function(){jh(n)});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Ka(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=po(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var r=new n.constructor(n.type,n);oo=r,n.target.dispatchEvent(r),oo=null}else return t=ha(n),t!==null&&Pu(t),e.blockedOn=n,!1;t.shift()}return!0}function qc(e,t,n){Ka(e)&&n.delete(t)}function f0(){mo=!1,xn!==null&&Ka(xn)&&(xn=null),vn!==null&&Ka(vn)&&(vn=null),wn!==null&&Ka(wn)&&(wn=null),$s.forEach(qc),qs.forEach(qc)}function ps(e,t){e.blockedOn===t&&(e.blockedOn=null,mo||(mo=!0,nt.unstable_scheduleCallback(nt.unstable_NormalPriority,f0)))}function Bs(e){function t(s){return ps(s,e)}if(0<Ta.length){ps(Ta[0],e);for(var n=1;n<Ta.length;n++){var r=Ta[n];r.blockedOn===e&&(r.blockedOn=null)}}for(xn!==null&&ps(xn,e),vn!==null&&ps(vn,e),wn!==null&&ps(wn,e),$s.forEach(t),qs.forEach(t),n=0;n<rn.length;n++)r=rn[n],r.blockedOn===e&&(r.blockedOn=null);for(;0<rn.length&&(n=rn[0],n.blockedOn===null);)Sh(n),n.blockedOn===null&&rn.shift()}var _r=Yt.ReactCurrentBatchConfig,gi=!0;function h0(e,t,n,r){var s=te,a=_r.transition;_r.transition=null;try{te=1,Ru(e,t,n,r)}finally{te=s,_r.transition=a}}function m0(e,t,n,r){var s=te,a=_r.transition;_r.transition=null;try{te=4,Ru(e,t,n,r)}finally{te=s,_r.transition=a}}function Ru(e,t,n,r){if(gi){var s=po(e,t,n,r);if(s===null)Tl(e,t,r,yi,n),$c(e,r);else if(d0(s,e,t,n,r))r.stopPropagation();else if($c(e,r),t&4&&-1<c0.indexOf(e)){for(;s!==null;){var a=ha(s);if(a!==null&&wh(a),a=po(e,t,n,r),a===null&&Tl(e,t,r,yi,n),a===s)break;s=a}s!==null&&r.stopPropagation()}else Tl(e,t,r,null,n)}}var yi=null;function po(e,t,n,r){if(yi=null,e=ku(r),e=Bn(e),e!==null)if(t=fr(e),t===null)e=null;else if(n=t.tag,n===13){if(e=fh(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return yi=e,null}function kh(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(t0()){case Cu:return 1;case gh:return 4;case mi:case n0:return 16;case yh:return 536870912;default:return 16}default:return 16}}var pn=null,Ou=null,Ya=null;function Ch(){if(Ya)return Ya;var e,t=Ou,n=t.length,r,s="value"in pn?pn.value:pn.textContent,a=s.length;for(e=0;e<n&&t[e]===s[e];e++);var l=n-e;for(r=1;r<=l&&t[n-r]===s[a-r];r++);return Ya=s.slice(e,1<r?1-r:void 0)}function Ga(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function Da(){return!0}function Bc(){return!1}function st(e){function t(n,r,s,a,l){this._reactName=n,this._targetInst=s,this.type=r,this.nativeEvent=a,this.target=l,this.currentTarget=null;for(var o in e)e.hasOwnProperty(o)&&(n=e[o],this[o]=n?n(a):a[o]);return this.isDefaultPrevented=(a.defaultPrevented!=null?a.defaultPrevented:a.returnValue===!1)?Da:Bc,this.isPropagationStopped=Bc,this}return de(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Da)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Da)},persist:function(){},isPersistent:Da}),t}var as={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Tu=st(as),fa=de({},as,{view:0,detail:0}),p0=st(fa),Nl,bl,gs,Hi=de({},fa,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Du,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==gs&&(gs&&e.type==="mousemove"?(Nl=e.screenX-gs.screenX,bl=e.screenY-gs.screenY):bl=Nl=0,gs=e),Nl)},movementY:function(e){return"movementY"in e?e.movementY:bl}}),Wc=st(Hi),g0=de({},Hi,{dataTransfer:0}),y0=st(g0),x0=de({},fa,{relatedTarget:0}),Sl=st(x0),v0=de({},as,{animationName:0,elapsedTime:0,pseudoElement:0}),w0=st(v0),j0=de({},as,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),N0=st(j0),b0=de({},as,{data:0}),Qc=st(b0),S0={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},k0={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},C0={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function E0(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=C0[e])?!!t[e]:!1}function Du(){return E0}var P0=de({},fa,{key:function(e){if(e.key){var t=S0[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=Ga(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?k0[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Du,charCode:function(e){return e.type==="keypress"?Ga(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?Ga(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),R0=st(P0),O0=de({},Hi,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Hc=st(O0),T0=de({},fa,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Du}),D0=st(T0),_0=de({},as,{propertyName:0,elapsedTime:0,pseudoElement:0}),M0=st(_0),F0=de({},Hi,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),L0=st(F0),z0=[9,13,27,32],_u=Wt&&"CompositionEvent"in window,Ts=null;Wt&&"documentMode"in document&&(Ts=document.documentMode);var A0=Wt&&"TextEvent"in window&&!Ts,Eh=Wt&&(!_u||Ts&&8<Ts&&11>=Ts),Vc=" ",Kc=!1;function Ph(e,t){switch(e){case"keyup":return z0.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Rh(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var wr=!1;function I0(e,t){switch(e){case"compositionend":return Rh(t);case"keypress":return t.which!==32?null:(Kc=!0,Vc);case"textInput":return e=t.data,e===Vc&&Kc?null:e;default:return null}}function U0(e,t){if(wr)return e==="compositionend"||!_u&&Ph(e,t)?(e=Ch(),Ya=Ou=pn=null,wr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Eh&&t.locale!=="ko"?null:t.data;default:return null}}var $0={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yc(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!$0[e.type]:t==="textarea"}function Oh(e,t,n,r){lh(r),t=xi(t,"onChange"),0<t.length&&(n=new Tu("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Ds=null,Ws=null;function q0(e){$h(e,0)}function Vi(e){var t=br(e);if(eh(t))return e}function B0(e,t){if(e==="change")return t}var Th=!1;if(Wt){var kl;if(Wt){var Cl="oninput"in document;if(!Cl){var Gc=document.createElement("div");Gc.setAttribute("oninput","return;"),Cl=typeof Gc.oninput=="function"}kl=Cl}else kl=!1;Th=kl&&(!document.documentMode||9<document.documentMode)}function Xc(){Ds&&(Ds.detachEvent("onpropertychange",Dh),Ws=Ds=null)}function Dh(e){if(e.propertyName==="value"&&Vi(Ws)){var t=[];Oh(t,Ws,e,ku(e)),dh(q0,t)}}function W0(e,t,n){e==="focusin"?(Xc(),Ds=t,Ws=n,Ds.attachEvent("onpropertychange",Dh)):e==="focusout"&&Xc()}function Q0(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Vi(Ws)}function H0(e,t){if(e==="click")return Vi(t)}function V0(e,t){if(e==="input"||e==="change")return Vi(t)}function K0(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var bt=typeof Object.is=="function"?Object.is:K0;function Qs(e,t){if(bt(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var s=n[r];if(!Gl.call(t,s)||!bt(e[s],t[s]))return!1}return!0}function Jc(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Zc(e,t){var n=Jc(e);e=0;for(var r;n;){if(n.nodeType===3){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=Jc(n)}}function _h(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?_h(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Mh(){for(var e=window,t=di();t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href=="string"}catch{n=!1}if(n)e=t.contentWindow;else break;t=di(e.document)}return t}function Mu(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function Y0(e){var t=Mh(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&_h(n.ownerDocument.documentElement,n)){if(r!==null&&Mu(n)){if(t=r.start,e=r.end,e===void 0&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var s=n.textContent.length,a=Math.min(r.start,s);r=r.end===void 0?a:Math.min(r.end,s),!e.extend&&a>r&&(s=r,r=a,a=s),s=Zc(n,a);var l=Zc(n,r);s&&l&&(e.rangeCount!==1||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&(t=t.createRange(),t.setStart(s.node,s.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(l.node,l.offset)):(t.setEnd(l.node,l.offset),e.addRange(t)))}}for(t=[],e=n;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var G0=Wt&&"documentMode"in document&&11>=document.documentMode,jr=null,go=null,_s=null,yo=!1;function ed(e,t,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;yo||jr==null||jr!==di(r)||(r=jr,"selectionStart"in r&&Mu(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),_s&&Qs(_s,r)||(_s=r,r=xi(go,"onSelect"),0<r.length&&(t=new Tu("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=jr)))}function _a(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Nr={animationend:_a("Animation","AnimationEnd"),animationiteration:_a("Animation","AnimationIteration"),animationstart:_a("Animation","AnimationStart"),transitionend:_a("Transition","TransitionEnd")},El={},Fh={};Wt&&(Fh=document.createElement("div").style,"AnimationEvent"in window||(delete Nr.animationend.animation,delete Nr.animationiteration.animation,delete Nr.animationstart.animation),"TransitionEvent"in window||delete Nr.transitionend.transition);function Ki(e){if(El[e])return El[e];if(!Nr[e])return e;var t=Nr[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in Fh)return El[e]=t[n];return e}var Lh=Ki("animationend"),zh=Ki("animationiteration"),Ah=Ki("animationstart"),Ih=Ki("transitionend"),Uh=new Map,td="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function _n(e,t){Uh.set(e,t),dr(t,[e])}for(var Pl=0;Pl<td.length;Pl++){var Rl=td[Pl],X0=Rl.toLowerCase(),J0=Rl[0].toUpperCase()+Rl.slice(1);_n(X0,"on"+J0)}_n(Lh,"onAnimationEnd");_n(zh,"onAnimationIteration");_n(Ah,"onAnimationStart");_n("dblclick","onDoubleClick");_n("focusin","onFocus");_n("focusout","onBlur");_n(Ih,"onTransitionEnd");Gr("onMouseEnter",["mouseout","mouseover"]);Gr("onMouseLeave",["mouseout","mouseover"]);Gr("onPointerEnter",["pointerout","pointerover"]);Gr("onPointerLeave",["pointerout","pointerover"]);dr("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));dr("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));dr("onBeforeInput",["compositionend","keypress","textInput","paste"]);dr("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));dr("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));dr("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Es="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Z0=new Set("cancel close invalid load scroll toggle".split(" ").concat(Es));function nd(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,Xg(r,t,void 0,e),e.currentTarget=null}function $h(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var r=e[n],s=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var l=r.length-1;0<=l;l--){var o=r[l],u=o.instance,c=o.currentTarget;if(o=o.listener,u!==a&&s.isPropagationStopped())break e;nd(s,o,c),a=u}else for(l=0;l<r.length;l++){if(o=r[l],u=o.instance,c=o.currentTarget,o=o.listener,u!==a&&s.isPropagationStopped())break e;nd(s,o,c),a=u}}}if(hi)throw e=fo,hi=!1,fo=null,e}function ae(e,t){var n=t[No];n===void 0&&(n=t[No]=new Set);var r=e+"__bubble";n.has(r)||(qh(t,e,2,!1),n.add(r))}function Ol(e,t,n){var r=0;t&&(r|=4),qh(n,e,r,t)}var Ma="_reactListening"+Math.random().toString(36).slice(2);function Hs(e){if(!e[Ma]){e[Ma]=!0,Yf.forEach(function(n){n!=="selectionchange"&&(Z0.has(n)||Ol(n,!1,e),Ol(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Ma]||(t[Ma]=!0,Ol("selectionchange",!1,t))}}function qh(e,t,n,r){switch(kh(t)){case 1:var s=h0;break;case 4:s=m0;break;default:s=Ru}n=s.bind(null,t,n,e),s=void 0,!co||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(s=!0),r?s!==void 0?e.addEventListener(t,n,{capture:!0,passive:s}):e.addEventListener(t,n,!0):s!==void 0?e.addEventListener(t,n,{passive:s}):e.addEventListener(t,n,!1)}function Tl(e,t,n,r,s){var a=r;if(!(t&1)&&!(t&2)&&r!==null)e:for(;;){if(r===null)return;var l=r.tag;if(l===3||l===4){var o=r.stateNode.containerInfo;if(o===s||o.nodeType===8&&o.parentNode===s)break;if(l===4)for(l=r.return;l!==null;){var u=l.tag;if((u===3||u===4)&&(u=l.stateNode.containerInfo,u===s||u.nodeType===8&&u.parentNode===s))return;l=l.return}for(;o!==null;){if(l=Bn(o),l===null)return;if(u=l.tag,u===5||u===6){r=a=l;continue e}o=o.parentNode}}r=r.return}dh(function(){var c=a,h=ku(n),d=[];e:{var f=Uh.get(e);if(f!==void 0){var g=Tu,m=e;switch(e){case"keypress":if(Ga(n)===0)break e;case"keydown":case"keyup":g=R0;break;case"focusin":m="focus",g=Sl;break;case"focusout":m="blur",g=Sl;break;case"beforeblur":case"afterblur":g=Sl;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":g=Wc;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":g=y0;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":g=D0;break;case Lh:case zh:case Ah:g=w0;break;case Ih:g=M0;break;case"scroll":g=p0;break;case"wheel":g=L0;break;case"copy":case"cut":case"paste":g=N0;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":g=Hc}var v=(t&4)!==0,j=!v&&e==="scroll",p=v?f!==null?f+"Capture":null:f;v=[];for(var y=c,x;y!==null;){x=y;var b=x.stateNode;if(x.tag===5&&b!==null&&(x=b,p!==null&&(b=Us(y,p),b!=null&&v.push(Vs(y,b,x)))),j)break;y=y.return}0<v.length&&(f=new g(f,m,null,n,h),d.push({event:f,listeners:v}))}}if(!(t&7)){e:{if(f=e==="mouseover"||e==="pointerover",g=e==="mouseout"||e==="pointerout",f&&n!==oo&&(m=n.relatedTarget||n.fromElement)&&(Bn(m)||m[Qt]))break e;if((g||f)&&(f=h.window===h?h:(f=h.ownerDocument)?f.defaultView||f.parentWindow:window,g?(m=n.relatedTarget||n.toElement,g=c,m=m?Bn(m):null,m!==null&&(j=fr(m),m!==j||m.tag!==5&&m.tag!==6)&&(m=null)):(g=null,m=c),g!==m)){if(v=Wc,b="onMouseLeave",p="onMouseEnter",y="mouse",(e==="pointerout"||e==="pointerover")&&(v=Hc,b="onPointerLeave",p="onPointerEnter",y="pointer"),j=g==null?f:br(g),x=m==null?f:br(m),f=new v(b,y+"leave",g,n,h),f.target=j,f.relatedTarget=x,b=null,Bn(h)===c&&(v=new v(p,y+"enter",m,n,h),v.target=x,v.relatedTarget=j,b=v),j=b,g&&m)t:{for(v=g,p=m,y=0,x=v;x;x=gr(x))y++;for(x=0,b=p;b;b=gr(b))x++;for(;0<y-x;)v=gr(v),y--;for(;0<x-y;)p=gr(p),x--;for(;y--;){if(v===p||p!==null&&v===p.alternate)break t;v=gr(v),p=gr(p)}v=null}else v=null;g!==null&&rd(d,f,g,v,!1),m!==null&&j!==null&&rd(d,j,m,v,!0)}}e:{if(f=c?br(c):window,g=f.nodeName&&f.nodeName.toLowerCase(),g==="select"||g==="input"&&f.type==="file")var C=B0;else if(Yc(f))if(Th)C=V0;else{C=Q0;var O=W0}else(g=f.nodeName)&&g.toLowerCase()==="input"&&(f.type==="checkbox"||f.type==="radio")&&(C=H0);if(C&&(C=C(e,c))){Oh(d,C,n,h);break e}O&&O(e,f,c),e==="focusout"&&(O=f._wrapperState)&&O.controlled&&f.type==="number"&&ro(f,"number",f.value)}switch(O=c?br(c):window,e){case"focusin":(Yc(O)||O.contentEditable==="true")&&(jr=O,go=c,_s=null);break;case"focusout":_s=go=jr=null;break;case"mousedown":yo=!0;break;case"contextmenu":case"mouseup":case"dragend":yo=!1,ed(d,n,h);break;case"selectionchange":if(G0)break;case"keydown":case"keyup":ed(d,n,h)}var k;if(_u)e:{switch(e){case"compositionstart":var E="onCompositionStart";break e;case"compositionend":E="onCompositionEnd";break e;case"compositionupdate":E="onCompositionUpdate";break e}E=void 0}else wr?Ph(e,n)&&(E="onCompositionEnd"):e==="keydown"&&n.keyCode===229&&(E="onCompositionStart");E&&(Eh&&n.locale!=="ko"&&(wr||E!=="onCompositionStart"?E==="onCompositionEnd"&&wr&&(k=Ch()):(pn=h,Ou="value"in pn?pn.value:pn.textContent,wr=!0)),O=xi(c,E),0<O.length&&(E=new Qc(E,e,null,n,h),d.push({event:E,listeners:O}),k?E.data=k:(k=Rh(n),k!==null&&(E.data=k)))),(k=A0?I0(e,n):U0(e,n))&&(c=xi(c,"onBeforeInput"),0<c.length&&(h=new Qc("onBeforeInput","beforeinput",null,n,h),d.push({event:h,listeners:c}),h.data=k))}$h(d,t)})}function Vs(e,t,n){return{instance:e,listener:t,currentTarget:n}}function xi(e,t){for(var n=t+"Capture",r=[];e!==null;){var s=e,a=s.stateNode;s.tag===5&&a!==null&&(s=a,a=Us(e,n),a!=null&&r.unshift(Vs(e,a,s)),a=Us(e,t),a!=null&&r.push(Vs(e,a,s))),e=e.return}return r}function gr(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function rd(e,t,n,r,s){for(var a=t._reactName,l=[];n!==null&&n!==r;){var o=n,u=o.alternate,c=o.stateNode;if(u!==null&&u===r)break;o.tag===5&&c!==null&&(o=c,s?(u=Us(n,a),u!=null&&l.unshift(Vs(n,u,o))):s||(u=Us(n,a),u!=null&&l.push(Vs(n,u,o)))),n=n.return}l.length!==0&&e.push({event:t,listeners:l})}var ey=/\r\n?/g,ty=/\u0000|\uFFFD/g;function sd(e){return(typeof e=="string"?e:""+e).replace(ey,`
`).replace(ty,"")}function Fa(e,t,n){if(t=sd(t),sd(e)!==t&&n)throw Error(P(425))}function vi(){}var xo=null,vo=null;function wo(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var jo=typeof setTimeout=="function"?setTimeout:void 0,ny=typeof clearTimeout=="function"?clearTimeout:void 0,ad=typeof Promise=="function"?Promise:void 0,ry=typeof queueMicrotask=="function"?queueMicrotask:typeof ad<"u"?function(e){return ad.resolve(null).then(e).catch(sy)}:jo;function sy(e){setTimeout(function(){throw e})}function Dl(e,t){var n=t,r=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&s.nodeType===8)if(n=s.data,n==="/$"){if(r===0){e.removeChild(s),Bs(t);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=s}while(n);Bs(t)}function jn(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function id(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="$"||n==="$!"||n==="$?"){if(t===0)return e;t--}else n==="/$"&&t++}e=e.previousSibling}return null}var is=Math.random().toString(36).slice(2),Dt="__reactFiber$"+is,Ks="__reactProps$"+is,Qt="__reactContainer$"+is,No="__reactEvents$"+is,ay="__reactListeners$"+is,iy="__reactHandles$"+is;function Bn(e){var t=e[Dt];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Qt]||n[Dt]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=id(e);e!==null;){if(n=e[Dt])return n;e=id(e)}return t}e=n,n=e.parentNode}return null}function ha(e){return e=e[Dt]||e[Qt],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function br(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(P(33))}function Yi(e){return e[Ks]||null}var bo=[],Sr=-1;function Mn(e){return{current:e}}function ie(e){0>Sr||(e.current=bo[Sr],bo[Sr]=null,Sr--)}function se(e,t){Sr++,bo[Sr]=e.current,e.current=t}var Rn={},_e=Mn(Rn),Qe=Mn(!1),sr=Rn;function Xr(e,t){var n=e.type.contextTypes;if(!n)return Rn;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var s={},a;for(a in n)s[a]=t[a];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function He(e){return e=e.childContextTypes,e!=null}function wi(){ie(Qe),ie(_e)}function ld(e,t,n){if(_e.current!==Rn)throw Error(P(168));se(_e,t),se(Qe,n)}function Bh(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var s in r)if(!(s in t))throw Error(P(108,Wg(e)||"Unknown",s));return de({},n,r)}function ji(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Rn,sr=_e.current,se(_e,e),se(Qe,Qe.current),!0}function od(e,t,n){var r=e.stateNode;if(!r)throw Error(P(169));n?(e=Bh(e,t,sr),r.__reactInternalMemoizedMergedChildContext=e,ie(Qe),ie(_e),se(_e,e)):ie(Qe),se(Qe,n)}var At=null,Gi=!1,_l=!1;function Wh(e){At===null?At=[e]:At.push(e)}function ly(e){Gi=!0,Wh(e)}function Fn(){if(!_l&&At!==null){_l=!0;var e=0,t=te;try{var n=At;for(te=1;e<n.length;e++){var r=n[e];do r=r(!0);while(r!==null)}At=null,Gi=!1}catch(s){throw At!==null&&(At=At.slice(e+1)),ph(Cu,Fn),s}finally{te=t,_l=!1}}return null}var kr=[],Cr=0,Ni=null,bi=0,ot=[],ut=0,ar=null,Ut=1,$t="";function Un(e,t){kr[Cr++]=bi,kr[Cr++]=Ni,Ni=e,bi=t}function Qh(e,t,n){ot[ut++]=Ut,ot[ut++]=$t,ot[ut++]=ar,ar=e;var r=Ut;e=$t;var s=32-jt(r)-1;r&=~(1<<s),n+=1;var a=32-jt(t)+s;if(30<a){var l=s-s%5;a=(r&(1<<l)-1).toString(32),r>>=l,s-=l,Ut=1<<32-jt(t)+s|n<<s|r,$t=a+e}else Ut=1<<a|n<<s|r,$t=e}function Fu(e){e.return!==null&&(Un(e,1),Qh(e,1,0))}function Lu(e){for(;e===Ni;)Ni=kr[--Cr],kr[Cr]=null,bi=kr[--Cr],kr[Cr]=null;for(;e===ar;)ar=ot[--ut],ot[ut]=null,$t=ot[--ut],ot[ut]=null,Ut=ot[--ut],ot[ut]=null}var et=null,Ze=null,le=!1,xt=null;function Hh(e,t){var n=ct(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)}function ud(e,t){switch(e.tag){case 5:var n=e.type;return t=t.nodeType!==1||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,et=e,Ze=jn(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,et=e,Ze=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(n=ar!==null?{id:Ut,overflow:$t}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},n=ct(18,null,null,0),n.stateNode=t,n.return=e,e.child=n,et=e,Ze=null,!0):!1;default:return!1}}function So(e){return(e.mode&1)!==0&&(e.flags&128)===0}function ko(e){if(le){var t=Ze;if(t){var n=t;if(!ud(e,t)){if(So(e))throw Error(P(418));t=jn(n.nextSibling);var r=et;t&&ud(e,t)?Hh(r,n):(e.flags=e.flags&-4097|2,le=!1,et=e)}}else{if(So(e))throw Error(P(418));e.flags=e.flags&-4097|2,le=!1,et=e}}}function cd(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;et=e}function La(e){if(e!==et)return!1;if(!le)return cd(e),le=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!wo(e.type,e.memoizedProps)),t&&(t=Ze)){if(So(e))throw Vh(),Error(P(418));for(;t;)Hh(e,t),t=jn(t.nextSibling)}if(cd(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(P(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="/$"){if(t===0){Ze=jn(e.nextSibling);break e}t--}else n!=="$"&&n!=="$!"&&n!=="$?"||t++}e=e.nextSibling}Ze=null}}else Ze=et?jn(e.stateNode.nextSibling):null;return!0}function Vh(){for(var e=Ze;e;)e=jn(e.nextSibling)}function Jr(){Ze=et=null,le=!1}function zu(e){xt===null?xt=[e]:xt.push(e)}var oy=Yt.ReactCurrentBatchConfig;function ys(e,t,n){if(e=n.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(P(309));var r=n.stateNode}if(!r)throw Error(P(147,e));var s=r,a=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===a?t.ref:(t=function(l){var o=s.refs;l===null?delete o[a]:o[a]=l},t._stringRef=a,t)}if(typeof e!="string")throw Error(P(284));if(!n._owner)throw Error(P(290,e))}return e}function za(e,t){throw e=Object.prototype.toString.call(t),Error(P(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function dd(e){var t=e._init;return t(e._payload)}function Kh(e){function t(p,y){if(e){var x=p.deletions;x===null?(p.deletions=[y],p.flags|=16):x.push(y)}}function n(p,y){if(!e)return null;for(;y!==null;)t(p,y),y=y.sibling;return null}function r(p,y){for(p=new Map;y!==null;)y.key!==null?p.set(y.key,y):p.set(y.index,y),y=y.sibling;return p}function s(p,y){return p=kn(p,y),p.index=0,p.sibling=null,p}function a(p,y,x){return p.index=x,e?(x=p.alternate,x!==null?(x=x.index,x<y?(p.flags|=2,y):x):(p.flags|=2,y)):(p.flags|=1048576,y)}function l(p){return e&&p.alternate===null&&(p.flags|=2),p}function o(p,y,x,b){return y===null||y.tag!==6?(y=Ul(x,p.mode,b),y.return=p,y):(y=s(y,x),y.return=p,y)}function u(p,y,x,b){var C=x.type;return C===vr?h(p,y,x.props.children,b,x.key):y!==null&&(y.elementType===C||typeof C=="object"&&C!==null&&C.$$typeof===tn&&dd(C)===y.type)?(b=s(y,x.props),b.ref=ys(p,y,x),b.return=p,b):(b=ri(x.type,x.key,x.props,null,p.mode,b),b.ref=ys(p,y,x),b.return=p,b)}function c(p,y,x,b){return y===null||y.tag!==4||y.stateNode.containerInfo!==x.containerInfo||y.stateNode.implementation!==x.implementation?(y=$l(x,p.mode,b),y.return=p,y):(y=s(y,x.children||[]),y.return=p,y)}function h(p,y,x,b,C){return y===null||y.tag!==7?(y=nr(x,p.mode,b,C),y.return=p,y):(y=s(y,x),y.return=p,y)}function d(p,y,x){if(typeof y=="string"&&y!==""||typeof y=="number")return y=Ul(""+y,p.mode,x),y.return=p,y;if(typeof y=="object"&&y!==null){switch(y.$$typeof){case Ca:return x=ri(y.type,y.key,y.props,null,p.mode,x),x.ref=ys(p,null,y),x.return=p,x;case xr:return y=$l(y,p.mode,x),y.return=p,y;case tn:var b=y._init;return d(p,b(y._payload),x)}if(ks(y)||fs(y))return y=nr(y,p.mode,x,null),y.return=p,y;za(p,y)}return null}function f(p,y,x,b){var C=y!==null?y.key:null;if(typeof x=="string"&&x!==""||typeof x=="number")return C!==null?null:o(p,y,""+x,b);if(typeof x=="object"&&x!==null){switch(x.$$typeof){case Ca:return x.key===C?u(p,y,x,b):null;case xr:return x.key===C?c(p,y,x,b):null;case tn:return C=x._init,f(p,y,C(x._payload),b)}if(ks(x)||fs(x))return C!==null?null:h(p,y,x,b,null);za(p,x)}return null}function g(p,y,x,b,C){if(typeof b=="string"&&b!==""||typeof b=="number")return p=p.get(x)||null,o(y,p,""+b,C);if(typeof b=="object"&&b!==null){switch(b.$$typeof){case Ca:return p=p.get(b.key===null?x:b.key)||null,u(y,p,b,C);case xr:return p=p.get(b.key===null?x:b.key)||null,c(y,p,b,C);case tn:var O=b._init;return g(p,y,x,O(b._payload),C)}if(ks(b)||fs(b))return p=p.get(x)||null,h(y,p,b,C,null);za(y,b)}return null}function m(p,y,x,b){for(var C=null,O=null,k=y,E=y=0,F=null;k!==null&&E<x.length;E++){k.index>E?(F=k,k=null):F=k.sibling;var I=f(p,k,x[E],b);if(I===null){k===null&&(k=F);break}e&&k&&I.alternate===null&&t(p,k),y=a(I,y,E),O===null?C=I:O.sibling=I,O=I,k=F}if(E===x.length)return n(p,k),le&&Un(p,E),C;if(k===null){for(;E<x.length;E++)k=d(p,x[E],b),k!==null&&(y=a(k,y,E),O===null?C=k:O.sibling=k,O=k);return le&&Un(p,E),C}for(k=r(p,k);E<x.length;E++)F=g(k,p,E,x[E],b),F!==null&&(e&&F.alternate!==null&&k.delete(F.key===null?E:F.key),y=a(F,y,E),O===null?C=F:O.sibling=F,O=F);return e&&k.forEach(function(oe){return t(p,oe)}),le&&Un(p,E),C}function v(p,y,x,b){var C=fs(x);if(typeof C!="function")throw Error(P(150));if(x=C.call(x),x==null)throw Error(P(151));for(var O=C=null,k=y,E=y=0,F=null,I=x.next();k!==null&&!I.done;E++,I=x.next()){k.index>E?(F=k,k=null):F=k.sibling;var oe=f(p,k,I.value,b);if(oe===null){k===null&&(k=F);break}e&&k&&oe.alternate===null&&t(p,k),y=a(oe,y,E),O===null?C=oe:O.sibling=oe,O=oe,k=F}if(I.done)return n(p,k),le&&Un(p,E),C;if(k===null){for(;!I.done;E++,I=x.next())I=d(p,I.value,b),I!==null&&(y=a(I,y,E),O===null?C=I:O.sibling=I,O=I);return le&&Un(p,E),C}for(k=r(p,k);!I.done;E++,I=x.next())I=g(k,p,E,I.value,b),I!==null&&(e&&I.alternate!==null&&k.delete(I.key===null?E:I.key),y=a(I,y,E),O===null?C=I:O.sibling=I,O=I);return e&&k.forEach(function(kt){return t(p,kt)}),le&&Un(p,E),C}function j(p,y,x,b){if(typeof x=="object"&&x!==null&&x.type===vr&&x.key===null&&(x=x.props.children),typeof x=="object"&&x!==null){switch(x.$$typeof){case Ca:e:{for(var C=x.key,O=y;O!==null;){if(O.key===C){if(C=x.type,C===vr){if(O.tag===7){n(p,O.sibling),y=s(O,x.props.children),y.return=p,p=y;break e}}else if(O.elementType===C||typeof C=="object"&&C!==null&&C.$$typeof===tn&&dd(C)===O.type){n(p,O.sibling),y=s(O,x.props),y.ref=ys(p,O,x),y.return=p,p=y;break e}n(p,O);break}else t(p,O);O=O.sibling}x.type===vr?(y=nr(x.props.children,p.mode,b,x.key),y.return=p,p=y):(b=ri(x.type,x.key,x.props,null,p.mode,b),b.ref=ys(p,y,x),b.return=p,p=b)}return l(p);case xr:e:{for(O=x.key;y!==null;){if(y.key===O)if(y.tag===4&&y.stateNode.containerInfo===x.containerInfo&&y.stateNode.implementation===x.implementation){n(p,y.sibling),y=s(y,x.children||[]),y.return=p,p=y;break e}else{n(p,y);break}else t(p,y);y=y.sibling}y=$l(x,p.mode,b),y.return=p,p=y}return l(p);case tn:return O=x._init,j(p,y,O(x._payload),b)}if(ks(x))return m(p,y,x,b);if(fs(x))return v(p,y,x,b);za(p,x)}return typeof x=="string"&&x!==""||typeof x=="number"?(x=""+x,y!==null&&y.tag===6?(n(p,y.sibling),y=s(y,x),y.return=p,p=y):(n(p,y),y=Ul(x,p.mode,b),y.return=p,p=y),l(p)):n(p,y)}return j}var Zr=Kh(!0),Yh=Kh(!1),Si=Mn(null),ki=null,Er=null,Au=null;function Iu(){Au=Er=ki=null}function Uu(e){var t=Si.current;ie(Si),e._currentValue=t}function Co(e,t,n){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Mr(e,t){ki=e,Au=Er=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(We=!0),e.firstContext=null)}function ft(e){var t=e._currentValue;if(Au!==e)if(e={context:e,memoizedValue:t,next:null},Er===null){if(ki===null)throw Error(P(308));Er=e,ki.dependencies={lanes:0,firstContext:e}}else Er=Er.next=e;return t}var Wn=null;function $u(e){Wn===null?Wn=[e]:Wn.push(e)}function Gh(e,t,n,r){var s=t.interleaved;return s===null?(n.next=n,$u(t)):(n.next=s.next,s.next=n),t.interleaved=n,Ht(e,r)}function Ht(e,t){e.lanes|=t;var n=e.alternate;for(n!==null&&(n.lanes|=t),n=e,e=e.return;e!==null;)e.childLanes|=t,n=e.alternate,n!==null&&(n.childLanes|=t),n=e,e=e.return;return n.tag===3?n.stateNode:null}var nn=!1;function qu(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Xh(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function qt(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Nn(e,t,n){var r=e.updateQueue;if(r===null)return null;if(r=r.shared,Y&2){var s=r.pending;return s===null?t.next=t:(t.next=s.next,s.next=t),r.pending=t,Ht(e,n)}return s=r.interleaved,s===null?(t.next=t,$u(r)):(t.next=s.next,s.next=t),r.interleaved=t,Ht(e,n)}function Xa(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194240)!==0)){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Eu(e,n)}}function fd(e,t){var n=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var s=null,a=null;if(n=n.firstBaseUpdate,n!==null){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};a===null?s=a=l:a=a.next=l,n=n.next}while(n!==null);a===null?s=a=t:a=a.next=t}else s=a=t;n={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:a,shared:r.shared,effects:r.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ci(e,t,n,r){var s=e.updateQueue;nn=!1;var a=s.firstBaseUpdate,l=s.lastBaseUpdate,o=s.shared.pending;if(o!==null){s.shared.pending=null;var u=o,c=u.next;u.next=null,l===null?a=c:l.next=c,l=u;var h=e.alternate;h!==null&&(h=h.updateQueue,o=h.lastBaseUpdate,o!==l&&(o===null?h.firstBaseUpdate=c:o.next=c,h.lastBaseUpdate=u))}if(a!==null){var d=s.baseState;l=0,h=c=u=null,o=a;do{var f=o.lane,g=o.eventTime;if((r&f)===f){h!==null&&(h=h.next={eventTime:g,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var m=e,v=o;switch(f=t,g=n,v.tag){case 1:if(m=v.payload,typeof m=="function"){d=m.call(g,d,f);break e}d=m;break e;case 3:m.flags=m.flags&-65537|128;case 0:if(m=v.payload,f=typeof m=="function"?m.call(g,d,f):m,f==null)break e;d=de({},d,f);break e;case 2:nn=!0}}o.callback!==null&&o.lane!==0&&(e.flags|=64,f=s.effects,f===null?s.effects=[o]:f.push(o))}else g={eventTime:g,lane:f,tag:o.tag,payload:o.payload,callback:o.callback,next:null},h===null?(c=h=g,u=d):h=h.next=g,l|=f;if(o=o.next,o===null){if(o=s.shared.pending,o===null)break;f=o,o=f.next,f.next=null,s.lastBaseUpdate=f,s.shared.pending=null}}while(!0);if(h===null&&(u=d),s.baseState=u,s.firstBaseUpdate=c,s.lastBaseUpdate=h,t=s.shared.interleaved,t!==null){s=t;do l|=s.lane,s=s.next;while(s!==t)}else a===null&&(s.shared.lanes=0);lr|=l,e.lanes=l,e.memoizedState=d}}function hd(e,t,n){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var r=e[t],s=r.callback;if(s!==null){if(r.callback=null,r=n,typeof s!="function")throw Error(P(191,s));s.call(r)}}}var ma={},Mt=Mn(ma),Ys=Mn(ma),Gs=Mn(ma);function Qn(e){if(e===ma)throw Error(P(174));return e}function Bu(e,t){switch(se(Gs,t),se(Ys,e),se(Mt,ma),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ao(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=ao(t,e)}ie(Mt),se(Mt,t)}function es(){ie(Mt),ie(Ys),ie(Gs)}function Jh(e){Qn(Gs.current);var t=Qn(Mt.current),n=ao(t,e.type);t!==n&&(se(Ys,e),se(Mt,n))}function Wu(e){Ys.current===e&&(ie(Mt),ie(Ys))}var ue=Mn(0);function Ei(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ml=[];function Qu(){for(var e=0;e<Ml.length;e++)Ml[e]._workInProgressVersionPrimary=null;Ml.length=0}var Ja=Yt.ReactCurrentDispatcher,Fl=Yt.ReactCurrentBatchConfig,ir=0,ce=null,ve=null,Se=null,Pi=!1,Ms=!1,Xs=0,uy=0;function Re(){throw Error(P(321))}function Hu(e,t){if(t===null)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!bt(e[n],t[n]))return!1;return!0}function Vu(e,t,n,r,s,a){if(ir=a,ce=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ja.current=e===null||e.memoizedState===null?hy:my,e=n(r,s),Ms){a=0;do{if(Ms=!1,Xs=0,25<=a)throw Error(P(301));a+=1,Se=ve=null,t.updateQueue=null,Ja.current=py,e=n(r,s)}while(Ms)}if(Ja.current=Ri,t=ve!==null&&ve.next!==null,ir=0,Se=ve=ce=null,Pi=!1,t)throw Error(P(300));return e}function Ku(){var e=Xs!==0;return Xs=0,e}function Et(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Se===null?ce.memoizedState=Se=e:Se=Se.next=e,Se}function ht(){if(ve===null){var e=ce.alternate;e=e!==null?e.memoizedState:null}else e=ve.next;var t=Se===null?ce.memoizedState:Se.next;if(t!==null)Se=t,ve=e;else{if(e===null)throw Error(P(310));ve=e,e={memoizedState:ve.memoizedState,baseState:ve.baseState,baseQueue:ve.baseQueue,queue:ve.queue,next:null},Se===null?ce.memoizedState=Se=e:Se=Se.next=e}return Se}function Js(e,t){return typeof t=="function"?t(e):t}function Ll(e){var t=ht(),n=t.queue;if(n===null)throw Error(P(311));n.lastRenderedReducer=e;var r=ve,s=r.baseQueue,a=n.pending;if(a!==null){if(s!==null){var l=s.next;s.next=a.next,a.next=l}r.baseQueue=s=a,n.pending=null}if(s!==null){a=s.next,r=r.baseState;var o=l=null,u=null,c=a;do{var h=c.lane;if((ir&h)===h)u!==null&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:h,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};u===null?(o=u=d,l=r):u=u.next=d,ce.lanes|=h,lr|=h}c=c.next}while(c!==null&&c!==a);u===null?l=r:u.next=o,bt(r,t.memoizedState)||(We=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=u,n.lastRenderedState=r}if(e=n.interleaved,e!==null){s=e;do a=s.lane,ce.lanes|=a,lr|=a,s=s.next;while(s!==e)}else s===null&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function zl(e){var t=ht(),n=t.queue;if(n===null)throw Error(P(311));n.lastRenderedReducer=e;var r=n.dispatch,s=n.pending,a=t.memoizedState;if(s!==null){n.pending=null;var l=s=s.next;do a=e(a,l.action),l=l.next;while(l!==s);bt(a,t.memoizedState)||(We=!0),t.memoizedState=a,t.baseQueue===null&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function Zh(){}function em(e,t){var n=ce,r=ht(),s=t(),a=!bt(r.memoizedState,s);if(a&&(r.memoizedState=s,We=!0),r=r.queue,Yu(rm.bind(null,n,r,e),[e]),r.getSnapshot!==t||a||Se!==null&&Se.memoizedState.tag&1){if(n.flags|=2048,Zs(9,nm.bind(null,n,r,s,t),void 0,null),ke===null)throw Error(P(349));ir&30||tm(n,t,s)}return s}function tm(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=ce.updateQueue,t===null?(t={lastEffect:null,stores:null},ce.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function nm(e,t,n,r){t.value=n,t.getSnapshot=r,sm(t)&&am(e)}function rm(e,t,n){return n(function(){sm(t)&&am(e)})}function sm(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!bt(e,n)}catch{return!0}}function am(e){var t=Ht(e,1);t!==null&&Nt(t,e,1,-1)}function md(e){var t=Et();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Js,lastRenderedState:e},t.queue=e,e=e.dispatch=fy.bind(null,ce,e),[t.memoizedState,e]}function Zs(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},t=ce.updateQueue,t===null?(t={lastEffect:null,stores:null},ce.updateQueue=t,t.lastEffect=e.next=e):(n=t.lastEffect,n===null?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e)),e}function im(){return ht().memoizedState}function Za(e,t,n,r){var s=Et();ce.flags|=e,s.memoizedState=Zs(1|t,n,void 0,r===void 0?null:r)}function Xi(e,t,n,r){var s=ht();r=r===void 0?null:r;var a=void 0;if(ve!==null){var l=ve.memoizedState;if(a=l.destroy,r!==null&&Hu(r,l.deps)){s.memoizedState=Zs(t,n,a,r);return}}ce.flags|=e,s.memoizedState=Zs(1|t,n,a,r)}function pd(e,t){return Za(8390656,8,e,t)}function Yu(e,t){return Xi(2048,8,e,t)}function lm(e,t){return Xi(4,2,e,t)}function om(e,t){return Xi(4,4,e,t)}function um(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function cm(e,t,n){return n=n!=null?n.concat([e]):null,Xi(4,4,um.bind(null,t,e),n)}function Gu(){}function dm(e,t){var n=ht();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&Hu(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function fm(e,t){var n=ht();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&Hu(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function hm(e,t,n){return ir&21?(bt(n,t)||(n=xh(),ce.lanes|=n,lr|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,We=!0),e.memoizedState=n)}function cy(e,t){var n=te;te=n!==0&&4>n?n:4,e(!0);var r=Fl.transition;Fl.transition={};try{e(!1),t()}finally{te=n,Fl.transition=r}}function mm(){return ht().memoizedState}function dy(e,t,n){var r=Sn(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},pm(e))gm(t,n);else if(n=Gh(e,t,n,r),n!==null){var s=ze();Nt(n,e,r,s),ym(n,t,r)}}function fy(e,t,n){var r=Sn(e),s={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(pm(e))gm(t,s);else{var a=e.alternate;if(e.lanes===0&&(a===null||a.lanes===0)&&(a=t.lastRenderedReducer,a!==null))try{var l=t.lastRenderedState,o=a(l,n);if(s.hasEagerState=!0,s.eagerState=o,bt(o,l)){var u=t.interleaved;u===null?(s.next=s,$u(t)):(s.next=u.next,u.next=s),t.interleaved=s;return}}catch{}finally{}n=Gh(e,t,s,r),n!==null&&(s=ze(),Nt(n,e,r,s),ym(n,t,r))}}function pm(e){var t=e.alternate;return e===ce||t!==null&&t===ce}function gm(e,t){Ms=Pi=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function ym(e,t,n){if(n&4194240){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Eu(e,n)}}var Ri={readContext:ft,useCallback:Re,useContext:Re,useEffect:Re,useImperativeHandle:Re,useInsertionEffect:Re,useLayoutEffect:Re,useMemo:Re,useReducer:Re,useRef:Re,useState:Re,useDebugValue:Re,useDeferredValue:Re,useTransition:Re,useMutableSource:Re,useSyncExternalStore:Re,useId:Re,unstable_isNewReconciler:!1},hy={readContext:ft,useCallback:function(e,t){return Et().memoizedState=[e,t===void 0?null:t],e},useContext:ft,useEffect:pd,useImperativeHandle:function(e,t,n){return n=n!=null?n.concat([e]):null,Za(4194308,4,um.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Za(4194308,4,e,t)},useInsertionEffect:function(e,t){return Za(4,2,e,t)},useMemo:function(e,t){var n=Et();return t=t===void 0?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Et();return t=n!==void 0?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=dy.bind(null,ce,e),[r.memoizedState,e]},useRef:function(e){var t=Et();return e={current:e},t.memoizedState=e},useState:md,useDebugValue:Gu,useDeferredValue:function(e){return Et().memoizedState=e},useTransition:function(){var e=md(!1),t=e[0];return e=cy.bind(null,e[1]),Et().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ce,s=Et();if(le){if(n===void 0)throw Error(P(407));n=n()}else{if(n=t(),ke===null)throw Error(P(349));ir&30||tm(r,t,n)}s.memoizedState=n;var a={value:n,getSnapshot:t};return s.queue=a,pd(rm.bind(null,r,a,e),[e]),r.flags|=2048,Zs(9,nm.bind(null,r,a,n,t),void 0,null),n},useId:function(){var e=Et(),t=ke.identifierPrefix;if(le){var n=$t,r=Ut;n=(r&~(1<<32-jt(r)-1)).toString(32)+n,t=":"+t+"R"+n,n=Xs++,0<n&&(t+="H"+n.toString(32)),t+=":"}else n=uy++,t=":"+t+"r"+n.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},my={readContext:ft,useCallback:dm,useContext:ft,useEffect:Yu,useImperativeHandle:cm,useInsertionEffect:lm,useLayoutEffect:om,useMemo:fm,useReducer:Ll,useRef:im,useState:function(){return Ll(Js)},useDebugValue:Gu,useDeferredValue:function(e){var t=ht();return hm(t,ve.memoizedState,e)},useTransition:function(){var e=Ll(Js)[0],t=ht().memoizedState;return[e,t]},useMutableSource:Zh,useSyncExternalStore:em,useId:mm,unstable_isNewReconciler:!1},py={readContext:ft,useCallback:dm,useContext:ft,useEffect:Yu,useImperativeHandle:cm,useInsertionEffect:lm,useLayoutEffect:om,useMemo:fm,useReducer:zl,useRef:im,useState:function(){return zl(Js)},useDebugValue:Gu,useDeferredValue:function(e){var t=ht();return ve===null?t.memoizedState=e:hm(t,ve.memoizedState,e)},useTransition:function(){var e=zl(Js)[0],t=ht().memoizedState;return[e,t]},useMutableSource:Zh,useSyncExternalStore:em,useId:mm,unstable_isNewReconciler:!1};function pt(e,t){if(e&&e.defaultProps){t=de({},t),e=e.defaultProps;for(var n in e)t[n]===void 0&&(t[n]=e[n]);return t}return t}function Eo(e,t,n,r){t=e.memoizedState,n=n(r,t),n=n==null?t:de({},t,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var Ji={isMounted:function(e){return(e=e._reactInternals)?fr(e)===e:!1},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ze(),s=Sn(e),a=qt(r,s);a.payload=t,n!=null&&(a.callback=n),t=Nn(e,a,s),t!==null&&(Nt(t,e,s,r),Xa(t,e,s))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ze(),s=Sn(e),a=qt(r,s);a.tag=1,a.payload=t,n!=null&&(a.callback=n),t=Nn(e,a,s),t!==null&&(Nt(t,e,s,r),Xa(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ze(),r=Sn(e),s=qt(n,r);s.tag=2,t!=null&&(s.callback=t),t=Nn(e,s,r),t!==null&&(Nt(t,e,r,n),Xa(t,e,r))}};function gd(e,t,n,r,s,a,l){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(r,a,l):t.prototype&&t.prototype.isPureReactComponent?!Qs(n,r)||!Qs(s,a):!0}function xm(e,t,n){var r=!1,s=Rn,a=t.contextType;return typeof a=="object"&&a!==null?a=ft(a):(s=He(t)?sr:_e.current,r=t.contextTypes,a=(r=r!=null)?Xr(e,s):Rn),t=new t(n,a),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=Ji,e.stateNode=t,t._reactInternals=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=a),t}function yd(e,t,n,r){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(n,r),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ji.enqueueReplaceState(t,t.state,null)}function Po(e,t,n,r){var s=e.stateNode;s.props=n,s.state=e.memoizedState,s.refs={},qu(e);var a=t.contextType;typeof a=="object"&&a!==null?s.context=ft(a):(a=He(t)?sr:_e.current,s.context=Xr(e,a)),s.state=e.memoizedState,a=t.getDerivedStateFromProps,typeof a=="function"&&(Eo(e,t,a,n),s.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof s.getSnapshotBeforeUpdate=="function"||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(t=s.state,typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount(),t!==s.state&&Ji.enqueueReplaceState(s,s.state,null),Ci(e,n,s,r),s.state=e.memoizedState),typeof s.componentDidMount=="function"&&(e.flags|=4194308)}function ts(e,t){try{var n="",r=t;do n+=Bg(r),r=r.return;while(r);var s=n}catch(a){s=`
Error generating stack: `+a.message+`
`+a.stack}return{value:e,source:t,stack:s,digest:null}}function Al(e,t,n){return{value:e,source:null,stack:n??null,digest:t??null}}function Ro(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var gy=typeof WeakMap=="function"?WeakMap:Map;function vm(e,t,n){n=qt(-1,n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ti||(Ti=!0,Io=r),Ro(e,t)},n}function wm(e,t,n){n=qt(-1,n),n.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r=="function"){var s=t.value;n.payload=function(){return r(s)},n.callback=function(){Ro(e,t)}}var a=e.stateNode;return a!==null&&typeof a.componentDidCatch=="function"&&(n.callback=function(){Ro(e,t),typeof r!="function"&&(bn===null?bn=new Set([this]):bn.add(this));var l=t.stack;this.componentDidCatch(t.value,{componentStack:l!==null?l:""})}),n}function xd(e,t,n){var r=e.pingCache;if(r===null){r=e.pingCache=new gy;var s=new Set;r.set(t,s)}else s=r.get(t),s===void 0&&(s=new Set,r.set(t,s));s.has(n)||(s.add(n),e=Oy.bind(null,e,t,n),t.then(e,e))}function vd(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function wd(e,t,n,r,s){return e.mode&1?(e.flags|=65536,e.lanes=s,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=qt(-1,1),t.tag=2,Nn(n,t,1))),n.lanes|=1),e)}var yy=Yt.ReactCurrentOwner,We=!1;function Le(e,t,n,r){t.child=e===null?Yh(t,null,n,r):Zr(t,e.child,n,r)}function jd(e,t,n,r,s){n=n.render;var a=t.ref;return Mr(t,s),r=Vu(e,t,n,r,a,s),n=Ku(),e!==null&&!We?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Vt(e,t,s)):(le&&n&&Fu(t),t.flags|=1,Le(e,t,r,s),t.child)}function Nd(e,t,n,r,s){if(e===null){var a=n.type;return typeof a=="function"&&!sc(a)&&a.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=a,jm(e,t,a,r,s)):(e=ri(n.type,null,r,t,t.mode,s),e.ref=t.ref,e.return=t,t.child=e)}if(a=e.child,!(e.lanes&s)){var l=a.memoizedProps;if(n=n.compare,n=n!==null?n:Qs,n(l,r)&&e.ref===t.ref)return Vt(e,t,s)}return t.flags|=1,e=kn(a,r),e.ref=t.ref,e.return=t,t.child=e}function jm(e,t,n,r,s){if(e!==null){var a=e.memoizedProps;if(Qs(a,r)&&e.ref===t.ref)if(We=!1,t.pendingProps=r=a,(e.lanes&s)!==0)e.flags&131072&&(We=!0);else return t.lanes=e.lanes,Vt(e,t,s)}return Oo(e,t,n,r,s)}function Nm(e,t,n){var r=t.pendingProps,s=r.children,a=e!==null?e.memoizedState:null;if(r.mode==="hidden")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},se(Rr,Je),Je|=n;else{if(!(n&1073741824))return e=a!==null?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,se(Rr,Je),Je|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=a!==null?a.baseLanes:n,se(Rr,Je),Je|=r}else a!==null?(r=a.baseLanes|n,t.memoizedState=null):r=n,se(Rr,Je),Je|=r;return Le(e,t,s,n),t.child}function bm(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Oo(e,t,n,r,s){var a=He(n)?sr:_e.current;return a=Xr(t,a),Mr(t,s),n=Vu(e,t,n,r,a,s),r=Ku(),e!==null&&!We?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,Vt(e,t,s)):(le&&r&&Fu(t),t.flags|=1,Le(e,t,n,s),t.child)}function bd(e,t,n,r,s){if(He(n)){var a=!0;ji(t)}else a=!1;if(Mr(t,s),t.stateNode===null)ei(e,t),xm(t,n,r),Po(t,n,r,s),r=!0;else if(e===null){var l=t.stateNode,o=t.memoizedProps;l.props=o;var u=l.context,c=n.contextType;typeof c=="object"&&c!==null?c=ft(c):(c=He(n)?sr:_e.current,c=Xr(t,c));var h=n.getDerivedStateFromProps,d=typeof h=="function"||typeof l.getSnapshotBeforeUpdate=="function";d||typeof l.UNSAFE_componentWillReceiveProps!="function"&&typeof l.componentWillReceiveProps!="function"||(o!==r||u!==c)&&yd(t,l,r,c),nn=!1;var f=t.memoizedState;l.state=f,Ci(t,r,l,s),u=t.memoizedState,o!==r||f!==u||Qe.current||nn?(typeof h=="function"&&(Eo(t,n,h,r),u=t.memoizedState),(o=nn||gd(t,n,o,r,f,u,c))?(d||typeof l.UNSAFE_componentWillMount!="function"&&typeof l.componentWillMount!="function"||(typeof l.componentWillMount=="function"&&l.componentWillMount(),typeof l.UNSAFE_componentWillMount=="function"&&l.UNSAFE_componentWillMount()),typeof l.componentDidMount=="function"&&(t.flags|=4194308)):(typeof l.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=o):(typeof l.componentDidMount=="function"&&(t.flags|=4194308),r=!1)}else{l=t.stateNode,Xh(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:pt(t.type,o),l.props=c,d=t.pendingProps,f=l.context,u=n.contextType,typeof u=="object"&&u!==null?u=ft(u):(u=He(n)?sr:_e.current,u=Xr(t,u));var g=n.getDerivedStateFromProps;(h=typeof g=="function"||typeof l.getSnapshotBeforeUpdate=="function")||typeof l.UNSAFE_componentWillReceiveProps!="function"&&typeof l.componentWillReceiveProps!="function"||(o!==d||f!==u)&&yd(t,l,r,u),nn=!1,f=t.memoizedState,l.state=f,Ci(t,r,l,s);var m=t.memoizedState;o!==d||f!==m||Qe.current||nn?(typeof g=="function"&&(Eo(t,n,g,r),m=t.memoizedState),(c=nn||gd(t,n,c,r,f,m,u)||!1)?(h||typeof l.UNSAFE_componentWillUpdate!="function"&&typeof l.componentWillUpdate!="function"||(typeof l.componentWillUpdate=="function"&&l.componentWillUpdate(r,m,u),typeof l.UNSAFE_componentWillUpdate=="function"&&l.UNSAFE_componentWillUpdate(r,m,u)),typeof l.componentDidUpdate=="function"&&(t.flags|=4),typeof l.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof l.componentDidUpdate!="function"||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),typeof l.getSnapshotBeforeUpdate!="function"||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=m),l.props=r,l.state=m,l.context=u,r=c):(typeof l.componentDidUpdate!="function"||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),typeof l.getSnapshotBeforeUpdate!="function"||o===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),r=!1)}return To(e,t,n,r,a,s)}function To(e,t,n,r,s,a){bm(e,t);var l=(t.flags&128)!==0;if(!r&&!l)return s&&od(t,n,!1),Vt(e,t,a);r=t.stateNode,yy.current=t;var o=l&&typeof n.getDerivedStateFromError!="function"?null:r.render();return t.flags|=1,e!==null&&l?(t.child=Zr(t,e.child,null,a),t.child=Zr(t,null,o,a)):Le(e,t,o,a),t.memoizedState=r.state,s&&od(t,n,!0),t.child}function Sm(e){var t=e.stateNode;t.pendingContext?ld(e,t.pendingContext,t.pendingContext!==t.context):t.context&&ld(e,t.context,!1),Bu(e,t.containerInfo)}function Sd(e,t,n,r,s){return Jr(),zu(s),t.flags|=256,Le(e,t,n,r),t.child}var Do={dehydrated:null,treeContext:null,retryLane:0};function _o(e){return{baseLanes:e,cachePool:null,transitions:null}}function km(e,t,n){var r=t.pendingProps,s=ue.current,a=!1,l=(t.flags&128)!==0,o;if((o=l)||(o=e!==null&&e.memoizedState===null?!1:(s&2)!==0),o?(a=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(s|=1),se(ue,s&1),e===null)return ko(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data==="$!"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(l=r.children,e=r.fallback,a?(r=t.mode,a=t.child,l={mode:"hidden",children:l},!(r&1)&&a!==null?(a.childLanes=0,a.pendingProps=l):a=tl(l,r,0,null),e=nr(e,r,n,null),a.return=t,e.return=t,a.sibling=e,t.child=a,t.child.memoizedState=_o(n),t.memoizedState=Do,e):Xu(t,l));if(s=e.memoizedState,s!==null&&(o=s.dehydrated,o!==null))return xy(e,t,l,r,o,s,n);if(a){a=r.fallback,l=t.mode,s=e.child,o=s.sibling;var u={mode:"hidden",children:r.children};return!(l&1)&&t.child!==s?(r=t.child,r.childLanes=0,r.pendingProps=u,t.deletions=null):(r=kn(s,u),r.subtreeFlags=s.subtreeFlags&14680064),o!==null?a=kn(o,a):(a=nr(a,l,n,null),a.flags|=2),a.return=t,r.return=t,r.sibling=a,t.child=r,r=a,a=t.child,l=e.child.memoizedState,l=l===null?_o(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},a.memoizedState=l,a.childLanes=e.childLanes&~n,t.memoizedState=Do,r}return a=e.child,e=a.sibling,r=kn(a,{mode:"visible",children:r.children}),!(t.mode&1)&&(r.lanes=n),r.return=t,r.sibling=null,e!==null&&(n=t.deletions,n===null?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Xu(e,t){return t=tl({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function Aa(e,t,n,r){return r!==null&&zu(r),Zr(t,e.child,null,n),e=Xu(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function xy(e,t,n,r,s,a,l){if(n)return t.flags&256?(t.flags&=-257,r=Al(Error(P(422))),Aa(e,t,l,r)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(a=r.fallback,s=t.mode,r=tl({mode:"visible",children:r.children},s,0,null),a=nr(a,s,l,null),a.flags|=2,r.return=t,a.return=t,r.sibling=a,t.child=r,t.mode&1&&Zr(t,e.child,null,l),t.child.memoizedState=_o(l),t.memoizedState=Do,a);if(!(t.mode&1))return Aa(e,t,l,null);if(s.data==="$!"){if(r=s.nextSibling&&s.nextSibling.dataset,r)var o=r.dgst;return r=o,a=Error(P(419)),r=Al(a,r,void 0),Aa(e,t,l,r)}if(o=(l&e.childLanes)!==0,We||o){if(r=ke,r!==null){switch(l&-l){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}s=s&(r.suspendedLanes|l)?0:s,s!==0&&s!==a.retryLane&&(a.retryLane=s,Ht(e,s),Nt(r,e,s,-1))}return rc(),r=Al(Error(P(421))),Aa(e,t,l,r)}return s.data==="$?"?(t.flags|=128,t.child=e.child,t=Ty.bind(null,e),s._reactRetry=t,null):(e=a.treeContext,Ze=jn(s.nextSibling),et=t,le=!0,xt=null,e!==null&&(ot[ut++]=Ut,ot[ut++]=$t,ot[ut++]=ar,Ut=e.id,$t=e.overflow,ar=t),t=Xu(t,r.children),t.flags|=4096,t)}function kd(e,t,n){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),Co(e.return,t,n)}function Il(e,t,n,r,s){var a=e.memoizedState;a===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:s}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=s)}function Cm(e,t,n){var r=t.pendingProps,s=r.revealOrder,a=r.tail;if(Le(e,t,r.children,n),r=ue.current,r&2)r=r&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&kd(e,n,t);else if(e.tag===19)kd(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(se(ue,r),!(t.mode&1))t.memoizedState=null;else switch(s){case"forwards":for(n=t.child,s=null;n!==null;)e=n.alternate,e!==null&&Ei(e)===null&&(s=n),n=n.sibling;n=s,n===null?(s=t.child,t.child=null):(s=n.sibling,n.sibling=null),Il(t,!1,s,n,a);break;case"backwards":for(n=null,s=t.child,t.child=null;s!==null;){if(e=s.alternate,e!==null&&Ei(e)===null){t.child=s;break}e=s.sibling,s.sibling=n,n=s,s=e}Il(t,!0,n,null,a);break;case"together":Il(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function ei(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vt(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),lr|=t.lanes,!(n&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error(P(153));if(t.child!==null){for(e=t.child,n=kn(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=kn(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function vy(e,t,n){switch(t.tag){case 3:Sm(t),Jr();break;case 5:Jh(t);break;case 1:He(t.type)&&ji(t);break;case 4:Bu(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,s=t.memoizedProps.value;se(Si,r._currentValue),r._currentValue=s;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?(se(ue,ue.current&1),t.flags|=128,null):n&t.child.childLanes?km(e,t,n):(se(ue,ue.current&1),e=Vt(e,t,n),e!==null?e.sibling:null);se(ue,ue.current&1);break;case 19:if(r=(n&t.childLanes)!==0,e.flags&128){if(r)return Cm(e,t,n);t.flags|=128}if(s=t.memoizedState,s!==null&&(s.rendering=null,s.tail=null,s.lastEffect=null),se(ue,ue.current),r)break;return null;case 22:case 23:return t.lanes=0,Nm(e,t,n)}return Vt(e,t,n)}var Em,Mo,Pm,Rm;Em=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};Mo=function(){};Pm=function(e,t,n,r){var s=e.memoizedProps;if(s!==r){e=t.stateNode,Qn(Mt.current);var a=null;switch(n){case"input":s=to(e,s),r=to(e,r),a=[];break;case"select":s=de({},s,{value:void 0}),r=de({},r,{value:void 0}),a=[];break;case"textarea":s=so(e,s),r=so(e,r),a=[];break;default:typeof s.onClick!="function"&&typeof r.onClick=="function"&&(e.onclick=vi)}io(n,r);var l;n=null;for(c in s)if(!r.hasOwnProperty(c)&&s.hasOwnProperty(c)&&s[c]!=null)if(c==="style"){var o=s[c];for(l in o)o.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else c!=="dangerouslySetInnerHTML"&&c!=="children"&&c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&c!=="autoFocus"&&(As.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in r){var u=r[c];if(o=s!=null?s[c]:void 0,r.hasOwnProperty(c)&&u!==o&&(u!=null||o!=null))if(c==="style")if(o){for(l in o)!o.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in u)u.hasOwnProperty(l)&&o[l]!==u[l]&&(n||(n={}),n[l]=u[l])}else n||(a||(a=[]),a.push(c,n)),n=u;else c==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,o=o?o.__html:void 0,u!=null&&o!==u&&(a=a||[]).push(c,u)):c==="children"?typeof u!="string"&&typeof u!="number"||(a=a||[]).push(c,""+u):c!=="suppressContentEditableWarning"&&c!=="suppressHydrationWarning"&&(As.hasOwnProperty(c)?(u!=null&&c==="onScroll"&&ae("scroll",e),a||o===u||(a=[])):(a=a||[]).push(c,u))}n&&(a=a||[]).push("style",n);var c=a;(t.updateQueue=c)&&(t.flags|=4)}};Rm=function(e,t,n,r){n!==r&&(t.flags|=4)};function xs(e,t){if(!le)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Oe(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,r=0;if(t)for(var s=e.child;s!==null;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags&14680064,r|=s.flags&14680064,s.return=e,s=s.sibling;else for(s=e.child;s!==null;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function wy(e,t,n){var r=t.pendingProps;switch(Lu(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Oe(t),null;case 1:return He(t.type)&&wi(),Oe(t),null;case 3:return r=t.stateNode,es(),ie(Qe),ie(_e),Qu(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(La(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,xt!==null&&(qo(xt),xt=null))),Mo(e,t),Oe(t),null;case 5:Wu(t);var s=Qn(Gs.current);if(n=t.type,e!==null&&t.stateNode!=null)Pm(e,t,n,r,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(P(166));return Oe(t),null}if(e=Qn(Mt.current),La(t)){r=t.stateNode,n=t.type;var a=t.memoizedProps;switch(r[Dt]=t,r[Ks]=a,e=(t.mode&1)!==0,n){case"dialog":ae("cancel",r),ae("close",r);break;case"iframe":case"object":case"embed":ae("load",r);break;case"video":case"audio":for(s=0;s<Es.length;s++)ae(Es[s],r);break;case"source":ae("error",r);break;case"img":case"image":case"link":ae("error",r),ae("load",r);break;case"details":ae("toggle",r);break;case"input":Mc(r,a),ae("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!a.multiple},ae("invalid",r);break;case"textarea":Lc(r,a),ae("invalid",r)}io(n,a),s=null;for(var l in a)if(a.hasOwnProperty(l)){var o=a[l];l==="children"?typeof o=="string"?r.textContent!==o&&(a.suppressHydrationWarning!==!0&&Fa(r.textContent,o,e),s=["children",o]):typeof o=="number"&&r.textContent!==""+o&&(a.suppressHydrationWarning!==!0&&Fa(r.textContent,o,e),s=["children",""+o]):As.hasOwnProperty(l)&&o!=null&&l==="onScroll"&&ae("scroll",r)}switch(n){case"input":Ea(r),Fc(r,a,!0);break;case"textarea":Ea(r),zc(r);break;case"select":case"option":break;default:typeof a.onClick=="function"&&(r.onclick=vi)}r=s,t.updateQueue=r,r!==null&&(t.flags|=4)}else{l=s.nodeType===9?s:s.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=rh(n)),e==="http://www.w3.org/1999/xhtml"?n==="script"?(e=l.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof r.is=="string"?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),n==="select"&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[Dt]=t,e[Ks]=r,Em(e,t,!1,!1),t.stateNode=e;e:{switch(l=lo(n,r),n){case"dialog":ae("cancel",e),ae("close",e),s=r;break;case"iframe":case"object":case"embed":ae("load",e),s=r;break;case"video":case"audio":for(s=0;s<Es.length;s++)ae(Es[s],e);s=r;break;case"source":ae("error",e),s=r;break;case"img":case"image":case"link":ae("error",e),ae("load",e),s=r;break;case"details":ae("toggle",e),s=r;break;case"input":Mc(e,r),s=to(e,r),ae("invalid",e);break;case"option":s=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=de({},r,{value:void 0}),ae("invalid",e);break;case"textarea":Lc(e,r),s=so(e,r),ae("invalid",e);break;default:s=r}io(n,s),o=s;for(a in o)if(o.hasOwnProperty(a)){var u=o[a];a==="style"?ih(e,u):a==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,u!=null&&sh(e,u)):a==="children"?typeof u=="string"?(n!=="textarea"||u!=="")&&Is(e,u):typeof u=="number"&&Is(e,""+u):a!=="suppressContentEditableWarning"&&a!=="suppressHydrationWarning"&&a!=="autoFocus"&&(As.hasOwnProperty(a)?u!=null&&a==="onScroll"&&ae("scroll",e):u!=null&&ju(e,a,u,l))}switch(n){case"input":Ea(e),Fc(e,r,!1);break;case"textarea":Ea(e),zc(e);break;case"option":r.value!=null&&e.setAttribute("value",""+Pn(r.value));break;case"select":e.multiple=!!r.multiple,a=r.value,a!=null?Or(e,!!r.multiple,a,!1):r.defaultValue!=null&&Or(e,!!r.multiple,r.defaultValue,!0);break;default:typeof s.onClick=="function"&&(e.onclick=vi)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return Oe(t),null;case 6:if(e&&t.stateNode!=null)Rm(e,t,e.memoizedProps,r);else{if(typeof r!="string"&&t.stateNode===null)throw Error(P(166));if(n=Qn(Gs.current),Qn(Mt.current),La(t)){if(r=t.stateNode,n=t.memoizedProps,r[Dt]=t,(a=r.nodeValue!==n)&&(e=et,e!==null))switch(e.tag){case 3:Fa(r.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Fa(r.nodeValue,n,(e.mode&1)!==0)}a&&(t.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[Dt]=t,t.stateNode=r}return Oe(t),null;case 13:if(ie(ue),r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(le&&Ze!==null&&t.mode&1&&!(t.flags&128))Vh(),Jr(),t.flags|=98560,a=!1;else if(a=La(t),r!==null&&r.dehydrated!==null){if(e===null){if(!a)throw Error(P(318));if(a=t.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(P(317));a[Dt]=t}else Jr(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;Oe(t),a=!1}else xt!==null&&(qo(xt),xt=null),a=!0;if(!a)return t.flags&65536?t:null}return t.flags&128?(t.lanes=n,t):(r=r!==null,r!==(e!==null&&e.memoizedState!==null)&&r&&(t.child.flags|=8192,t.mode&1&&(e===null||ue.current&1?je===0&&(je=3):rc())),t.updateQueue!==null&&(t.flags|=4),Oe(t),null);case 4:return es(),Mo(e,t),e===null&&Hs(t.stateNode.containerInfo),Oe(t),null;case 10:return Uu(t.type._context),Oe(t),null;case 17:return He(t.type)&&wi(),Oe(t),null;case 19:if(ie(ue),a=t.memoizedState,a===null)return Oe(t),null;if(r=(t.flags&128)!==0,l=a.rendering,l===null)if(r)xs(a,!1);else{if(je!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(l=Ei(e),l!==null){for(t.flags|=128,xs(a,!1),r=l.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;n!==null;)a=n,e=r,a.flags&=14680066,l=a.alternate,l===null?(a.childLanes=0,a.lanes=e,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=l.childLanes,a.lanes=l.lanes,a.child=l.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=l.memoizedProps,a.memoizedState=l.memoizedState,a.updateQueue=l.updateQueue,a.type=l.type,e=l.dependencies,a.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return se(ue,ue.current&1|2),t.child}e=e.sibling}a.tail!==null&&pe()>ns&&(t.flags|=128,r=!0,xs(a,!1),t.lanes=4194304)}else{if(!r)if(e=Ei(l),e!==null){if(t.flags|=128,r=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),xs(a,!0),a.tail===null&&a.tailMode==="hidden"&&!l.alternate&&!le)return Oe(t),null}else 2*pe()-a.renderingStartTime>ns&&n!==1073741824&&(t.flags|=128,r=!0,xs(a,!1),t.lanes=4194304);a.isBackwards?(l.sibling=t.child,t.child=l):(n=a.last,n!==null?n.sibling=l:t.child=l,a.last=l)}return a.tail!==null?(t=a.tail,a.rendering=t,a.tail=t.sibling,a.renderingStartTime=pe(),t.sibling=null,n=ue.current,se(ue,r?n&1|2:n&1),t):(Oe(t),null);case 22:case 23:return nc(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&t.mode&1?Je&1073741824&&(Oe(t),t.subtreeFlags&6&&(t.flags|=8192)):Oe(t),null;case 24:return null;case 25:return null}throw Error(P(156,t.tag))}function jy(e,t){switch(Lu(t),t.tag){case 1:return He(t.type)&&wi(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return es(),ie(Qe),ie(_e),Qu(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return Wu(t),null;case 13:if(ie(ue),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(P(340));Jr()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return ie(ue),null;case 4:return es(),null;case 10:return Uu(t.type._context),null;case 22:case 23:return nc(),null;case 24:return null;default:return null}}var Ia=!1,De=!1,Ny=typeof WeakSet=="function"?WeakSet:Set,_=null;function Pr(e,t){var n=e.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){he(e,t,r)}else n.current=null}function Fo(e,t,n){try{n()}catch(r){he(e,t,r)}}var Cd=!1;function by(e,t){if(xo=gi,e=Mh(),Mu(e)){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var s=r.anchorOffset,a=r.focusNode;r=r.focusOffset;try{n.nodeType,a.nodeType}catch{n=null;break e}var l=0,o=-1,u=-1,c=0,h=0,d=e,f=null;t:for(;;){for(var g;d!==n||s!==0&&d.nodeType!==3||(o=l+s),d!==a||r!==0&&d.nodeType!==3||(u=l+r),d.nodeType===3&&(l+=d.nodeValue.length),(g=d.firstChild)!==null;)f=d,d=g;for(;;){if(d===e)break t;if(f===n&&++c===s&&(o=l),f===a&&++h===r&&(u=l),(g=d.nextSibling)!==null)break;d=f,f=d.parentNode}d=g}n=o===-1||u===-1?null:{start:o,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(vo={focusedElem:e,selectionRange:n},gi=!1,_=t;_!==null;)if(t=_,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,_=e;else for(;_!==null;){t=_;try{var m=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(m!==null){var v=m.memoizedProps,j=m.memoizedState,p=t.stateNode,y=p.getSnapshotBeforeUpdate(t.elementType===t.type?v:pt(t.type,v),j);p.__reactInternalSnapshotBeforeUpdate=y}break;case 3:var x=t.stateNode.containerInfo;x.nodeType===1?x.textContent="":x.nodeType===9&&x.documentElement&&x.removeChild(x.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(P(163))}}catch(b){he(t,t.return,b)}if(e=t.sibling,e!==null){e.return=t.return,_=e;break}_=t.return}return m=Cd,Cd=!1,m}function Fs(e,t,n){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var s=r=r.next;do{if((s.tag&e)===e){var a=s.destroy;s.destroy=void 0,a!==void 0&&Fo(t,n,a)}s=s.next}while(s!==r)}}function Zi(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Lo(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t=="function"?t(e):t.current=e}}function Om(e){var t=e.alternate;t!==null&&(e.alternate=null,Om(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[Dt],delete t[Ks],delete t[No],delete t[ay],delete t[iy])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Tm(e){return e.tag===5||e.tag===3||e.tag===4}function Ed(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Tm(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function zo(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=vi));else if(r!==4&&(e=e.child,e!==null))for(zo(e,t,n),e=e.sibling;e!==null;)zo(e,t,n),e=e.sibling}function Ao(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(Ao(e,t,n),e=e.sibling;e!==null;)Ao(e,t,n),e=e.sibling}var Ce=null,yt=!1;function Xt(e,t,n){for(n=n.child;n!==null;)Dm(e,t,n),n=n.sibling}function Dm(e,t,n){if(_t&&typeof _t.onCommitFiberUnmount=="function")try{_t.onCommitFiberUnmount(Qi,n)}catch{}switch(n.tag){case 5:De||Pr(n,t);case 6:var r=Ce,s=yt;Ce=null,Xt(e,t,n),Ce=r,yt=s,Ce!==null&&(yt?(e=Ce,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):Ce.removeChild(n.stateNode));break;case 18:Ce!==null&&(yt?(e=Ce,n=n.stateNode,e.nodeType===8?Dl(e.parentNode,n):e.nodeType===1&&Dl(e,n),Bs(e)):Dl(Ce,n.stateNode));break;case 4:r=Ce,s=yt,Ce=n.stateNode.containerInfo,yt=!0,Xt(e,t,n),Ce=r,yt=s;break;case 0:case 11:case 14:case 15:if(!De&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){s=r=r.next;do{var a=s,l=a.destroy;a=a.tag,l!==void 0&&(a&2||a&4)&&Fo(n,t,l),s=s.next}while(s!==r)}Xt(e,t,n);break;case 1:if(!De&&(Pr(n,t),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(o){he(n,t,o)}Xt(e,t,n);break;case 21:Xt(e,t,n);break;case 22:n.mode&1?(De=(r=De)||n.memoizedState!==null,Xt(e,t,n),De=r):Xt(e,t,n);break;default:Xt(e,t,n)}}function Pd(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new Ny),t.forEach(function(r){var s=Dy.bind(null,e,r);n.has(r)||(n.add(r),r.then(s,s))})}}function mt(e,t){var n=t.deletions;if(n!==null)for(var r=0;r<n.length;r++){var s=n[r];try{var a=e,l=t,o=l;e:for(;o!==null;){switch(o.tag){case 5:Ce=o.stateNode,yt=!1;break e;case 3:Ce=o.stateNode.containerInfo,yt=!0;break e;case 4:Ce=o.stateNode.containerInfo,yt=!0;break e}o=o.return}if(Ce===null)throw Error(P(160));Dm(a,l,s),Ce=null,yt=!1;var u=s.alternate;u!==null&&(u.return=null),s.return=null}catch(c){he(s,t,c)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)_m(t,e),t=t.sibling}function _m(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mt(t,e),Ct(e),r&4){try{Fs(3,e,e.return),Zi(3,e)}catch(v){he(e,e.return,v)}try{Fs(5,e,e.return)}catch(v){he(e,e.return,v)}}break;case 1:mt(t,e),Ct(e),r&512&&n!==null&&Pr(n,n.return);break;case 5:if(mt(t,e),Ct(e),r&512&&n!==null&&Pr(n,n.return),e.flags&32){var s=e.stateNode;try{Is(s,"")}catch(v){he(e,e.return,v)}}if(r&4&&(s=e.stateNode,s!=null)){var a=e.memoizedProps,l=n!==null?n.memoizedProps:a,o=e.type,u=e.updateQueue;if(e.updateQueue=null,u!==null)try{o==="input"&&a.type==="radio"&&a.name!=null&&th(s,a),lo(o,l);var c=lo(o,a);for(l=0;l<u.length;l+=2){var h=u[l],d=u[l+1];h==="style"?ih(s,d):h==="dangerouslySetInnerHTML"?sh(s,d):h==="children"?Is(s,d):ju(s,h,d,c)}switch(o){case"input":no(s,a);break;case"textarea":nh(s,a);break;case"select":var f=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!a.multiple;var g=a.value;g!=null?Or(s,!!a.multiple,g,!1):f!==!!a.multiple&&(a.defaultValue!=null?Or(s,!!a.multiple,a.defaultValue,!0):Or(s,!!a.multiple,a.multiple?[]:"",!1))}s[Ks]=a}catch(v){he(e,e.return,v)}}break;case 6:if(mt(t,e),Ct(e),r&4){if(e.stateNode===null)throw Error(P(162));s=e.stateNode,a=e.memoizedProps;try{s.nodeValue=a}catch(v){he(e,e.return,v)}}break;case 3:if(mt(t,e),Ct(e),r&4&&n!==null&&n.memoizedState.isDehydrated)try{Bs(t.containerInfo)}catch(v){he(e,e.return,v)}break;case 4:mt(t,e),Ct(e);break;case 13:mt(t,e),Ct(e),s=e.child,s.flags&8192&&(a=s.memoizedState!==null,s.stateNode.isHidden=a,!a||s.alternate!==null&&s.alternate.memoizedState!==null||(ec=pe())),r&4&&Pd(e);break;case 22:if(h=n!==null&&n.memoizedState!==null,e.mode&1?(De=(c=De)||h,mt(t,e),De=c):mt(t,e),Ct(e),r&8192){if(c=e.memoizedState!==null,(e.stateNode.isHidden=c)&&!h&&e.mode&1)for(_=e,h=e.child;h!==null;){for(d=_=h;_!==null;){switch(f=_,g=f.child,f.tag){case 0:case 11:case 14:case 15:Fs(4,f,f.return);break;case 1:Pr(f,f.return);var m=f.stateNode;if(typeof m.componentWillUnmount=="function"){r=f,n=f.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(v){he(r,n,v)}}break;case 5:Pr(f,f.return);break;case 22:if(f.memoizedState!==null){Od(d);continue}}g!==null?(g.return=f,_=g):Od(d)}h=h.sibling}e:for(h=null,d=e;;){if(d.tag===5){if(h===null){h=d;try{s=d.stateNode,c?(a=s.style,typeof a.setProperty=="function"?a.setProperty("display","none","important"):a.display="none"):(o=d.stateNode,u=d.memoizedProps.style,l=u!=null&&u.hasOwnProperty("display")?u.display:null,o.style.display=ah("display",l))}catch(v){he(e,e.return,v)}}}else if(d.tag===6){if(h===null)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(v){he(e,e.return,v)}}else if((d.tag!==22&&d.tag!==23||d.memoizedState===null||d===e)&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;d.sibling===null;){if(d.return===null||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mt(t,e),Ct(e),r&4&&Pd(e);break;case 21:break;default:mt(t,e),Ct(e)}}function Ct(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if(Tm(n)){var r=n;break e}n=n.return}throw Error(P(160))}switch(r.tag){case 5:var s=r.stateNode;r.flags&32&&(Is(s,""),r.flags&=-33);var a=Ed(e);Ao(e,a,s);break;case 3:case 4:var l=r.stateNode.containerInfo,o=Ed(e);zo(e,o,l);break;default:throw Error(P(161))}}catch(u){he(e,e.return,u)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function Sy(e,t,n){_=e,Mm(e)}function Mm(e,t,n){for(var r=(e.mode&1)!==0;_!==null;){var s=_,a=s.child;if(s.tag===22&&r){var l=s.memoizedState!==null||Ia;if(!l){var o=s.alternate,u=o!==null&&o.memoizedState!==null||De;o=Ia;var c=De;if(Ia=l,(De=u)&&!c)for(_=s;_!==null;)l=_,u=l.child,l.tag===22&&l.memoizedState!==null?Td(s):u!==null?(u.return=l,_=u):Td(s);for(;a!==null;)_=a,Mm(a),a=a.sibling;_=s,Ia=o,De=c}Rd(e)}else s.subtreeFlags&8772&&a!==null?(a.return=s,_=a):Rd(e)}}function Rd(e){for(;_!==null;){var t=_;if(t.flags&8772){var n=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:De||Zi(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!De)if(n===null)r.componentDidMount();else{var s=t.elementType===t.type?n.memoizedProps:pt(t.type,n.memoizedProps);r.componentDidUpdate(s,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var a=t.updateQueue;a!==null&&hd(t,a,r);break;case 3:var l=t.updateQueue;if(l!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}hd(t,l,n)}break;case 5:var o=t.stateNode;if(n===null&&t.flags&4){n=o;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var c=t.alternate;if(c!==null){var h=c.memoizedState;if(h!==null){var d=h.dehydrated;d!==null&&Bs(d)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(P(163))}De||t.flags&512&&Lo(t)}catch(f){he(t,t.return,f)}}if(t===e){_=null;break}if(n=t.sibling,n!==null){n.return=t.return,_=n;break}_=t.return}}function Od(e){for(;_!==null;){var t=_;if(t===e){_=null;break}var n=t.sibling;if(n!==null){n.return=t.return,_=n;break}_=t.return}}function Td(e){for(;_!==null;){var t=_;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{Zi(4,t)}catch(u){he(t,n,u)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount=="function"){var s=t.return;try{r.componentDidMount()}catch(u){he(t,s,u)}}var a=t.return;try{Lo(t)}catch(u){he(t,a,u)}break;case 5:var l=t.return;try{Lo(t)}catch(u){he(t,l,u)}}}catch(u){he(t,t.return,u)}if(t===e){_=null;break}var o=t.sibling;if(o!==null){o.return=t.return,_=o;break}_=t.return}}var ky=Math.ceil,Oi=Yt.ReactCurrentDispatcher,Ju=Yt.ReactCurrentOwner,dt=Yt.ReactCurrentBatchConfig,Y=0,ke=null,xe=null,Ee=0,Je=0,Rr=Mn(0),je=0,ea=null,lr=0,el=0,Zu=0,Ls=null,Be=null,ec=0,ns=1/0,zt=null,Ti=!1,Io=null,bn=null,Ua=!1,gn=null,Di=0,zs=0,Uo=null,ti=-1,ni=0;function ze(){return Y&6?pe():ti!==-1?ti:ti=pe()}function Sn(e){return e.mode&1?Y&2&&Ee!==0?Ee&-Ee:oy.transition!==null?(ni===0&&(ni=xh()),ni):(e=te,e!==0||(e=window.event,e=e===void 0?16:kh(e.type)),e):1}function Nt(e,t,n,r){if(50<zs)throw zs=0,Uo=null,Error(P(185));da(e,n,r),(!(Y&2)||e!==ke)&&(e===ke&&(!(Y&2)&&(el|=n),je===4&&sn(e,Ee)),Ve(e,r),n===1&&Y===0&&!(t.mode&1)&&(ns=pe()+500,Gi&&Fn()))}function Ve(e,t){var n=e.callbackNode;o0(e,t);var r=pi(e,e===ke?Ee:0);if(r===0)n!==null&&Uc(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(n!=null&&Uc(n),t===1)e.tag===0?ly(Dd.bind(null,e)):Wh(Dd.bind(null,e)),ry(function(){!(Y&6)&&Fn()}),n=null;else{switch(vh(r)){case 1:n=Cu;break;case 4:n=gh;break;case 16:n=mi;break;case 536870912:n=yh;break;default:n=mi}n=qm(n,Fm.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function Fm(e,t){if(ti=-1,ni=0,Y&6)throw Error(P(327));var n=e.callbackNode;if(Fr()&&e.callbackNode!==n)return null;var r=pi(e,e===ke?Ee:0);if(r===0)return null;if(r&30||r&e.expiredLanes||t)t=_i(e,r);else{t=r;var s=Y;Y|=2;var a=zm();(ke!==e||Ee!==t)&&(zt=null,ns=pe()+500,tr(e,t));do try{Py();break}catch(o){Lm(e,o)}while(!0);Iu(),Oi.current=a,Y=s,xe!==null?t=0:(ke=null,Ee=0,t=je)}if(t!==0){if(t===2&&(s=ho(e),s!==0&&(r=s,t=$o(e,s))),t===1)throw n=ea,tr(e,0),sn(e,r),Ve(e,pe()),n;if(t===6)sn(e,r);else{if(s=e.current.alternate,!(r&30)&&!Cy(s)&&(t=_i(e,r),t===2&&(a=ho(e),a!==0&&(r=a,t=$o(e,a))),t===1))throw n=ea,tr(e,0),sn(e,r),Ve(e,pe()),n;switch(e.finishedWork=s,e.finishedLanes=r,t){case 0:case 1:throw Error(P(345));case 2:$n(e,Be,zt);break;case 3:if(sn(e,r),(r&130023424)===r&&(t=ec+500-pe(),10<t)){if(pi(e,0)!==0)break;if(s=e.suspendedLanes,(s&r)!==r){ze(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=jo($n.bind(null,e,Be,zt),t);break}$n(e,Be,zt);break;case 4:if(sn(e,r),(r&4194240)===r)break;for(t=e.eventTimes,s=-1;0<r;){var l=31-jt(r);a=1<<l,l=t[l],l>s&&(s=l),r&=~a}if(r=s,r=pe()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ky(r/1960))-r,10<r){e.timeoutHandle=jo($n.bind(null,e,Be,zt),r);break}$n(e,Be,zt);break;case 5:$n(e,Be,zt);break;default:throw Error(P(329))}}}return Ve(e,pe()),e.callbackNode===n?Fm.bind(null,e):null}function $o(e,t){var n=Ls;return e.current.memoizedState.isDehydrated&&(tr(e,t).flags|=256),e=_i(e,t),e!==2&&(t=Be,Be=n,t!==null&&qo(t)),e}function qo(e){Be===null?Be=e:Be.push.apply(Be,e)}function Cy(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var s=n[r],a=s.getSnapshot;s=s.value;try{if(!bt(a(),s))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function sn(e,t){for(t&=~Zu,t&=~el,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-jt(t),r=1<<n;e[n]=-1,t&=~r}}function Dd(e){if(Y&6)throw Error(P(327));Fr();var t=pi(e,0);if(!(t&1))return Ve(e,pe()),null;var n=_i(e,t);if(e.tag!==0&&n===2){var r=ho(e);r!==0&&(t=r,n=$o(e,r))}if(n===1)throw n=ea,tr(e,0),sn(e,t),Ve(e,pe()),n;if(n===6)throw Error(P(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,$n(e,Be,zt),Ve(e,pe()),null}function tc(e,t){var n=Y;Y|=1;try{return e(t)}finally{Y=n,Y===0&&(ns=pe()+500,Gi&&Fn())}}function or(e){gn!==null&&gn.tag===0&&!(Y&6)&&Fr();var t=Y;Y|=1;var n=dt.transition,r=te;try{if(dt.transition=null,te=1,e)return e()}finally{te=r,dt.transition=n,Y=t,!(Y&6)&&Fn()}}function nc(){Je=Rr.current,ie(Rr)}function tr(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,ny(n)),xe!==null)for(n=xe.return;n!==null;){var r=n;switch(Lu(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&wi();break;case 3:es(),ie(Qe),ie(_e),Qu();break;case 5:Wu(r);break;case 4:es();break;case 13:ie(ue);break;case 19:ie(ue);break;case 10:Uu(r.type._context);break;case 22:case 23:nc()}n=n.return}if(ke=e,xe=e=kn(e.current,null),Ee=Je=t,je=0,ea=null,Zu=el=lr=0,Be=Ls=null,Wn!==null){for(t=0;t<Wn.length;t++)if(n=Wn[t],r=n.interleaved,r!==null){n.interleaved=null;var s=r.next,a=n.pending;if(a!==null){var l=a.next;a.next=s,r.next=l}n.pending=r}Wn=null}return e}function Lm(e,t){do{var n=xe;try{if(Iu(),Ja.current=Ri,Pi){for(var r=ce.memoizedState;r!==null;){var s=r.queue;s!==null&&(s.pending=null),r=r.next}Pi=!1}if(ir=0,Se=ve=ce=null,Ms=!1,Xs=0,Ju.current=null,n===null||n.return===null){je=1,ea=t,xe=null;break}e:{var a=e,l=n.return,o=n,u=t;if(t=Ee,o.flags|=32768,u!==null&&typeof u=="object"&&typeof u.then=="function"){var c=u,h=o,d=h.tag;if(!(h.mode&1)&&(d===0||d===11||d===15)){var f=h.alternate;f?(h.updateQueue=f.updateQueue,h.memoizedState=f.memoizedState,h.lanes=f.lanes):(h.updateQueue=null,h.memoizedState=null)}var g=vd(l);if(g!==null){g.flags&=-257,wd(g,l,o,a,t),g.mode&1&&xd(a,c,t),t=g,u=c;var m=t.updateQueue;if(m===null){var v=new Set;v.add(u),t.updateQueue=v}else m.add(u);break e}else{if(!(t&1)){xd(a,c,t),rc();break e}u=Error(P(426))}}else if(le&&o.mode&1){var j=vd(l);if(j!==null){!(j.flags&65536)&&(j.flags|=256),wd(j,l,o,a,t),zu(ts(u,o));break e}}a=u=ts(u,o),je!==4&&(je=2),Ls===null?Ls=[a]:Ls.push(a),a=l;do{switch(a.tag){case 3:a.flags|=65536,t&=-t,a.lanes|=t;var p=vm(a,u,t);fd(a,p);break e;case 1:o=u;var y=a.type,x=a.stateNode;if(!(a.flags&128)&&(typeof y.getDerivedStateFromError=="function"||x!==null&&typeof x.componentDidCatch=="function"&&(bn===null||!bn.has(x)))){a.flags|=65536,t&=-t,a.lanes|=t;var b=wm(a,o,t);fd(a,b);break e}}a=a.return}while(a!==null)}Im(n)}catch(C){t=C,xe===n&&n!==null&&(xe=n=n.return);continue}break}while(!0)}function zm(){var e=Oi.current;return Oi.current=Ri,e===null?Ri:e}function rc(){(je===0||je===3||je===2)&&(je=4),ke===null||!(lr&268435455)&&!(el&268435455)||sn(ke,Ee)}function _i(e,t){var n=Y;Y|=2;var r=zm();(ke!==e||Ee!==t)&&(zt=null,tr(e,t));do try{Ey();break}catch(s){Lm(e,s)}while(!0);if(Iu(),Y=n,Oi.current=r,xe!==null)throw Error(P(261));return ke=null,Ee=0,je}function Ey(){for(;xe!==null;)Am(xe)}function Py(){for(;xe!==null&&!Zg();)Am(xe)}function Am(e){var t=$m(e.alternate,e,Je);e.memoizedProps=e.pendingProps,t===null?Im(e):xe=t,Ju.current=null}function Im(e){var t=e;do{var n=t.alternate;if(e=t.return,t.flags&32768){if(n=jy(n,t),n!==null){n.flags&=32767,xe=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{je=6,xe=null;return}}else if(n=wy(n,t,Je),n!==null){xe=n;return}if(t=t.sibling,t!==null){xe=t;return}xe=t=e}while(t!==null);je===0&&(je=5)}function $n(e,t,n){var r=te,s=dt.transition;try{dt.transition=null,te=1,Ry(e,t,n,r)}finally{dt.transition=s,te=r}return null}function Ry(e,t,n,r){do Fr();while(gn!==null);if(Y&6)throw Error(P(327));n=e.finishedWork;var s=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(P(177));e.callbackNode=null,e.callbackPriority=0;var a=n.lanes|n.childLanes;if(u0(e,a),e===ke&&(xe=ke=null,Ee=0),!(n.subtreeFlags&2064)&&!(n.flags&2064)||Ua||(Ua=!0,qm(mi,function(){return Fr(),null})),a=(n.flags&15990)!==0,n.subtreeFlags&15990||a){a=dt.transition,dt.transition=null;var l=te;te=1;var o=Y;Y|=4,Ju.current=null,by(e,n),_m(n,e),Y0(vo),gi=!!xo,vo=xo=null,e.current=n,Sy(n),e0(),Y=o,te=l,dt.transition=a}else e.current=n;if(Ua&&(Ua=!1,gn=e,Di=s),a=e.pendingLanes,a===0&&(bn=null),r0(n.stateNode),Ve(e,pe()),t!==null)for(r=e.onRecoverableError,n=0;n<t.length;n++)s=t[n],r(s.value,{componentStack:s.stack,digest:s.digest});if(Ti)throw Ti=!1,e=Io,Io=null,e;return Di&1&&e.tag!==0&&Fr(),a=e.pendingLanes,a&1?e===Uo?zs++:(zs=0,Uo=e):zs=0,Fn(),null}function Fr(){if(gn!==null){var e=vh(Di),t=dt.transition,n=te;try{if(dt.transition=null,te=16>e?16:e,gn===null)var r=!1;else{if(e=gn,gn=null,Di=0,Y&6)throw Error(P(331));var s=Y;for(Y|=4,_=e.current;_!==null;){var a=_,l=a.child;if(_.flags&16){var o=a.deletions;if(o!==null){for(var u=0;u<o.length;u++){var c=o[u];for(_=c;_!==null;){var h=_;switch(h.tag){case 0:case 11:case 15:Fs(8,h,a)}var d=h.child;if(d!==null)d.return=h,_=d;else for(;_!==null;){h=_;var f=h.sibling,g=h.return;if(Om(h),h===c){_=null;break}if(f!==null){f.return=g,_=f;break}_=g}}}var m=a.alternate;if(m!==null){var v=m.child;if(v!==null){m.child=null;do{var j=v.sibling;v.sibling=null,v=j}while(v!==null)}}_=a}}if(a.subtreeFlags&2064&&l!==null)l.return=a,_=l;else e:for(;_!==null;){if(a=_,a.flags&2048)switch(a.tag){case 0:case 11:case 15:Fs(9,a,a.return)}var p=a.sibling;if(p!==null){p.return=a.return,_=p;break e}_=a.return}}var y=e.current;for(_=y;_!==null;){l=_;var x=l.child;if(l.subtreeFlags&2064&&x!==null)x.return=l,_=x;else e:for(l=y;_!==null;){if(o=_,o.flags&2048)try{switch(o.tag){case 0:case 11:case 15:Zi(9,o)}}catch(C){he(o,o.return,C)}if(o===l){_=null;break e}var b=o.sibling;if(b!==null){b.return=o.return,_=b;break e}_=o.return}}if(Y=s,Fn(),_t&&typeof _t.onPostCommitFiberRoot=="function")try{_t.onPostCommitFiberRoot(Qi,e)}catch{}r=!0}return r}finally{te=n,dt.transition=t}}return!1}function _d(e,t,n){t=ts(n,t),t=vm(e,t,1),e=Nn(e,t,1),t=ze(),e!==null&&(da(e,1,t),Ve(e,t))}function he(e,t,n){if(e.tag===3)_d(e,e,n);else for(;t!==null;){if(t.tag===3){_d(t,e,n);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(bn===null||!bn.has(r))){e=ts(n,e),e=wm(t,e,1),t=Nn(t,e,1),e=ze(),t!==null&&(da(t,1,e),Ve(t,e));break}}t=t.return}}function Oy(e,t,n){var r=e.pingCache;r!==null&&r.delete(t),t=ze(),e.pingedLanes|=e.suspendedLanes&n,ke===e&&(Ee&n)===n&&(je===4||je===3&&(Ee&130023424)===Ee&&500>pe()-ec?tr(e,0):Zu|=n),Ve(e,t)}function Um(e,t){t===0&&(e.mode&1?(t=Oa,Oa<<=1,!(Oa&130023424)&&(Oa=4194304)):t=1);var n=ze();e=Ht(e,t),e!==null&&(da(e,t,n),Ve(e,n))}function Ty(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),Um(e,n)}function Dy(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,s=e.memoizedState;s!==null&&(n=s.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(P(314))}r!==null&&r.delete(t),Um(e,n)}var $m;$m=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||Qe.current)We=!0;else{if(!(e.lanes&n)&&!(t.flags&128))return We=!1,vy(e,t,n);We=!!(e.flags&131072)}else We=!1,le&&t.flags&1048576&&Qh(t,bi,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;ei(e,t),e=t.pendingProps;var s=Xr(t,_e.current);Mr(t,n),s=Vu(null,t,r,e,s,n);var a=Ku();return t.flags|=1,typeof s=="object"&&s!==null&&typeof s.render=="function"&&s.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,He(r)?(a=!0,ji(t)):a=!1,t.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,qu(t),s.updater=Ji,t.stateNode=s,s._reactInternals=t,Po(t,r,e,n),t=To(null,t,r,!0,a,n)):(t.tag=0,le&&a&&Fu(t),Le(null,t,s,n),t=t.child),t;case 16:r=t.elementType;e:{switch(ei(e,t),e=t.pendingProps,s=r._init,r=s(r._payload),t.type=r,s=t.tag=My(r),e=pt(r,e),s){case 0:t=Oo(null,t,r,e,n);break e;case 1:t=bd(null,t,r,e,n);break e;case 11:t=jd(null,t,r,e,n);break e;case 14:t=Nd(null,t,r,pt(r.type,e),n);break e}throw Error(P(306,r,""))}return t;case 0:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:pt(r,s),Oo(e,t,r,s,n);case 1:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:pt(r,s),bd(e,t,r,s,n);case 3:e:{if(Sm(t),e===null)throw Error(P(387));r=t.pendingProps,a=t.memoizedState,s=a.element,Xh(e,t),Ci(t,r,null,n);var l=t.memoizedState;if(r=l.element,a.isDehydrated)if(a={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},t.updateQueue.baseState=a,t.memoizedState=a,t.flags&256){s=ts(Error(P(423)),t),t=Sd(e,t,r,n,s);break e}else if(r!==s){s=ts(Error(P(424)),t),t=Sd(e,t,r,n,s);break e}else for(Ze=jn(t.stateNode.containerInfo.firstChild),et=t,le=!0,xt=null,n=Yh(t,null,r,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(Jr(),r===s){t=Vt(e,t,n);break e}Le(e,t,r,n)}t=t.child}return t;case 5:return Jh(t),e===null&&ko(t),r=t.type,s=t.pendingProps,a=e!==null?e.memoizedProps:null,l=s.children,wo(r,s)?l=null:a!==null&&wo(r,a)&&(t.flags|=32),bm(e,t),Le(e,t,l,n),t.child;case 6:return e===null&&ko(t),null;case 13:return km(e,t,n);case 4:return Bu(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=Zr(t,null,r,n):Le(e,t,r,n),t.child;case 11:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:pt(r,s),jd(e,t,r,s,n);case 7:return Le(e,t,t.pendingProps,n),t.child;case 8:return Le(e,t,t.pendingProps.children,n),t.child;case 12:return Le(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,s=t.pendingProps,a=t.memoizedProps,l=s.value,se(Si,r._currentValue),r._currentValue=l,a!==null)if(bt(a.value,l)){if(a.children===s.children&&!Qe.current){t=Vt(e,t,n);break e}}else for(a=t.child,a!==null&&(a.return=t);a!==null;){var o=a.dependencies;if(o!==null){l=a.child;for(var u=o.firstContext;u!==null;){if(u.context===r){if(a.tag===1){u=qt(-1,n&-n),u.tag=2;var c=a.updateQueue;if(c!==null){c=c.shared;var h=c.pending;h===null?u.next=u:(u.next=h.next,h.next=u),c.pending=u}}a.lanes|=n,u=a.alternate,u!==null&&(u.lanes|=n),Co(a.return,n,t),o.lanes|=n;break}u=u.next}}else if(a.tag===10)l=a.type===t.type?null:a.child;else if(a.tag===18){if(l=a.return,l===null)throw Error(P(341));l.lanes|=n,o=l.alternate,o!==null&&(o.lanes|=n),Co(l,n,t),l=a.sibling}else l=a.child;if(l!==null)l.return=a;else for(l=a;l!==null;){if(l===t){l=null;break}if(a=l.sibling,a!==null){a.return=l.return,l=a;break}l=l.return}a=l}Le(e,t,s.children,n),t=t.child}return t;case 9:return s=t.type,r=t.pendingProps.children,Mr(t,n),s=ft(s),r=r(s),t.flags|=1,Le(e,t,r,n),t.child;case 14:return r=t.type,s=pt(r,t.pendingProps),s=pt(r.type,s),Nd(e,t,r,s,n);case 15:return jm(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,s=t.pendingProps,s=t.elementType===r?s:pt(r,s),ei(e,t),t.tag=1,He(r)?(e=!0,ji(t)):e=!1,Mr(t,n),xm(t,r,s),Po(t,r,s,n),To(null,t,r,!0,e,n);case 19:return Cm(e,t,n);case 22:return Nm(e,t,n)}throw Error(P(156,t.tag))};function qm(e,t){return ph(e,t)}function _y(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ct(e,t,n,r){return new _y(e,t,n,r)}function sc(e){return e=e.prototype,!(!e||!e.isReactComponent)}function My(e){if(typeof e=="function")return sc(e)?1:0;if(e!=null){if(e=e.$$typeof,e===bu)return 11;if(e===Su)return 14}return 2}function kn(e,t){var n=e.alternate;return n===null?(n=ct(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ri(e,t,n,r,s,a){var l=2;if(r=e,typeof e=="function")sc(e)&&(l=1);else if(typeof e=="string")l=5;else e:switch(e){case vr:return nr(n.children,s,a,t);case Nu:l=8,s|=8;break;case Xl:return e=ct(12,n,t,s|2),e.elementType=Xl,e.lanes=a,e;case Jl:return e=ct(13,n,t,s),e.elementType=Jl,e.lanes=a,e;case Zl:return e=ct(19,n,t,s),e.elementType=Zl,e.lanes=a,e;case Jf:return tl(n,s,a,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case Gf:l=10;break e;case Xf:l=9;break e;case bu:l=11;break e;case Su:l=14;break e;case tn:l=16,r=null;break e}throw Error(P(130,e==null?e:typeof e,""))}return t=ct(l,n,t,s),t.elementType=e,t.type=r,t.lanes=a,t}function nr(e,t,n,r){return e=ct(7,e,r,t),e.lanes=n,e}function tl(e,t,n,r){return e=ct(22,e,r,t),e.elementType=Jf,e.lanes=n,e.stateNode={isHidden:!1},e}function Ul(e,t,n){return e=ct(6,e,null,t),e.lanes=n,e}function $l(e,t,n){return t=ct(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Fy(e,t,n,r,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=jl(0),this.expirationTimes=jl(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=jl(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function ac(e,t,n,r,s,a,l,o,u){return e=new Fy(e,t,n,o,u),t===1?(t=1,a===!0&&(t|=8)):t=0,a=ct(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},qu(a),e}function Ly(e,t,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:xr,key:r==null?null:""+r,children:e,containerInfo:t,implementation:n}}function Bm(e){if(!e)return Rn;e=e._reactInternals;e:{if(fr(e)!==e||e.tag!==1)throw Error(P(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(He(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(P(171))}if(e.tag===1){var n=e.type;if(He(n))return Bh(e,n,t)}return t}function Wm(e,t,n,r,s,a,l,o,u){return e=ac(n,r,!0,e,s,a,l,o,u),e.context=Bm(null),n=e.current,r=ze(),s=Sn(n),a=qt(r,s),a.callback=t??null,Nn(n,a,s),e.current.lanes=s,da(e,s,r),Ve(e,r),e}function nl(e,t,n,r){var s=t.current,a=ze(),l=Sn(s);return n=Bm(n),t.context===null?t.context=n:t.pendingContext=n,t=qt(a,l),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),e=Nn(s,t,l),e!==null&&(Nt(e,s,l,a),Xa(e,s,l)),l}function Mi(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function Md(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function ic(e,t){Md(e,t),(e=e.alternate)&&Md(e,t)}function zy(){return null}var Qm=typeof reportError=="function"?reportError:function(e){console.error(e)};function lc(e){this._internalRoot=e}rl.prototype.render=lc.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(P(409));nl(e,t,null,null)};rl.prototype.unmount=lc.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;or(function(){nl(null,e,null,null)}),t[Qt]=null}};function rl(e){this._internalRoot=e}rl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Nh();e={blockedOn:null,target:e,priority:t};for(var n=0;n<rn.length&&t!==0&&t<rn[n].priority;n++);rn.splice(n,0,e),n===0&&Sh(e)}};function oc(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function sl(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function Fd(){}function Ay(e,t,n,r,s){if(s){if(typeof r=="function"){var a=r;r=function(){var c=Mi(l);a.call(c)}}var l=Wm(t,r,e,0,null,!1,!1,"",Fd);return e._reactRootContainer=l,e[Qt]=l.current,Hs(e.nodeType===8?e.parentNode:e),or(),l}for(;s=e.lastChild;)e.removeChild(s);if(typeof r=="function"){var o=r;r=function(){var c=Mi(u);o.call(c)}}var u=ac(e,0,!1,null,null,!1,!1,"",Fd);return e._reactRootContainer=u,e[Qt]=u.current,Hs(e.nodeType===8?e.parentNode:e),or(function(){nl(t,u,n,r)}),u}function al(e,t,n,r,s){var a=n._reactRootContainer;if(a){var l=a;if(typeof s=="function"){var o=s;s=function(){var u=Mi(l);o.call(u)}}nl(t,l,e,s)}else l=Ay(n,t,e,s,r);return Mi(l)}wh=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=Cs(t.pendingLanes);n!==0&&(Eu(t,n|1),Ve(t,pe()),!(Y&6)&&(ns=pe()+500,Fn()))}break;case 13:or(function(){var r=Ht(e,1);if(r!==null){var s=ze();Nt(r,e,1,s)}}),ic(e,1)}};Pu=function(e){if(e.tag===13){var t=Ht(e,134217728);if(t!==null){var n=ze();Nt(t,e,134217728,n)}ic(e,134217728)}};jh=function(e){if(e.tag===13){var t=Sn(e),n=Ht(e,t);if(n!==null){var r=ze();Nt(n,e,t,r)}ic(e,t)}};Nh=function(){return te};bh=function(e,t){var n=te;try{return te=e,t()}finally{te=n}};uo=function(e,t,n){switch(t){case"input":if(no(e,n),t=n.name,n.type==="radio"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var s=Yi(r);if(!s)throw Error(P(90));eh(r),no(r,s)}}}break;case"textarea":nh(e,n);break;case"select":t=n.value,t!=null&&Or(e,!!n.multiple,t,!1)}};uh=tc;ch=or;var Iy={usingClientEntryPoint:!1,Events:[ha,br,Yi,lh,oh,tc]},vs={findFiberByHostInstance:Bn,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},Uy={bundleType:vs.bundleType,version:vs.version,rendererPackageName:vs.rendererPackageName,rendererConfig:vs.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Yt.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=hh(e),e===null?null:e.stateNode},findFiberByHostInstance:vs.findFiberByHostInstance||zy,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var $a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!$a.isDisabled&&$a.supportsFiber)try{Qi=$a.inject(Uy),_t=$a}catch{}}rt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Iy;rt.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!oc(t))throw Error(P(200));return Ly(e,t,null,n)};rt.createRoot=function(e,t){if(!oc(e))throw Error(P(299));var n=!1,r="",s=Qm;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(s=t.onRecoverableError)),t=ac(e,1,!1,null,null,n,!1,r,s),e[Qt]=t.current,Hs(e.nodeType===8?e.parentNode:e),new lc(t)};rt.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(P(188)):(e=Object.keys(e).join(","),Error(P(268,e)));return e=hh(t),e=e===null?null:e.stateNode,e};rt.flushSync=function(e){return or(e)};rt.hydrate=function(e,t,n){if(!sl(t))throw Error(P(200));return al(null,e,t,!0,n)};rt.hydrateRoot=function(e,t,n){if(!oc(e))throw Error(P(405));var r=n!=null&&n.hydratedSources||null,s=!1,a="",l=Qm;if(n!=null&&(n.unstable_strictMode===!0&&(s=!0),n.identifierPrefix!==void 0&&(a=n.identifierPrefix),n.onRecoverableError!==void 0&&(l=n.onRecoverableError)),t=Wm(t,null,e,1,n??null,s,!1,a,l),e[Qt]=t.current,Hs(e),r)for(e=0;e<r.length;e++)n=r[e],s=n._getVersion,s=s(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,s]:t.mutableSourceEagerHydrationData.push(n,s);return new rl(t)};rt.render=function(e,t,n){if(!sl(t))throw Error(P(200));return al(null,e,t,!1,n)};rt.unmountComponentAtNode=function(e){if(!sl(e))throw Error(P(40));return e._reactRootContainer?(or(function(){al(null,null,e,!1,function(){e._reactRootContainer=null,e[Qt]=null})}),!0):!1};rt.unstable_batchedUpdates=tc;rt.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!sl(n))throw Error(P(200));if(e==null||e._reactInternals===void 0)throw Error(P(38));return al(e,t,n,!1,r)};rt.version="18.3.1-next-f1338f8080-20240426";function Hm(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Hm)}catch(e){console.error(e)}}Hm(),Hf.exports=rt;var $y=Hf.exports,Vm,Ld=$y;Vm=Ld.createRoot,Ld.hydrateRoot;/**
 * @remix-run/router v1.19.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function ta(){return ta=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ta.apply(this,arguments)}var yn;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(yn||(yn={}));const zd="popstate";function qy(e){e===void 0&&(e={});function t(r,s){let{pathname:a,search:l,hash:o}=r.location;return Bo("",{pathname:a,search:l,hash:o},s.state&&s.state.usr||null,s.state&&s.state.key||"default")}function n(r,s){return typeof s=="string"?s:Fi(s)}return Wy(t,n,null,e)}function ge(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function Km(e,t){if(!e){typeof console<"u"&&console.warn(t);try{throw new Error(t)}catch{}}}function By(){return Math.random().toString(36).substr(2,8)}function Ad(e,t){return{usr:e.state,key:e.key,idx:t}}function Bo(e,t,n,r){return n===void 0&&(n=null),ta({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof t=="string"?ls(t):t,{state:n,key:t&&t.key||r||By()})}function Fi(e){let{pathname:t="/",search:n="",hash:r=""}=e;return n&&n!=="?"&&(t+=n.charAt(0)==="?"?n:"?"+n),r&&r!=="#"&&(t+=r.charAt(0)==="#"?r:"#"+r),t}function ls(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function Wy(e,t,n,r){r===void 0&&(r={});let{window:s=document.defaultView,v5Compat:a=!1}=r,l=s.history,o=yn.Pop,u=null,c=h();c==null&&(c=0,l.replaceState(ta({},l.state,{idx:c}),""));function h(){return(l.state||{idx:null}).idx}function d(){o=yn.Pop;let j=h(),p=j==null?null:j-c;c=j,u&&u({action:o,location:v.location,delta:p})}function f(j,p){o=yn.Push;let y=Bo(v.location,j,p);c=h()+1;let x=Ad(y,c),b=v.createHref(y);try{l.pushState(x,"",b)}catch(C){if(C instanceof DOMException&&C.name==="DataCloneError")throw C;s.location.assign(b)}a&&u&&u({action:o,location:v.location,delta:1})}function g(j,p){o=yn.Replace;let y=Bo(v.location,j,p);c=h();let x=Ad(y,c),b=v.createHref(y);l.replaceState(x,"",b),a&&u&&u({action:o,location:v.location,delta:0})}function m(j){let p=s.location.origin!=="null"?s.location.origin:s.location.href,y=typeof j=="string"?j:Fi(j);return y=y.replace(/ $/,"%20"),ge(p,"No window.location.(origin|href) available to create URL for href: "+y),new URL(y,p)}let v={get action(){return o},get location(){return e(s,l)},listen(j){if(u)throw new Error("A history only accepts one active listener");return s.addEventListener(zd,d),u=j,()=>{s.removeEventListener(zd,d),u=null}},createHref(j){return t(s,j)},createURL:m,encodeLocation(j){let p=m(j);return{pathname:p.pathname,search:p.search,hash:p.hash}},push:f,replace:g,go(j){return l.go(j)}};return v}var Id;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(Id||(Id={}));function Qy(e,t,n){return n===void 0&&(n="/"),Hy(e,t,n,!1)}function Hy(e,t,n,r){let s=typeof t=="string"?ls(t):t,a=uc(s.pathname||"/",n);if(a==null)return null;let l=Ym(e);Vy(l);let o=null;for(let u=0;o==null&&u<l.length;++u){let c=sx(a);o=nx(l[u],c,r)}return o}function Ym(e,t,n,r){t===void 0&&(t=[]),n===void 0&&(n=[]),r===void 0&&(r="");let s=(a,l,o)=>{let u={relativePath:o===void 0?a.path||"":o,caseSensitive:a.caseSensitive===!0,childrenIndex:l,route:a};u.relativePath.startsWith("/")&&(ge(u.relativePath.startsWith(r),'Absolute route path "'+u.relativePath+'" nested under path '+('"'+r+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),u.relativePath=u.relativePath.slice(r.length));let c=Cn([r,u.relativePath]),h=n.concat(u);a.children&&a.children.length>0&&(ge(a.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+c+'".')),Ym(a.children,t,h,c)),!(a.path==null&&!a.index)&&t.push({path:c,score:ex(c,a.index),routesMeta:h})};return e.forEach((a,l)=>{var o;if(a.path===""||!((o=a.path)!=null&&o.includes("?")))s(a,l);else for(let u of Gm(a.path))s(a,l,u)}),t}function Gm(e){let t=e.split("/");if(t.length===0)return[];let[n,...r]=t,s=n.endsWith("?"),a=n.replace(/\?$/,"");if(r.length===0)return s?[a,""]:[a];let l=Gm(r.join("/")),o=[];return o.push(...l.map(u=>u===""?a:[a,u].join("/"))),s&&o.push(...l),o.map(u=>e.startsWith("/")&&u===""?"/":u)}function Vy(e){e.sort((t,n)=>t.score!==n.score?n.score-t.score:tx(t.routesMeta.map(r=>r.childrenIndex),n.routesMeta.map(r=>r.childrenIndex)))}const Ky=/^:[\w-]+$/,Yy=3,Gy=2,Xy=1,Jy=10,Zy=-2,Ud=e=>e==="*";function ex(e,t){let n=e.split("/"),r=n.length;return n.some(Ud)&&(r+=Zy),t&&(r+=Gy),n.filter(s=>!Ud(s)).reduce((s,a)=>s+(Ky.test(a)?Yy:a===""?Xy:Jy),r)}function tx(e,t){return e.length===t.length&&e.slice(0,-1).every((r,s)=>r===t[s])?e[e.length-1]-t[t.length-1]:0}function nx(e,t,n){let{routesMeta:r}=e,s={},a="/",l=[];for(let o=0;o<r.length;++o){let u=r[o],c=o===r.length-1,h=a==="/"?t:t.slice(a.length)||"/",d=$d({path:u.relativePath,caseSensitive:u.caseSensitive,end:c},h),f=u.route;if(!d&&c&&n&&!r[r.length-1].route.index&&(d=$d({path:u.relativePath,caseSensitive:u.caseSensitive,end:!1},h)),!d)return null;Object.assign(s,d.params),l.push({params:s,pathname:Cn([a,d.pathname]),pathnameBase:ox(Cn([a,d.pathnameBase])),route:f}),d.pathnameBase!=="/"&&(a=Cn([a,d.pathnameBase]))}return l}function $d(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=rx(e.path,e.caseSensitive,e.end),s=t.match(n);if(!s)return null;let a=s[0],l=a.replace(/(.)\/+$/,"$1"),o=s.slice(1);return{params:r.reduce((c,h,d)=>{let{paramName:f,isOptional:g}=h;if(f==="*"){let v=o[d]||"";l=a.slice(0,a.length-v.length).replace(/(.)\/+$/,"$1")}const m=o[d];return g&&!m?c[f]=void 0:c[f]=(m||"").replace(/%2F/g,"/"),c},{}),pathname:a,pathnameBase:l,pattern:e}}function rx(e,t,n){t===void 0&&(t=!1),n===void 0&&(n=!0),Km(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let r=[],s="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(l,o,u)=>(r.push({paramName:o,isOptional:u!=null}),u?"/?([^\\/]+)?":"/([^\\/]+)"));return e.endsWith("*")?(r.push({paramName:"*"}),s+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?s+="\\/*$":e!==""&&e!=="/"&&(s+="(?:(?=\\/|$))"),[new RegExp(s,t?void 0:"i"),r]}function sx(e){try{return e.split("/").map(t=>decodeURIComponent(t).replace(/\//g,"%2F")).join("/")}catch(t){return Km(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+t+").")),e}}function uc(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,r=e.charAt(n);return r&&r!=="/"?null:e.slice(n)||"/"}function ax(e,t){t===void 0&&(t="/");let{pathname:n,search:r="",hash:s=""}=typeof e=="string"?ls(e):e;return{pathname:n?n.startsWith("/")?n:ix(n,t):t,search:ux(r),hash:cx(s)}}function ix(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(s=>{s===".."?n.length>1&&n.pop():s!=="."&&n.push(s)}),n.length>1?n.join("/"):"/"}function ql(e,t,n,r){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the ")+("`to."+n+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function lx(e){return e.filter((t,n)=>n===0||t.route.path&&t.route.path.length>0)}function cc(e,t){let n=lx(e);return t?n.map((r,s)=>s===n.length-1?r.pathname:r.pathnameBase):n.map(r=>r.pathnameBase)}function dc(e,t,n,r){r===void 0&&(r=!1);let s;typeof e=="string"?s=ls(e):(s=ta({},e),ge(!s.pathname||!s.pathname.includes("?"),ql("?","pathname","search",s)),ge(!s.pathname||!s.pathname.includes("#"),ql("#","pathname","hash",s)),ge(!s.search||!s.search.includes("#"),ql("#","search","hash",s)));let a=e===""||s.pathname==="",l=a?"/":s.pathname,o;if(l==null)o=n;else{let d=t.length-1;if(!r&&l.startsWith("..")){let f=l.split("/");for(;f[0]==="..";)f.shift(),d-=1;s.pathname=f.join("/")}o=d>=0?t[d]:"/"}let u=ax(s,o),c=l&&l!=="/"&&l.endsWith("/"),h=(a||l===".")&&n.endsWith("/");return!u.pathname.endsWith("/")&&(c||h)&&(u.pathname+="/"),u}const Cn=e=>e.join("/").replace(/\/\/+/g,"/"),ox=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),ux=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,cx=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;function dx(e){return e!=null&&typeof e.status=="number"&&typeof e.statusText=="string"&&typeof e.internal=="boolean"&&"data"in e}const Xm=["post","put","patch","delete"];new Set(Xm);const fx=["get",...Xm];new Set(fx);/**
 * React Router v6.26.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function na(){return na=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},na.apply(this,arguments)}const fc=N.createContext(null),hx=N.createContext(null),Ln=N.createContext(null),il=N.createContext(null),Gt=N.createContext({outlet:null,matches:[],isDataRoute:!1}),Jm=N.createContext(null);function mx(e,t){let{relative:n}=t===void 0?{}:t;os()||ge(!1);let{basename:r,navigator:s}=N.useContext(Ln),{hash:a,pathname:l,search:o}=ep(e,{relative:n}),u=l;return r!=="/"&&(u=l==="/"?r:Cn([r,l])),s.createHref({pathname:u,search:o,hash:a})}function os(){return N.useContext(il)!=null}function pa(){return os()||ge(!1),N.useContext(il).location}function Zm(e){N.useContext(Ln).static||N.useLayoutEffect(e)}function hc(){let{isDataRoute:e}=N.useContext(Gt);return e?Ex():px()}function px(){os()||ge(!1);let e=N.useContext(fc),{basename:t,future:n,navigator:r}=N.useContext(Ln),{matches:s}=N.useContext(Gt),{pathname:a}=pa(),l=JSON.stringify(cc(s,n.v7_relativeSplatPath)),o=N.useRef(!1);return Zm(()=>{o.current=!0}),N.useCallback(function(c,h){if(h===void 0&&(h={}),!o.current)return;if(typeof c=="number"){r.go(c);return}let d=dc(c,JSON.parse(l),a,h.relative==="path");e==null&&t!=="/"&&(d.pathname=d.pathname==="/"?t:Cn([t,d.pathname])),(h.replace?r.replace:r.push)(d,h.state,h)},[t,r,l,a,e])}function mc(){let{matches:e}=N.useContext(Gt),t=e[e.length-1];return t?t.params:{}}function ep(e,t){let{relative:n}=t===void 0?{}:t,{future:r}=N.useContext(Ln),{matches:s}=N.useContext(Gt),{pathname:a}=pa(),l=JSON.stringify(cc(s,r.v7_relativeSplatPath));return N.useMemo(()=>dc(e,JSON.parse(l),a,n==="path"),[e,l,a,n])}function gx(e,t){return yx(e,t)}function yx(e,t,n,r){os()||ge(!1);let{navigator:s}=N.useContext(Ln),{matches:a}=N.useContext(Gt),l=a[a.length-1],o=l?l.params:{};l&&l.pathname;let u=l?l.pathnameBase:"/";l&&l.route;let c=pa(),h;if(t){var d;let j=typeof t=="string"?ls(t):t;u==="/"||(d=j.pathname)!=null&&d.startsWith(u)||ge(!1),h=j}else h=c;let f=h.pathname||"/",g=f;if(u!=="/"){let j=u.replace(/^\//,"").split("/");g="/"+f.replace(/^\//,"").split("/").slice(j.length).join("/")}let m=Qy(e,{pathname:g}),v=Nx(m&&m.map(j=>Object.assign({},j,{params:Object.assign({},o,j.params),pathname:Cn([u,s.encodeLocation?s.encodeLocation(j.pathname).pathname:j.pathname]),pathnameBase:j.pathnameBase==="/"?u:Cn([u,s.encodeLocation?s.encodeLocation(j.pathnameBase).pathname:j.pathnameBase])})),a,n,r);return t&&v?N.createElement(il.Provider,{value:{location:na({pathname:"/",search:"",hash:"",state:null,key:"default"},h),navigationType:yn.Pop}},v):v}function xx(){let e=Cx(),t=dx(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,s={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return N.createElement(N.Fragment,null,N.createElement("h2",null,"Unexpected Application Error!"),N.createElement("h3",{style:{fontStyle:"italic"}},t),n?N.createElement("pre",{style:s},n):null,null)}const vx=N.createElement(xx,null);class wx extends N.Component{constructor(t){super(t),this.state={location:t.location,revalidation:t.revalidation,error:t.error}}static getDerivedStateFromError(t){return{error:t}}static getDerivedStateFromProps(t,n){return n.location!==t.location||n.revalidation!=="idle"&&t.revalidation==="idle"?{error:t.error,location:t.location,revalidation:t.revalidation}:{error:t.error!==void 0?t.error:n.error,location:n.location,revalidation:t.revalidation||n.revalidation}}componentDidCatch(t,n){console.error("React Router caught the following error during render",t,n)}render(){return this.state.error!==void 0?N.createElement(Gt.Provider,{value:this.props.routeContext},N.createElement(Jm.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function jx(e){let{routeContext:t,match:n,children:r}=e,s=N.useContext(fc);return s&&s.static&&s.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(s.staticContext._deepestRenderedBoundaryId=n.route.id),N.createElement(Gt.Provider,{value:t},r)}function Nx(e,t,n,r){var s;if(t===void 0&&(t=[]),n===void 0&&(n=null),r===void 0&&(r=null),e==null){var a;if(!n)return null;if(n.errors)e=n.matches;else if((a=r)!=null&&a.v7_partialHydration&&t.length===0&&!n.initialized&&n.matches.length>0)e=n.matches;else return null}let l=e,o=(s=n)==null?void 0:s.errors;if(o!=null){let h=l.findIndex(d=>d.route.id&&(o==null?void 0:o[d.route.id])!==void 0);h>=0||ge(!1),l=l.slice(0,Math.min(l.length,h+1))}let u=!1,c=-1;if(n&&r&&r.v7_partialHydration)for(let h=0;h<l.length;h++){let d=l[h];if((d.route.HydrateFallback||d.route.hydrateFallbackElement)&&(c=h),d.route.id){let{loaderData:f,errors:g}=n,m=d.route.loader&&f[d.route.id]===void 0&&(!g||g[d.route.id]===void 0);if(d.route.lazy||m){u=!0,c>=0?l=l.slice(0,c+1):l=[l[0]];break}}}return l.reduceRight((h,d,f)=>{let g,m=!1,v=null,j=null;n&&(g=o&&d.route.id?o[d.route.id]:void 0,v=d.route.errorElement||vx,u&&(c<0&&f===0?(m=!0,j=null):c===f&&(m=!0,j=d.route.hydrateFallbackElement||null)));let p=t.concat(l.slice(0,f+1)),y=()=>{let x;return g?x=v:m?x=j:d.route.Component?x=N.createElement(d.route.Component,null):d.route.element?x=d.route.element:x=h,N.createElement(jx,{match:d,routeContext:{outlet:h,matches:p,isDataRoute:n!=null},children:x})};return n&&(d.route.ErrorBoundary||d.route.errorElement||f===0)?N.createElement(wx,{location:n.location,revalidation:n.revalidation,component:v,error:g,children:y(),routeContext:{outlet:null,matches:p,isDataRoute:!0}}):y()},null)}var tp=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(tp||{}),Li=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Li||{});function bx(e){let t=N.useContext(fc);return t||ge(!1),t}function Sx(e){let t=N.useContext(hx);return t||ge(!1),t}function kx(e){let t=N.useContext(Gt);return t||ge(!1),t}function np(e){let t=kx(),n=t.matches[t.matches.length-1];return n.route.id||ge(!1),n.route.id}function Cx(){var e;let t=N.useContext(Jm),n=Sx(Li.UseRouteError),r=np(Li.UseRouteError);return t!==void 0?t:(e=n.errors)==null?void 0:e[r]}function Ex(){let{router:e}=bx(tp.UseNavigateStable),t=np(Li.UseNavigateStable),n=N.useRef(!1);return Zm(()=>{n.current=!0}),N.useCallback(function(s,a){a===void 0&&(a={}),n.current&&(typeof s=="number"?e.navigate(s):e.navigate(s,na({fromRouteId:t},a)))},[e,t])}function Ge(e){let{to:t,replace:n,state:r,relative:s}=e;os()||ge(!1);let{future:a,static:l}=N.useContext(Ln),{matches:o}=N.useContext(Gt),{pathname:u}=pa(),c=hc(),h=dc(t,cc(o,a.v7_relativeSplatPath),u,s==="path"),d=JSON.stringify(h);return N.useEffect(()=>c(JSON.parse(d),{replace:n,state:r,relative:s}),[c,d,s,n,r]),null}function at(e){ge(!1)}function Px(e){let{basename:t="/",children:n=null,location:r,navigationType:s=yn.Pop,navigator:a,static:l=!1,future:o}=e;os()&&ge(!1);let u=t.replace(/^\/*/,"/"),c=N.useMemo(()=>({basename:u,navigator:a,static:l,future:na({v7_relativeSplatPath:!1},o)}),[u,o,a,l]);typeof r=="string"&&(r=ls(r));let{pathname:h="/",search:d="",hash:f="",state:g=null,key:m="default"}=r,v=N.useMemo(()=>{let j=uc(h,u);return j==null?null:{location:{pathname:j,search:d,hash:f,state:g,key:m},navigationType:s}},[u,h,d,f,g,m,s]);return v==null?null:N.createElement(Ln.Provider,{value:c},N.createElement(il.Provider,{children:n,value:v}))}function Rx(e){let{children:t,location:n}=e;return gx(Wo(t),n)}new Promise(()=>{});function Wo(e,t){t===void 0&&(t=[]);let n=[];return N.Children.forEach(e,(r,s)=>{if(!N.isValidElement(r))return;let a=[...t,s];if(r.type===N.Fragment){n.push.apply(n,Wo(r.props.children,a));return}r.type!==at&&ge(!1),!r.props.index||!r.props.children||ge(!1);let l={id:r.props.id||a.join("-"),caseSensitive:r.props.caseSensitive,element:r.props.element,Component:r.props.Component,index:r.props.index,path:r.props.path,loader:r.props.loader,action:r.props.action,errorElement:r.props.errorElement,ErrorBoundary:r.props.ErrorBoundary,hasErrorBoundary:r.props.ErrorBoundary!=null||r.props.errorElement!=null,shouldRevalidate:r.props.shouldRevalidate,handle:r.props.handle,lazy:r.props.lazy};r.props.children&&(l.children=Wo(r.props.children,a)),n.push(l)}),n}/**
 * React Router DOM v6.26.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Qo(){return Qo=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},Qo.apply(this,arguments)}function Ox(e,t){if(e==null)return{};var n={},r=Object.keys(e),s,a;for(a=0;a<r.length;a++)s=r[a],!(t.indexOf(s)>=0)&&(n[s]=e[s]);return n}function Tx(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}function Dx(e,t){return e.button===0&&(!t||t==="_self")&&!Tx(e)}const _x=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"],Mx="6";try{window.__reactRouterVersion=Mx}catch{}const Fx="startTransition",qd=Og[Fx];function Lx(e){let{basename:t,children:n,future:r,window:s}=e,a=N.useRef();a.current==null&&(a.current=qy({window:s,v5Compat:!0}));let l=a.current,[o,u]=N.useState({action:l.action,location:l.location}),{v7_startTransition:c}=r||{},h=N.useCallback(d=>{c&&qd?qd(()=>u(d)):u(d)},[u,c]);return N.useLayoutEffect(()=>l.listen(h),[l,h]),N.createElement(Px,{basename:t,children:n,location:o.location,navigationType:o.action,navigator:l,future:r})}const zx=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",Ax=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,U=N.forwardRef(function(t,n){let{onClick:r,relative:s,reloadDocument:a,replace:l,state:o,target:u,to:c,preventScrollReset:h,unstable_viewTransition:d}=t,f=Ox(t,_x),{basename:g}=N.useContext(Ln),m,v=!1;if(typeof c=="string"&&Ax.test(c)&&(m=c,zx))try{let x=new URL(window.location.href),b=c.startsWith("//")?new URL(x.protocol+c):new URL(c),C=uc(b.pathname,g);b.origin===x.origin&&C!=null?c=C+b.search+b.hash:v=!0}catch{}let j=mx(c,{relative:s}),p=Ix(c,{replace:l,state:o,target:u,preventScrollReset:h,relative:s,unstable_viewTransition:d});function y(x){r&&r(x),x.defaultPrevented||p(x)}return N.createElement("a",Qo({},f,{href:m||j,onClick:v||a?r:y,ref:n,target:u}))});var Bd;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(Bd||(Bd={}));var Wd;(function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"})(Wd||(Wd={}));function Ix(e,t){let{target:n,replace:r,state:s,preventScrollReset:a,relative:l,unstable_viewTransition:o}=t===void 0?{}:t,u=hc(),c=pa(),h=ep(e,{relative:l});return N.useCallback(d=>{if(Dx(d,n)){d.preventDefault();let f=r!==void 0?r:Fi(c)===Fi(h);u(e,{replace:f,state:s,preventScrollReset:a,relative:l,unstable_viewTransition:o})}},[c,u,h,r,s,n,e,a,l,o])}var us=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(e){return this.listeners.add(e),this.onSubscribe(),()=>{this.listeners.delete(e),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}},rs=typeof window>"u"||"Deno"in globalThis;function lt(){}function Ux(e,t){return typeof e=="function"?e(t):e}function Ho(e){return typeof e=="number"&&e>=0&&e!==1/0}function rp(e,t){return Math.max(e+(t||0)-Date.now(),0)}function Lr(e,t){return typeof e=="function"?e(t):e}function vt(e,t){return typeof e=="function"?e(t):e}function Qd(e,t){const{type:n="all",exact:r,fetchStatus:s,predicate:a,queryKey:l,stale:o}=e;if(l){if(r){if(t.queryHash!==pc(l,t.options))return!1}else if(!ra(t.queryKey,l))return!1}if(n!=="all"){const u=t.isActive();if(n==="active"&&!u||n==="inactive"&&u)return!1}return!(typeof o=="boolean"&&t.isStale()!==o||s&&s!==t.state.fetchStatus||a&&!a(t))}function Hd(e,t){const{exact:n,status:r,predicate:s,mutationKey:a}=e;if(a){if(!t.options.mutationKey)return!1;if(n){if(ur(t.options.mutationKey)!==ur(a))return!1}else if(!ra(t.options.mutationKey,a))return!1}return!(r&&t.state.status!==r||s&&!s(t))}function pc(e,t){return((t==null?void 0:t.queryKeyHashFn)||ur)(e)}function ur(e){return JSON.stringify(e,(t,n)=>Vo(n)?Object.keys(n).sort().reduce((r,s)=>(r[s]=n[s],r),{}):n)}function ra(e,t){return e===t?!0:typeof e!=typeof t?!1:e&&t&&typeof e=="object"&&typeof t=="object"?!Object.keys(t).some(n=>!ra(e[n],t[n])):!1}function sp(e,t){if(e===t)return e;const n=Vd(e)&&Vd(t);if(n||Vo(e)&&Vo(t)){const r=n?e:Object.keys(e),s=r.length,a=n?t:Object.keys(t),l=a.length,o=n?[]:{};let u=0;for(let c=0;c<l;c++){const h=n?c:a[c];(!n&&r.includes(h)||n)&&e[h]===void 0&&t[h]===void 0?(o[h]=void 0,u++):(o[h]=sp(e[h],t[h]),o[h]===e[h]&&e[h]!==void 0&&u++)}return s===l&&u===s?e:o}return t}function zi(e,t){if(!t||Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(e[n]!==t[n])return!1;return!0}function Vd(e){return Array.isArray(e)&&e.length===Object.keys(e).length}function Vo(e){if(!Kd(e))return!1;const t=e.constructor;if(t===void 0)return!0;const n=t.prototype;return!(!Kd(n)||!n.hasOwnProperty("isPrototypeOf")||Object.getPrototypeOf(e)!==Object.prototype)}function Kd(e){return Object.prototype.toString.call(e)==="[object Object]"}function $x(e){return new Promise(t=>{setTimeout(t,e)})}function Ko(e,t,n){return typeof n.structuralSharing=="function"?n.structuralSharing(e,t):n.structuralSharing!==!1?sp(e,t):t}function qx(e,t,n=0){const r=[...e,t];return n&&r.length>n?r.slice(1):r}function Bx(e,t,n=0){const r=[t,...e];return n&&r.length>n?r.slice(0,-1):r}var ap=Symbol();function ip(e,t){return!e.queryFn&&(t!=null&&t.initialPromise)?()=>t.initialPromise:!e.queryFn||e.queryFn===ap?()=>Promise.reject(new Error(`Missing queryFn: '${e.queryHash}'`)):e.queryFn}var Kn,ln,zr,kf,Wx=(kf=class extends us{constructor(){super();A(this,Kn);A(this,ln);A(this,zr);D(this,zr,t=>{if(!rs&&window.addEventListener){const n=()=>t();return window.addEventListener("visibilitychange",n,!1),()=>{window.removeEventListener("visibilitychange",n)}}})}onSubscribe(){w(this,ln)||this.setEventListener(w(this,zr))}onUnsubscribe(){var t;this.hasListeners()||((t=w(this,ln))==null||t.call(this),D(this,ln,void 0))}setEventListener(t){var n;D(this,zr,t),(n=w(this,ln))==null||n.call(this),D(this,ln,t(r=>{typeof r=="boolean"?this.setFocused(r):this.onFocus()}))}setFocused(t){w(this,Kn)!==t&&(D(this,Kn,t),this.onFocus())}onFocus(){const t=this.isFocused();this.listeners.forEach(n=>{n(t)})}isFocused(){var t;return typeof w(this,Kn)=="boolean"?w(this,Kn):((t=globalThis.document)==null?void 0:t.visibilityState)!=="hidden"}},Kn=new WeakMap,ln=new WeakMap,zr=new WeakMap,kf),gc=new Wx,Ar,on,Ir,Cf,Qx=(Cf=class extends us{constructor(){super();A(this,Ar,!0);A(this,on);A(this,Ir);D(this,Ir,t=>{if(!rs&&window.addEventListener){const n=()=>t(!0),r=()=>t(!1);return window.addEventListener("online",n,!1),window.addEventListener("offline",r,!1),()=>{window.removeEventListener("online",n),window.removeEventListener("offline",r)}}})}onSubscribe(){w(this,on)||this.setEventListener(w(this,Ir))}onUnsubscribe(){var t;this.hasListeners()||((t=w(this,on))==null||t.call(this),D(this,on,void 0))}setEventListener(t){var n;D(this,Ir,t),(n=w(this,on))==null||n.call(this),D(this,on,t(this.setOnline.bind(this)))}setOnline(t){w(this,Ar)!==t&&(D(this,Ar,t),this.listeners.forEach(r=>{r(t)}))}isOnline(){return w(this,Ar)}},Ar=new WeakMap,on=new WeakMap,Ir=new WeakMap,Cf),Ai=new Qx;function Hx(e){return Math.min(1e3*2**e,3e4)}function lp(e){return(e??"online")==="online"?Ai.isOnline():!0}var op=class extends Error{constructor(e){super("CancelledError"),this.revert=e==null?void 0:e.revert,this.silent=e==null?void 0:e.silent}};function Bl(e){return e instanceof op}function up(e){let t=!1,n=0,r=!1,s,a,l;const o=new Promise((p,y)=>{a=p,l=y}),u=p=>{var y;r||(m(new op(p)),(y=e.abort)==null||y.call(e))},c=()=>{t=!0},h=()=>{t=!1},d=()=>gc.isFocused()&&(e.networkMode==="always"||Ai.isOnline())&&e.canRun(),f=()=>lp(e.networkMode)&&e.canRun(),g=p=>{var y;r||(r=!0,(y=e.onSuccess)==null||y.call(e,p),s==null||s(),a(p))},m=p=>{var y;r||(r=!0,(y=e.onError)==null||y.call(e,p),s==null||s(),l(p))},v=()=>new Promise(p=>{var y;s=x=>{(r||d())&&p(x)},(y=e.onPause)==null||y.call(e)}).then(()=>{var p;s=void 0,r||(p=e.onContinue)==null||p.call(e)}),j=()=>{if(r)return;let p;const y=n===0?e.initialPromise:void 0;try{p=y??e.fn()}catch(x){p=Promise.reject(x)}Promise.resolve(p).then(g).catch(x=>{var E;if(r)return;const b=e.retry??(rs?0:3),C=e.retryDelay??Hx,O=typeof C=="function"?C(n,x):C,k=b===!0||typeof b=="number"&&n<b||typeof b=="function"&&b(n,x);if(t||!k){m(x);return}n++,(E=e.onFail)==null||E.call(e,n,x),$x(O).then(()=>d()?void 0:v()).then(()=>{t?m(x):j()})})};return{promise:o,cancel:u,continue:()=>(s==null||s(),o),cancelRetry:c,continueRetry:h,canStart:f,start:()=>(f()?j():v().then(j),o)}}function Vx(){let e=[],t=0,n=f=>{f()},r=f=>{f()},s=f=>setTimeout(f,0);const a=f=>{s=f},l=f=>{let g;t++;try{g=f()}finally{t--,t||c()}return g},o=f=>{t?e.push(f):s(()=>{n(f)})},u=f=>(...g)=>{o(()=>{f(...g)})},c=()=>{const f=e;e=[],f.length&&s(()=>{r(()=>{f.forEach(g=>{n(g)})})})};return{batch:l,batchCalls:u,schedule:o,setNotifyFunction:f=>{n=f},setBatchNotifyFunction:f=>{r=f},setScheduler:a}}var we=Vx(),Yn,Ef,cp=(Ef=class{constructor(){A(this,Yn)}destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),Ho(this.gcTime)&&D(this,Yn,setTimeout(()=>{this.optionalRemove()},this.gcTime))}updateGcTime(e){this.gcTime=Math.max(this.gcTime||0,e??(rs?1/0:5*60*1e3))}clearGcTimeout(){w(this,Yn)&&(clearTimeout(w(this,Yn)),D(this,Yn,void 0))}},Yn=new WeakMap,Ef),Ur,$r,it,Te,ia,Gn,gt,Lt,Pf,Kx=(Pf=class extends cp{constructor(t){super();A(this,gt);A(this,Ur);A(this,$r);A(this,it);A(this,Te);A(this,ia);A(this,Gn);D(this,Gn,!1),D(this,ia,t.defaultOptions),this.setOptions(t.options),this.observers=[],D(this,it,t.cache),this.queryKey=t.queryKey,this.queryHash=t.queryHash,D(this,Ur,Yx(this.options)),this.state=t.state??w(this,Ur),this.scheduleGc()}get meta(){return this.options.meta}get promise(){var t;return(t=w(this,Te))==null?void 0:t.promise}setOptions(t){this.options={...w(this,ia),...t},this.updateGcTime(this.options.gcTime)}optionalRemove(){!this.observers.length&&this.state.fetchStatus==="idle"&&w(this,it).remove(this)}setData(t,n){const r=Ko(this.state.data,t,this.options);return W(this,gt,Lt).call(this,{data:r,type:"success",dataUpdatedAt:n==null?void 0:n.updatedAt,manual:n==null?void 0:n.manual}),r}setState(t,n){W(this,gt,Lt).call(this,{type:"setState",state:t,setStateOptions:n})}cancel(t){var r,s;const n=(r=w(this,Te))==null?void 0:r.promise;return(s=w(this,Te))==null||s.cancel(t),n?n.then(lt).catch(lt):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(w(this,Ur))}isActive(){return this.observers.some(t=>vt(t.options.enabled,this)!==!1)}isDisabled(){return this.getObserversCount()>0&&!this.isActive()}isStale(){return this.state.isInvalidated?!0:this.getObserversCount()>0?this.observers.some(t=>t.getCurrentResult().isStale):this.state.data===void 0}isStaleByTime(t=0){return this.state.isInvalidated||this.state.data===void 0||!rp(this.state.dataUpdatedAt,t)}onFocus(){var n;const t=this.observers.find(r=>r.shouldFetchOnWindowFocus());t==null||t.refetch({cancelRefetch:!1}),(n=w(this,Te))==null||n.continue()}onOnline(){var n;const t=this.observers.find(r=>r.shouldFetchOnReconnect());t==null||t.refetch({cancelRefetch:!1}),(n=w(this,Te))==null||n.continue()}addObserver(t){this.observers.includes(t)||(this.observers.push(t),this.clearGcTimeout(),w(this,it).notify({type:"observerAdded",query:this,observer:t}))}removeObserver(t){this.observers.includes(t)&&(this.observers=this.observers.filter(n=>n!==t),this.observers.length||(w(this,Te)&&(w(this,Gn)?w(this,Te).cancel({revert:!0}):w(this,Te).cancelRetry()),this.scheduleGc()),w(this,it).notify({type:"observerRemoved",query:this,observer:t}))}getObserversCount(){return this.observers.length}invalidate(){this.state.isInvalidated||W(this,gt,Lt).call(this,{type:"invalidate"})}fetch(t,n){var u,c,h;if(this.state.fetchStatus!=="idle"){if(this.state.data!==void 0&&(n!=null&&n.cancelRefetch))this.cancel({silent:!0});else if(w(this,Te))return w(this,Te).continueRetry(),w(this,Te).promise}if(t&&this.setOptions(t),!this.options.queryFn){const d=this.observers.find(f=>f.options.queryFn);d&&this.setOptions(d.options)}const r=new AbortController,s=d=>{Object.defineProperty(d,"signal",{enumerable:!0,get:()=>(D(this,Gn,!0),r.signal)})},a=()=>{const d=ip(this.options,n),f={queryKey:this.queryKey,meta:this.meta};return s(f),D(this,Gn,!1),this.options.persister?this.options.persister(d,f,this):d(f)},l={fetchOptions:n,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:a};s(l),(u=this.options.behavior)==null||u.onFetch(l,this),D(this,$r,this.state),(this.state.fetchStatus==="idle"||this.state.fetchMeta!==((c=l.fetchOptions)==null?void 0:c.meta))&&W(this,gt,Lt).call(this,{type:"fetch",meta:(h=l.fetchOptions)==null?void 0:h.meta});const o=d=>{var f,g,m,v;Bl(d)&&d.silent||W(this,gt,Lt).call(this,{type:"error",error:d}),Bl(d)||((g=(f=w(this,it).config).onError)==null||g.call(f,d,this),(v=(m=w(this,it).config).onSettled)==null||v.call(m,this.state.data,d,this)),this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1};return D(this,Te,up({initialPromise:n==null?void 0:n.initialPromise,fn:l.fetchFn,abort:r.abort.bind(r),onSuccess:d=>{var f,g,m,v;if(d===void 0){o(new Error(`${this.queryHash} data is undefined`));return}try{this.setData(d)}catch(j){o(j);return}(g=(f=w(this,it).config).onSuccess)==null||g.call(f,d,this),(v=(m=w(this,it).config).onSettled)==null||v.call(m,d,this.state.error,this),this.isFetchingOptimistic||this.scheduleGc(),this.isFetchingOptimistic=!1},onError:o,onFail:(d,f)=>{W(this,gt,Lt).call(this,{type:"failed",failureCount:d,error:f})},onPause:()=>{W(this,gt,Lt).call(this,{type:"pause"})},onContinue:()=>{W(this,gt,Lt).call(this,{type:"continue"})},retry:l.options.retry,retryDelay:l.options.retryDelay,networkMode:l.options.networkMode,canRun:()=>!0})),w(this,Te).start()}},Ur=new WeakMap,$r=new WeakMap,it=new WeakMap,Te=new WeakMap,ia=new WeakMap,Gn=new WeakMap,gt=new WeakSet,Lt=function(t){const n=r=>{switch(t.type){case"failed":return{...r,fetchFailureCount:t.failureCount,fetchFailureReason:t.error};case"pause":return{...r,fetchStatus:"paused"};case"continue":return{...r,fetchStatus:"fetching"};case"fetch":return{...r,...dp(r.data,this.options),fetchMeta:t.meta??null};case"success":return{...r,data:t.data,dataUpdateCount:r.dataUpdateCount+1,dataUpdatedAt:t.dataUpdatedAt??Date.now(),error:null,isInvalidated:!1,status:"success",...!t.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null}};case"error":const s=t.error;return Bl(s)&&s.revert&&w(this,$r)?{...w(this,$r),fetchStatus:"idle"}:{...r,error:s,errorUpdateCount:r.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:r.fetchFailureCount+1,fetchFailureReason:s,fetchStatus:"idle",status:"error"};case"invalidate":return{...r,isInvalidated:!0};case"setState":return{...r,...t.state}}};this.state=n(this.state),we.batch(()=>{this.observers.forEach(r=>{r.onQueryUpdate()}),w(this,it).notify({query:this,type:"updated",action:t})})},Pf);function dp(e,t){return{fetchFailureCount:0,fetchFailureReason:null,fetchStatus:lp(t.networkMode)?"fetching":"paused",...e===void 0&&{error:null,status:"pending"}}}function Yx(e){const t=typeof e.initialData=="function"?e.initialData():e.initialData,n=t!==void 0,r=n?typeof e.initialDataUpdatedAt=="function"?e.initialDataUpdatedAt():e.initialDataUpdatedAt:0;return{data:t,dataUpdateCount:0,dataUpdatedAt:n?r??Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:n?"success":"pending",fetchStatus:"idle"}}var Pt,Rf,Gx=(Rf=class extends us{constructor(t={}){super();A(this,Pt);this.config=t,D(this,Pt,new Map)}build(t,n,r){const s=n.queryKey,a=n.queryHash??pc(s,n);let l=this.get(a);return l||(l=new Kx({cache:this,queryKey:s,queryHash:a,options:t.defaultQueryOptions(n),state:r,defaultOptions:t.getQueryDefaults(s)}),this.add(l)),l}add(t){w(this,Pt).has(t.queryHash)||(w(this,Pt).set(t.queryHash,t),this.notify({type:"added",query:t}))}remove(t){const n=w(this,Pt).get(t.queryHash);n&&(t.destroy(),n===t&&w(this,Pt).delete(t.queryHash),this.notify({type:"removed",query:t}))}clear(){we.batch(()=>{this.getAll().forEach(t=>{this.remove(t)})})}get(t){return w(this,Pt).get(t)}getAll(){return[...w(this,Pt).values()]}find(t){const n={exact:!0,...t};return this.getAll().find(r=>Qd(n,r))}findAll(t={}){const n=this.getAll();return Object.keys(t).length>0?n.filter(r=>Qd(t,r)):n}notify(t){we.batch(()=>{this.listeners.forEach(n=>{n(t)})})}onFocus(){we.batch(()=>{this.getAll().forEach(t=>{t.onFocus()})})}onOnline(){we.batch(()=>{this.getAll().forEach(t=>{t.onOnline()})})}},Pt=new WeakMap,Rf),Rt,Me,Xn,Ot,en,Of,Xx=(Of=class extends cp{constructor(t){super();A(this,Ot);A(this,Rt);A(this,Me);A(this,Xn);this.mutationId=t.mutationId,D(this,Me,t.mutationCache),D(this,Rt,[]),this.state=t.state||fp(),this.setOptions(t.options),this.scheduleGc()}setOptions(t){this.options=t,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(t){w(this,Rt).includes(t)||(w(this,Rt).push(t),this.clearGcTimeout(),w(this,Me).notify({type:"observerAdded",mutation:this,observer:t}))}removeObserver(t){D(this,Rt,w(this,Rt).filter(n=>n!==t)),this.scheduleGc(),w(this,Me).notify({type:"observerRemoved",mutation:this,observer:t})}optionalRemove(){w(this,Rt).length||(this.state.status==="pending"?this.scheduleGc():w(this,Me).remove(this))}continue(){var t;return((t=w(this,Xn))==null?void 0:t.continue())??this.execute(this.state.variables)}async execute(t){var s,a,l,o,u,c,h,d,f,g,m,v,j,p,y,x,b,C,O,k;D(this,Xn,up({fn:()=>this.options.mutationFn?this.options.mutationFn(t):Promise.reject(new Error("No mutationFn found")),onFail:(E,F)=>{W(this,Ot,en).call(this,{type:"failed",failureCount:E,error:F})},onPause:()=>{W(this,Ot,en).call(this,{type:"pause"})},onContinue:()=>{W(this,Ot,en).call(this,{type:"continue"})},retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>w(this,Me).canRun(this)}));const n=this.state.status==="pending",r=!w(this,Xn).canStart();try{if(!n){W(this,Ot,en).call(this,{type:"pending",variables:t,isPaused:r}),await((a=(s=w(this,Me).config).onMutate)==null?void 0:a.call(s,t,this));const F=await((o=(l=this.options).onMutate)==null?void 0:o.call(l,t));F!==this.state.context&&W(this,Ot,en).call(this,{type:"pending",context:F,variables:t,isPaused:r})}const E=await w(this,Xn).start();return await((c=(u=w(this,Me).config).onSuccess)==null?void 0:c.call(u,E,t,this.state.context,this)),await((d=(h=this.options).onSuccess)==null?void 0:d.call(h,E,t,this.state.context)),await((g=(f=w(this,Me).config).onSettled)==null?void 0:g.call(f,E,null,this.state.variables,this.state.context,this)),await((v=(m=this.options).onSettled)==null?void 0:v.call(m,E,null,t,this.state.context)),W(this,Ot,en).call(this,{type:"success",data:E}),E}catch(E){try{throw await((p=(j=w(this,Me).config).onError)==null?void 0:p.call(j,E,t,this.state.context,this)),await((x=(y=this.options).onError)==null?void 0:x.call(y,E,t,this.state.context)),await((C=(b=w(this,Me).config).onSettled)==null?void 0:C.call(b,void 0,E,this.state.variables,this.state.context,this)),await((k=(O=this.options).onSettled)==null?void 0:k.call(O,void 0,E,t,this.state.context)),E}finally{W(this,Ot,en).call(this,{type:"error",error:E})}}finally{w(this,Me).runNext(this)}}},Rt=new WeakMap,Me=new WeakMap,Xn=new WeakMap,Ot=new WeakSet,en=function(t){const n=r=>{switch(t.type){case"failed":return{...r,failureCount:t.failureCount,failureReason:t.error};case"pause":return{...r,isPaused:!0};case"continue":return{...r,isPaused:!1};case"pending":return{...r,context:t.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:t.isPaused,status:"pending",variables:t.variables,submittedAt:Date.now()};case"success":return{...r,data:t.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...r,data:void 0,error:t.error,failureCount:r.failureCount+1,failureReason:t.error,isPaused:!1,status:"error"}}};this.state=n(this.state),we.batch(()=>{w(this,Rt).forEach(r=>{r.onMutationUpdate(t)}),w(this,Me).notify({mutation:this,type:"updated",action:t})})},Of);function fp(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}var Xe,la,Tf,Jx=(Tf=class extends us{constructor(t={}){super();A(this,Xe);A(this,la);this.config=t,D(this,Xe,new Map),D(this,la,Date.now())}build(t,n,r){const s=new Xx({mutationCache:this,mutationId:++Sa(this,la)._,options:t.defaultMutationOptions(n),state:r});return this.add(s),s}add(t){const n=qa(t),r=w(this,Xe).get(n)??[];r.push(t),w(this,Xe).set(n,r),this.notify({type:"added",mutation:t})}remove(t){var r;const n=qa(t);if(w(this,Xe).has(n)){const s=(r=w(this,Xe).get(n))==null?void 0:r.filter(a=>a!==t);s&&(s.length===0?w(this,Xe).delete(n):w(this,Xe).set(n,s))}this.notify({type:"removed",mutation:t})}canRun(t){var r;const n=(r=w(this,Xe).get(qa(t)))==null?void 0:r.find(s=>s.state.status==="pending");return!n||n===t}runNext(t){var r;const n=(r=w(this,Xe).get(qa(t)))==null?void 0:r.find(s=>s!==t&&s.state.isPaused);return(n==null?void 0:n.continue())??Promise.resolve()}clear(){we.batch(()=>{this.getAll().forEach(t=>{this.remove(t)})})}getAll(){return[...w(this,Xe).values()].flat()}find(t){const n={exact:!0,...t};return this.getAll().find(r=>Hd(n,r))}findAll(t={}){return this.getAll().filter(n=>Hd(t,n))}notify(t){we.batch(()=>{this.listeners.forEach(n=>{n(t)})})}resumePausedMutations(){const t=this.getAll().filter(n=>n.state.isPaused);return we.batch(()=>Promise.all(t.map(n=>n.continue().catch(lt))))}},Xe=new WeakMap,la=new WeakMap,Tf);function qa(e){var t;return((t=e.options.scope)==null?void 0:t.id)??String(e.mutationId)}function Zx(e){return{onFetch:(t,n)=>{const r=async()=>{var m,v,j,p,y;const s=t.options,a=(j=(v=(m=t.fetchOptions)==null?void 0:m.meta)==null?void 0:v.fetchMore)==null?void 0:j.direction,l=((p=t.state.data)==null?void 0:p.pages)||[],o=((y=t.state.data)==null?void 0:y.pageParams)||[],u={pages:[],pageParams:[]};let c=!1;const h=x=>{Object.defineProperty(x,"signal",{enumerable:!0,get:()=>(t.signal.aborted?c=!0:t.signal.addEventListener("abort",()=>{c=!0}),t.signal)})},d=ip(t.options,t.fetchOptions),f=async(x,b,C)=>{if(c)return Promise.reject();if(b==null&&x.pages.length)return Promise.resolve(x);const O={queryKey:t.queryKey,pageParam:b,direction:C?"backward":"forward",meta:t.options.meta};h(O);const k=await d(O),{maxPages:E}=t.options,F=C?Bx:qx;return{pages:F(x.pages,k,E),pageParams:F(x.pageParams,b,E)}};let g;if(a&&l.length){const x=a==="backward",b=x?ev:Yd,C={pages:l,pageParams:o},O=b(s,C);g=await f(C,O,x)}else{g=await f(u,o[0]??s.initialPageParam);const x=e??l.length;for(let b=1;b<x;b++){const C=Yd(s,g);if(C==null)break;g=await f(g,C)}}return g};t.options.persister?t.fetchFn=()=>{var s,a;return(a=(s=t.options).persister)==null?void 0:a.call(s,r,{queryKey:t.queryKey,meta:t.options.meta,signal:t.signal},n)}:t.fetchFn=r}}}function Yd(e,{pages:t,pageParams:n}){const r=t.length-1;return t.length>0?e.getNextPageParam(t[r],t,n[r],n):void 0}function ev(e,{pages:t,pageParams:n}){var r;return t.length>0?(r=e.getPreviousPageParam)==null?void 0:r.call(e,t[0],t,n[0],n):void 0}var fe,un,cn,qr,Br,dn,Wr,Qr,Df,tv=(Df=class{constructor(e={}){A(this,fe);A(this,un);A(this,cn);A(this,qr);A(this,Br);A(this,dn);A(this,Wr);A(this,Qr);D(this,fe,e.queryCache||new Gx),D(this,un,e.mutationCache||new Jx),D(this,cn,e.defaultOptions||{}),D(this,qr,new Map),D(this,Br,new Map),D(this,dn,0)}mount(){Sa(this,dn)._++,w(this,dn)===1&&(D(this,Wr,gc.subscribe(async e=>{e&&(await this.resumePausedMutations(),w(this,fe).onFocus())})),D(this,Qr,Ai.subscribe(async e=>{e&&(await this.resumePausedMutations(),w(this,fe).onOnline())})))}unmount(){var e,t;Sa(this,dn)._--,w(this,dn)===0&&((e=w(this,Wr))==null||e.call(this),D(this,Wr,void 0),(t=w(this,Qr))==null||t.call(this),D(this,Qr,void 0))}isFetching(e){return w(this,fe).findAll({...e,fetchStatus:"fetching"}).length}isMutating(e){return w(this,un).findAll({...e,status:"pending"}).length}getQueryData(e){var n;const t=this.defaultQueryOptions({queryKey:e});return(n=w(this,fe).get(t.queryHash))==null?void 0:n.state.data}ensureQueryData(e){const t=this.getQueryData(e.queryKey);if(t===void 0)return this.fetchQuery(e);{const n=this.defaultQueryOptions(e),r=w(this,fe).build(this,n);return e.revalidateIfStale&&r.isStaleByTime(Lr(n.staleTime,r))&&this.prefetchQuery(n),Promise.resolve(t)}}getQueriesData(e){return w(this,fe).findAll(e).map(({queryKey:t,state:n})=>{const r=n.data;return[t,r]})}setQueryData(e,t,n){const r=this.defaultQueryOptions({queryKey:e}),s=w(this,fe).get(r.queryHash),a=s==null?void 0:s.state.data,l=Ux(t,a);if(l!==void 0)return w(this,fe).build(this,r).setData(l,{...n,manual:!0})}setQueriesData(e,t,n){return we.batch(()=>w(this,fe).findAll(e).map(({queryKey:r})=>[r,this.setQueryData(r,t,n)]))}getQueryState(e){var n;const t=this.defaultQueryOptions({queryKey:e});return(n=w(this,fe).get(t.queryHash))==null?void 0:n.state}removeQueries(e){const t=w(this,fe);we.batch(()=>{t.findAll(e).forEach(n=>{t.remove(n)})})}resetQueries(e,t){const n=w(this,fe),r={type:"active",...e};return we.batch(()=>(n.findAll(e).forEach(s=>{s.reset()}),this.refetchQueries(r,t)))}cancelQueries(e={},t={}){const n={revert:!0,...t},r=we.batch(()=>w(this,fe).findAll(e).map(s=>s.cancel(n)));return Promise.all(r).then(lt).catch(lt)}invalidateQueries(e={},t={}){return we.batch(()=>{if(w(this,fe).findAll(e).forEach(r=>{r.invalidate()}),e.refetchType==="none")return Promise.resolve();const n={...e,type:e.refetchType??e.type??"active"};return this.refetchQueries(n,t)})}refetchQueries(e={},t){const n={...t,cancelRefetch:(t==null?void 0:t.cancelRefetch)??!0},r=we.batch(()=>w(this,fe).findAll(e).filter(s=>!s.isDisabled()).map(s=>{let a=s.fetch(void 0,n);return n.throwOnError||(a=a.catch(lt)),s.state.fetchStatus==="paused"?Promise.resolve():a}));return Promise.all(r).then(lt)}fetchQuery(e){const t=this.defaultQueryOptions(e);t.retry===void 0&&(t.retry=!1);const n=w(this,fe).build(this,t);return n.isStaleByTime(Lr(t.staleTime,n))?n.fetch(t):Promise.resolve(n.state.data)}prefetchQuery(e){return this.fetchQuery(e).then(lt).catch(lt)}fetchInfiniteQuery(e){return e.behavior=Zx(e.pages),this.fetchQuery(e)}prefetchInfiniteQuery(e){return this.fetchInfiniteQuery(e).then(lt).catch(lt)}resumePausedMutations(){return Ai.isOnline()?w(this,un).resumePausedMutations():Promise.resolve()}getQueryCache(){return w(this,fe)}getMutationCache(){return w(this,un)}getDefaultOptions(){return w(this,cn)}setDefaultOptions(e){D(this,cn,e)}setQueryDefaults(e,t){w(this,qr).set(ur(e),{queryKey:e,defaultOptions:t})}getQueryDefaults(e){const t=[...w(this,qr).values()];let n={};return t.forEach(r=>{ra(e,r.queryKey)&&(n={...n,...r.defaultOptions})}),n}setMutationDefaults(e,t){w(this,Br).set(ur(e),{mutationKey:e,defaultOptions:t})}getMutationDefaults(e){const t=[...w(this,Br).values()];let n={};return t.forEach(r=>{ra(e,r.mutationKey)&&(n={...n,...r.defaultOptions})}),n}defaultQueryOptions(e){if(e._defaulted)return e;const t={...w(this,cn).queries,...this.getQueryDefaults(e.queryKey),...e,_defaulted:!0};return t.queryHash||(t.queryHash=pc(t.queryKey,t)),t.refetchOnReconnect===void 0&&(t.refetchOnReconnect=t.networkMode!=="always"),t.throwOnError===void 0&&(t.throwOnError=!!t.suspense),!t.networkMode&&t.persister&&(t.networkMode="offlineFirst"),t.enabled!==!0&&t.queryFn===ap&&(t.enabled=!1),t}defaultMutationOptions(e){return e!=null&&e._defaulted?e:{...w(this,cn).mutations,...(e==null?void 0:e.mutationKey)&&this.getMutationDefaults(e.mutationKey),...e,_defaulted:!0}}clear(){w(this,fe).clear(),w(this,un).clear()}},fe=new WeakMap,un=new WeakMap,cn=new WeakMap,qr=new WeakMap,Br=new WeakMap,dn=new WeakMap,Wr=new WeakMap,Qr=new WeakMap,Df),$e,V,oa,Fe,Jn,Hr,Tt,ua,Vr,Kr,Zn,er,fn,Yr,J,Ps,Yo,Go,Xo,Jo,Zo,eu,tu,hp,_f,nv=(_f=class extends us{constructor(t,n){super();A(this,J);A(this,$e);A(this,V);A(this,oa);A(this,Fe);A(this,Jn);A(this,Hr);A(this,Tt);A(this,ua);A(this,Vr);A(this,Kr);A(this,Zn);A(this,er);A(this,fn);A(this,Yr,new Set);this.options=n,D(this,$e,t),D(this,Tt,null),this.bindMethods(),this.setOptions(n)}bindMethods(){this.refetch=this.refetch.bind(this)}onSubscribe(){this.listeners.size===1&&(w(this,V).addObserver(this),Gd(w(this,V),this.options)?W(this,J,Ps).call(this):this.updateResult(),W(this,J,Jo).call(this))}onUnsubscribe(){this.hasListeners()||this.destroy()}shouldFetchOnReconnect(){return nu(w(this,V),this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return nu(w(this,V),this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=new Set,W(this,J,Zo).call(this),W(this,J,eu).call(this),w(this,V).removeObserver(this)}setOptions(t,n){const r=this.options,s=w(this,V);if(this.options=w(this,$e).defaultQueryOptions(t),this.options.enabled!==void 0&&typeof this.options.enabled!="boolean"&&typeof this.options.enabled!="function"&&typeof vt(this.options.enabled,w(this,V))!="boolean")throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");W(this,J,tu).call(this),w(this,V).setOptions(this.options),r._defaulted&&!zi(this.options,r)&&w(this,$e).getQueryCache().notify({type:"observerOptionsUpdated",query:w(this,V),observer:this});const a=this.hasListeners();a&&Xd(w(this,V),s,this.options,r)&&W(this,J,Ps).call(this),this.updateResult(n),a&&(w(this,V)!==s||vt(this.options.enabled,w(this,V))!==vt(r.enabled,w(this,V))||Lr(this.options.staleTime,w(this,V))!==Lr(r.staleTime,w(this,V)))&&W(this,J,Yo).call(this);const l=W(this,J,Go).call(this);a&&(w(this,V)!==s||vt(this.options.enabled,w(this,V))!==vt(r.enabled,w(this,V))||l!==w(this,fn))&&W(this,J,Xo).call(this,l)}getOptimisticResult(t){const n=w(this,$e).getQueryCache().build(w(this,$e),t),r=this.createResult(n,t);return sv(this,r)&&(D(this,Fe,r),D(this,Hr,this.options),D(this,Jn,w(this,V).state)),r}getCurrentResult(){return w(this,Fe)}trackResult(t,n){const r={};return Object.keys(t).forEach(s=>{Object.defineProperty(r,s,{configurable:!1,enumerable:!0,get:()=>(this.trackProp(s),n==null||n(s),t[s])})}),r}trackProp(t){w(this,Yr).add(t)}getCurrentQuery(){return w(this,V)}refetch({...t}={}){return this.fetch({...t})}fetchOptimistic(t){const n=w(this,$e).defaultQueryOptions(t),r=w(this,$e).getQueryCache().build(w(this,$e),n);return r.isFetchingOptimistic=!0,r.fetch().then(()=>this.createResult(r,n))}fetch(t){return W(this,J,Ps).call(this,{...t,cancelRefetch:t.cancelRefetch??!0}).then(()=>(this.updateResult(),w(this,Fe)))}createResult(t,n){var k;const r=w(this,V),s=this.options,a=w(this,Fe),l=w(this,Jn),o=w(this,Hr),c=t!==r?t.state:w(this,oa),{state:h}=t;let d={...h},f=!1,g;if(n._optimisticResults){const E=this.hasListeners(),F=!E&&Gd(t,n),I=E&&Xd(t,r,n,s);(F||I)&&(d={...d,...dp(h.data,t.options)}),n._optimisticResults==="isRestoring"&&(d.fetchStatus="idle")}let{error:m,errorUpdatedAt:v,status:j}=d;if(n.select&&d.data!==void 0)if(a&&d.data===(l==null?void 0:l.data)&&n.select===w(this,ua))g=w(this,Vr);else try{D(this,ua,n.select),g=n.select(d.data),g=Ko(a==null?void 0:a.data,g,n),D(this,Vr,g),D(this,Tt,null)}catch(E){D(this,Tt,E)}else g=d.data;if(n.placeholderData!==void 0&&g===void 0&&j==="pending"){let E;if(a!=null&&a.isPlaceholderData&&n.placeholderData===(o==null?void 0:o.placeholderData))E=a.data;else if(E=typeof n.placeholderData=="function"?n.placeholderData((k=w(this,Kr))==null?void 0:k.state.data,w(this,Kr)):n.placeholderData,n.select&&E!==void 0)try{E=n.select(E),D(this,Tt,null)}catch(F){D(this,Tt,F)}E!==void 0&&(j="success",g=Ko(a==null?void 0:a.data,E,n),f=!0)}w(this,Tt)&&(m=w(this,Tt),g=w(this,Vr),v=Date.now(),j="error");const p=d.fetchStatus==="fetching",y=j==="pending",x=j==="error",b=y&&p,C=g!==void 0;return{status:j,fetchStatus:d.fetchStatus,isPending:y,isSuccess:j==="success",isError:x,isInitialLoading:b,isLoading:b,data:g,dataUpdatedAt:d.dataUpdatedAt,error:m,errorUpdatedAt:v,failureCount:d.fetchFailureCount,failureReason:d.fetchFailureReason,errorUpdateCount:d.errorUpdateCount,isFetched:d.dataUpdateCount>0||d.errorUpdateCount>0,isFetchedAfterMount:d.dataUpdateCount>c.dataUpdateCount||d.errorUpdateCount>c.errorUpdateCount,isFetching:p,isRefetching:p&&!y,isLoadingError:x&&!C,isPaused:d.fetchStatus==="paused",isPlaceholderData:f,isRefetchError:x&&C,isStale:yc(t,n),refetch:this.refetch}}updateResult(t){const n=w(this,Fe),r=this.createResult(w(this,V),this.options);if(D(this,Jn,w(this,V).state),D(this,Hr,this.options),w(this,Jn).data!==void 0&&D(this,Kr,w(this,V)),zi(r,n))return;D(this,Fe,r);const s={},a=()=>{if(!n)return!0;const{notifyOnChangeProps:l}=this.options,o=typeof l=="function"?l():l;if(o==="all"||!o&&!w(this,Yr).size)return!0;const u=new Set(o??w(this,Yr));return this.options.throwOnError&&u.add("error"),Object.keys(w(this,Fe)).some(c=>{const h=c;return w(this,Fe)[h]!==n[h]&&u.has(h)})};(t==null?void 0:t.listeners)!==!1&&a()&&(s.listeners=!0),W(this,J,hp).call(this,{...s,...t})}onQueryUpdate(){this.updateResult(),this.hasListeners()&&W(this,J,Jo).call(this)}},$e=new WeakMap,V=new WeakMap,oa=new WeakMap,Fe=new WeakMap,Jn=new WeakMap,Hr=new WeakMap,Tt=new WeakMap,ua=new WeakMap,Vr=new WeakMap,Kr=new WeakMap,Zn=new WeakMap,er=new WeakMap,fn=new WeakMap,Yr=new WeakMap,J=new WeakSet,Ps=function(t){W(this,J,tu).call(this);let n=w(this,V).fetch(this.options,t);return t!=null&&t.throwOnError||(n=n.catch(lt)),n},Yo=function(){W(this,J,Zo).call(this);const t=Lr(this.options.staleTime,w(this,V));if(rs||w(this,Fe).isStale||!Ho(t))return;const r=rp(w(this,Fe).dataUpdatedAt,t)+1;D(this,Zn,setTimeout(()=>{w(this,Fe).isStale||this.updateResult()},r))},Go=function(){return(typeof this.options.refetchInterval=="function"?this.options.refetchInterval(w(this,V)):this.options.refetchInterval)??!1},Xo=function(t){W(this,J,eu).call(this),D(this,fn,t),!(rs||vt(this.options.enabled,w(this,V))===!1||!Ho(w(this,fn))||w(this,fn)===0)&&D(this,er,setInterval(()=>{(this.options.refetchIntervalInBackground||gc.isFocused())&&W(this,J,Ps).call(this)},w(this,fn)))},Jo=function(){W(this,J,Yo).call(this),W(this,J,Xo).call(this,W(this,J,Go).call(this))},Zo=function(){w(this,Zn)&&(clearTimeout(w(this,Zn)),D(this,Zn,void 0))},eu=function(){w(this,er)&&(clearInterval(w(this,er)),D(this,er,void 0))},tu=function(){const t=w(this,$e).getQueryCache().build(w(this,$e),this.options);if(t===w(this,V))return;const n=w(this,V);D(this,V,t),D(this,oa,t.state),this.hasListeners()&&(n==null||n.removeObserver(this),t.addObserver(this))},hp=function(t){we.batch(()=>{t.listeners&&this.listeners.forEach(n=>{n(w(this,Fe))}),w(this,$e).getQueryCache().notify({query:w(this,V),type:"observerResultsUpdated"})})},_f);function rv(e,t){return vt(t.enabled,e)!==!1&&e.state.data===void 0&&!(e.state.status==="error"&&t.retryOnMount===!1)}function Gd(e,t){return rv(e,t)||e.state.data!==void 0&&nu(e,t,t.refetchOnMount)}function nu(e,t,n){if(vt(t.enabled,e)!==!1){const r=typeof n=="function"?n(e):n;return r==="always"||r!==!1&&yc(e,t)}return!1}function Xd(e,t,n,r){return(e!==t||vt(r.enabled,e)===!1)&&(!n.suspense||e.state.status!=="error")&&yc(e,n)}function yc(e,t){return vt(t.enabled,e)!==!1&&e.isStaleByTime(Lr(t.staleTime,e))}function sv(e,t){return!zi(e.getCurrentResult(),t)}var hn,mn,qe,It,Bt,si,ru,Mf,av=(Mf=class extends us{constructor(n,r){super();A(this,Bt);A(this,hn);A(this,mn);A(this,qe);A(this,It);D(this,hn,n),this.setOptions(r),this.bindMethods(),W(this,Bt,si).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(n){var s;const r=this.options;this.options=w(this,hn).defaultMutationOptions(n),zi(this.options,r)||w(this,hn).getMutationCache().notify({type:"observerOptionsUpdated",mutation:w(this,qe),observer:this}),r!=null&&r.mutationKey&&this.options.mutationKey&&ur(r.mutationKey)!==ur(this.options.mutationKey)?this.reset():((s=w(this,qe))==null?void 0:s.state.status)==="pending"&&w(this,qe).setOptions(this.options)}onUnsubscribe(){var n;this.hasListeners()||(n=w(this,qe))==null||n.removeObserver(this)}onMutationUpdate(n){W(this,Bt,si).call(this),W(this,Bt,ru).call(this,n)}getCurrentResult(){return w(this,mn)}reset(){var n;(n=w(this,qe))==null||n.removeObserver(this),D(this,qe,void 0),W(this,Bt,si).call(this),W(this,Bt,ru).call(this)}mutate(n,r){var s;return D(this,It,r),(s=w(this,qe))==null||s.removeObserver(this),D(this,qe,w(this,hn).getMutationCache().build(w(this,hn),this.options)),w(this,qe).addObserver(this),w(this,qe).execute(n)}},hn=new WeakMap,mn=new WeakMap,qe=new WeakMap,It=new WeakMap,Bt=new WeakSet,si=function(){var r;const n=((r=w(this,qe))==null?void 0:r.state)??fp();D(this,mn,{...n,isPending:n.status==="pending",isSuccess:n.status==="success",isError:n.status==="error",isIdle:n.status==="idle",mutate:this.mutate,reset:this.reset})},ru=function(n){we.batch(()=>{var r,s,a,l,o,u,c,h;if(w(this,It)&&this.hasListeners()){const d=w(this,mn).variables,f=w(this,mn).context;(n==null?void 0:n.type)==="success"?((s=(r=w(this,It)).onSuccess)==null||s.call(r,n.data,d,f),(l=(a=w(this,It)).onSettled)==null||l.call(a,n.data,null,d,f)):(n==null?void 0:n.type)==="error"&&((u=(o=w(this,It)).onError)==null||u.call(o,n.error,d,f),(h=(c=w(this,It)).onSettled)==null||h.call(c,void 0,n.error,d,f))}this.listeners.forEach(d=>{d(w(this,mn))})})},Mf),mp=N.createContext(void 0),Ne=e=>{const t=N.useContext(mp);if(!t)throw new Error("No QueryClient set, use QueryClientProvider to set one");return t},iv=({client:e,children:t})=>(N.useEffect(()=>(e.mount(),()=>{e.unmount()}),[e]),i.jsx(mp.Provider,{value:e,children:t})),pp=N.createContext(!1),lv=()=>N.useContext(pp);pp.Provider;function ov(){let e=!1;return{clearReset:()=>{e=!1},reset:()=>{e=!0},isReset:()=>e}}var uv=N.createContext(ov()),cv=()=>N.useContext(uv);function gp(e,t){return typeof e=="function"?e(...t):!!e}function dv(){}var fv=(e,t)=>{(e.suspense||e.throwOnError)&&(t.isReset()||(e.retryOnMount=!1))},hv=e=>{N.useEffect(()=>{e.clearReset()},[e])},mv=({result:e,errorResetBoundary:t,throwOnError:n,query:r})=>e.isError&&!t.isReset()&&!e.isFetching&&r&&gp(n,[e.error,r]),pv=e=>{e.suspense&&(typeof e.staleTime!="number"&&(e.staleTime=1e3),typeof e.gcTime=="number"&&(e.gcTime=Math.max(e.gcTime,1e3)))},gv=(e,t)=>(e==null?void 0:e.suspense)&&t.isPending,yv=(e,t,n)=>t.fetchOptimistic(e).catch(()=>{n.clearReset()});function xv(e,t,n){var c,h,d,f;const r=Ne(),s=lv(),a=cv(),l=r.defaultQueryOptions(e);(h=(c=r.getDefaultOptions().queries)==null?void 0:c._experimental_beforeQuery)==null||h.call(c,l),l._optimisticResults=s?"isRestoring":"optimistic",pv(l),fv(l,a),hv(a);const[o]=N.useState(()=>new t(r,l)),u=o.getOptimisticResult(l);if(N.useSyncExternalStore(N.useCallback(g=>{const m=s?()=>{}:o.subscribe(we.batchCalls(g));return o.updateResult(),m},[o,s]),()=>o.getCurrentResult(),()=>o.getCurrentResult()),N.useEffect(()=>{o.setOptions(l,{listeners:!1})},[l,o]),gv(l,u))throw yv(l,o,a);if(mv({result:u,errorResetBoundary:a,throwOnError:l.throwOnError,query:r.getQueryCache().get(l.queryHash)}))throw u.error;return(f=(d=r.getDefaultOptions().queries)==null?void 0:d._experimental_afterQuery)==null||f.call(d,l,u),l.notifyOnChangeProps?u:o.trackResult(u)}function G(e,t){return xv(e,nv)}function K(e,t){const n=Ne(),[r]=N.useState(()=>new av(n,e));N.useEffect(()=>{r.setOptions(e)},[r,e]);const s=N.useSyncExternalStore(N.useCallback(l=>r.subscribe(we.batchCalls(l)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),a=N.useCallback((l,o)=>{r.mutate(l,o).catch(dv)},[r]);if(s.error&&gp(r.options.throwOnError,[s.error]))throw s.error;return{...s,mutate:a,mutateAsync:s.mutate}}function yp(e,t){return function(){return e.apply(t,arguments)}}const{toString:vv}=Object.prototype,{getPrototypeOf:xc}=Object,ll=(e=>t=>{const n=vv.call(t);return e[n]||(e[n]=n.slice(8,-1).toLowerCase())})(Object.create(null)),St=e=>(e=e.toLowerCase(),t=>ll(t)===e),ol=e=>t=>typeof t===e,{isArray:cs}=Array,sa=ol("undefined");function wv(e){return e!==null&&!sa(e)&&e.constructor!==null&&!sa(e.constructor)&&tt(e.constructor.isBuffer)&&e.constructor.isBuffer(e)}const xp=St("ArrayBuffer");function jv(e){let t;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?t=ArrayBuffer.isView(e):t=e&&e.buffer&&xp(e.buffer),t}const Nv=ol("string"),tt=ol("function"),vp=ol("number"),ul=e=>e!==null&&typeof e=="object",bv=e=>e===!0||e===!1,ai=e=>{if(ll(e)!=="object")return!1;const t=xc(e);return(t===null||t===Object.prototype||Object.getPrototypeOf(t)===null)&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)},Sv=St("Date"),kv=St("File"),Cv=St("Blob"),Ev=St("FileList"),Pv=e=>ul(e)&&tt(e.pipe),Rv=e=>{let t;return e&&(typeof FormData=="function"&&e instanceof FormData||tt(e.append)&&((t=ll(e))==="formdata"||t==="object"&&tt(e.toString)&&e.toString()==="[object FormData]"))},Ov=St("URLSearchParams"),[Tv,Dv,_v,Mv]=["ReadableStream","Request","Response","Headers"].map(St),Fv=e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function ga(e,t,{allOwnKeys:n=!1}={}){if(e===null||typeof e>"u")return;let r,s;if(typeof e!="object"&&(e=[e]),cs(e))for(r=0,s=e.length;r<s;r++)t.call(null,e[r],r,e);else{const a=n?Object.getOwnPropertyNames(e):Object.keys(e),l=a.length;let o;for(r=0;r<l;r++)o=a[r],t.call(null,e[o],o,e)}}function wp(e,t){t=t.toLowerCase();const n=Object.keys(e);let r=n.length,s;for(;r-- >0;)if(s=n[r],t===s.toLowerCase())return s;return null}const Hn=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,jp=e=>!sa(e)&&e!==Hn;function su(){const{caseless:e}=jp(this)&&this||{},t={},n=(r,s)=>{const a=e&&wp(t,s)||s;ai(t[a])&&ai(r)?t[a]=su(t[a],r):ai(r)?t[a]=su({},r):cs(r)?t[a]=r.slice():t[a]=r};for(let r=0,s=arguments.length;r<s;r++)arguments[r]&&ga(arguments[r],n);return t}const Lv=(e,t,n,{allOwnKeys:r}={})=>(ga(t,(s,a)=>{n&&tt(s)?e[a]=yp(s,n):e[a]=s},{allOwnKeys:r}),e),zv=e=>(e.charCodeAt(0)===65279&&(e=e.slice(1)),e),Av=(e,t,n,r)=>{e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),n&&Object.assign(e.prototype,n)},Iv=(e,t,n,r)=>{let s,a,l;const o={};if(t=t||{},e==null)return t;do{for(s=Object.getOwnPropertyNames(e),a=s.length;a-- >0;)l=s[a],(!r||r(l,e,t))&&!o[l]&&(t[l]=e[l],o[l]=!0);e=n!==!1&&xc(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},Uv=(e,t,n)=>{e=String(e),(n===void 0||n>e.length)&&(n=e.length),n-=t.length;const r=e.indexOf(t,n);return r!==-1&&r===n},$v=e=>{if(!e)return null;if(cs(e))return e;let t=e.length;if(!vp(t))return null;const n=new Array(t);for(;t-- >0;)n[t]=e[t];return n},qv=(e=>t=>e&&t instanceof e)(typeof Uint8Array<"u"&&xc(Uint8Array)),Bv=(e,t)=>{const r=(e&&e[Symbol.iterator]).call(e);let s;for(;(s=r.next())&&!s.done;){const a=s.value;t.call(e,a[0],a[1])}},Wv=(e,t)=>{let n;const r=[];for(;(n=e.exec(t))!==null;)r.push(n);return r},Qv=St("HTMLFormElement"),Hv=e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(n,r,s){return r.toUpperCase()+s}),Jd=(({hasOwnProperty:e})=>(t,n)=>e.call(t,n))(Object.prototype),Vv=St("RegExp"),Np=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),r={};ga(n,(s,a)=>{let l;(l=t(s,a,e))!==!1&&(r[a]=l||s)}),Object.defineProperties(e,r)},Kv=e=>{Np(e,(t,n)=>{if(tt(e)&&["arguments","caller","callee"].indexOf(n)!==-1)return!1;const r=e[n];if(tt(r)){if(t.enumerable=!1,"writable"in t){t.writable=!1;return}t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")})}})},Yv=(e,t)=>{const n={},r=s=>{s.forEach(a=>{n[a]=!0})};return cs(e)?r(e):r(String(e).split(t)),n},Gv=()=>{},Xv=(e,t)=>e!=null&&Number.isFinite(e=+e)?e:t,Wl="abcdefghijklmnopqrstuvwxyz",Zd="0123456789",bp={DIGIT:Zd,ALPHA:Wl,ALPHA_DIGIT:Wl+Wl.toUpperCase()+Zd},Jv=(e=16,t=bp.ALPHA_DIGIT)=>{let n="";const{length:r}=t;for(;e--;)n+=t[Math.random()*r|0];return n};function Zv(e){return!!(e&&tt(e.append)&&e[Symbol.toStringTag]==="FormData"&&e[Symbol.iterator])}const e1=e=>{const t=new Array(10),n=(r,s)=>{if(ul(r)){if(t.indexOf(r)>=0)return;if(!("toJSON"in r)){t[s]=r;const a=cs(r)?[]:{};return ga(r,(l,o)=>{const u=n(l,s+1);!sa(u)&&(a[o]=u)}),t[s]=void 0,a}}return r};return n(e,0)},t1=St("AsyncFunction"),n1=e=>e&&(ul(e)||tt(e))&&tt(e.then)&&tt(e.catch),Sp=((e,t)=>e?setImmediate:t?((n,r)=>(Hn.addEventListener("message",({source:s,data:a})=>{s===Hn&&a===n&&r.length&&r.shift()()},!1),s=>{r.push(s),Hn.postMessage(n,"*")}))(`axios@${Math.random()}`,[]):n=>setTimeout(n))(typeof setImmediate=="function",tt(Hn.postMessage)),r1=typeof queueMicrotask<"u"?queueMicrotask.bind(Hn):typeof process<"u"&&process.nextTick||Sp,S={isArray:cs,isArrayBuffer:xp,isBuffer:wv,isFormData:Rv,isArrayBufferView:jv,isString:Nv,isNumber:vp,isBoolean:bv,isObject:ul,isPlainObject:ai,isReadableStream:Tv,isRequest:Dv,isResponse:_v,isHeaders:Mv,isUndefined:sa,isDate:Sv,isFile:kv,isBlob:Cv,isRegExp:Vv,isFunction:tt,isStream:Pv,isURLSearchParams:Ov,isTypedArray:qv,isFileList:Ev,forEach:ga,merge:su,extend:Lv,trim:Fv,stripBOM:zv,inherits:Av,toFlatObject:Iv,kindOf:ll,kindOfTest:St,endsWith:Uv,toArray:$v,forEachEntry:Bv,matchAll:Wv,isHTMLForm:Qv,hasOwnProperty:Jd,hasOwnProp:Jd,reduceDescriptors:Np,freezeMethods:Kv,toObjectSet:Yv,toCamelCase:Hv,noop:Gv,toFiniteNumber:Xv,findKey:wp,global:Hn,isContextDefined:jp,ALPHABET:bp,generateString:Jv,isSpecCompliantForm:Zv,toJSONObject:e1,isAsyncFn:t1,isThenable:n1,setImmediate:Sp,asap:r1};function $(e,t,n,r,s){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),r&&(this.request=r),s&&(this.response=s,this.status=s.status?s.status:null)}S.inherits($,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:S.toJSONObject(this.config),code:this.code,status:this.status}}});const kp=$.prototype,Cp={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(e=>{Cp[e]={value:e}});Object.defineProperties($,Cp);Object.defineProperty(kp,"isAxiosError",{value:!0});$.from=(e,t,n,r,s,a)=>{const l=Object.create(kp);return S.toFlatObject(e,l,function(u){return u!==Error.prototype},o=>o!=="isAxiosError"),$.call(l,e.message,t,n,r,s),l.cause=e,l.name=e.name,a&&Object.assign(l,a),l};const s1=null;function au(e){return S.isPlainObject(e)||S.isArray(e)}function Ep(e){return S.endsWith(e,"[]")?e.slice(0,-2):e}function ef(e,t,n){return e?e.concat(t).map(function(s,a){return s=Ep(s),!n&&a?"["+s+"]":s}).join(n?".":""):t}function a1(e){return S.isArray(e)&&!e.some(au)}const i1=S.toFlatObject(S,{},null,function(t){return/^is[A-Z]/.test(t)});function cl(e,t,n){if(!S.isObject(e))throw new TypeError("target must be an object");t=t||new FormData,n=S.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,function(v,j){return!S.isUndefined(j[v])});const r=n.metaTokens,s=n.visitor||h,a=n.dots,l=n.indexes,u=(n.Blob||typeof Blob<"u"&&Blob)&&S.isSpecCompliantForm(t);if(!S.isFunction(s))throw new TypeError("visitor must be a function");function c(m){if(m===null)return"";if(S.isDate(m))return m.toISOString();if(!u&&S.isBlob(m))throw new $("Blob is not supported. Use a Buffer instead.");return S.isArrayBuffer(m)||S.isTypedArray(m)?u&&typeof Blob=="function"?new Blob([m]):Buffer.from(m):m}function h(m,v,j){let p=m;if(m&&!j&&typeof m=="object"){if(S.endsWith(v,"{}"))v=r?v:v.slice(0,-2),m=JSON.stringify(m);else if(S.isArray(m)&&a1(m)||(S.isFileList(m)||S.endsWith(v,"[]"))&&(p=S.toArray(m)))return v=Ep(v),p.forEach(function(x,b){!(S.isUndefined(x)||x===null)&&t.append(l===!0?ef([v],b,a):l===null?v:v+"[]",c(x))}),!1}return au(m)?!0:(t.append(ef(j,v,a),c(m)),!1)}const d=[],f=Object.assign(i1,{defaultVisitor:h,convertValue:c,isVisitable:au});function g(m,v){if(!S.isUndefined(m)){if(d.indexOf(m)!==-1)throw Error("Circular reference detected in "+v.join("."));d.push(m),S.forEach(m,function(p,y){(!(S.isUndefined(p)||p===null)&&s.call(t,p,S.isString(y)?y.trim():y,v,f))===!0&&g(p,v?v.concat(y):[y])}),d.pop()}}if(!S.isObject(e))throw new TypeError("data must be an object");return g(e),t}function tf(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,function(r){return t[r]})}function vc(e,t){this._pairs=[],e&&cl(e,this,t)}const Pp=vc.prototype;Pp.append=function(t,n){this._pairs.push([t,n])};Pp.toString=function(t){const n=t?function(r){return t.call(this,r,tf)}:tf;return this._pairs.map(function(s){return n(s[0])+"="+n(s[1])},"").join("&")};function l1(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Rp(e,t,n){if(!t)return e;const r=n&&n.encode||l1,s=n&&n.serialize;let a;if(s?a=s(t,n):a=S.isURLSearchParams(t)?t.toString():new vc(t,n).toString(r),a){const l=e.indexOf("#");l!==-1&&(e=e.slice(0,l)),e+=(e.indexOf("?")===-1?"?":"&")+a}return e}class nf{constructor(){this.handlers=[]}use(t,n,r){return this.handlers.push({fulfilled:t,rejected:n,synchronous:r?r.synchronous:!1,runWhen:r?r.runWhen:null}),this.handlers.length-1}eject(t){this.handlers[t]&&(this.handlers[t]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(t){S.forEach(this.handlers,function(r){r!==null&&t(r)})}}const Op={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},o1=typeof URLSearchParams<"u"?URLSearchParams:vc,u1=typeof FormData<"u"?FormData:null,c1=typeof Blob<"u"?Blob:null,d1={isBrowser:!0,classes:{URLSearchParams:o1,FormData:u1,Blob:c1},protocols:["http","https","file","blob","url","data"]},wc=typeof window<"u"&&typeof document<"u",iu=typeof navigator=="object"&&navigator||void 0,f1=wc&&(!iu||["ReactNative","NativeScript","NS"].indexOf(iu.product)<0),h1=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",m1=wc&&window.location.href||"http://localhost",p1=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:wc,hasStandardBrowserEnv:f1,hasStandardBrowserWebWorkerEnv:h1,navigator:iu,origin:m1},Symbol.toStringTag,{value:"Module"})),Ke={...p1,...d1};function g1(e,t){return cl(e,new Ke.classes.URLSearchParams,Object.assign({visitor:function(n,r,s,a){return Ke.isNode&&S.isBuffer(n)?(this.append(r,n.toString("base64")),!1):a.defaultVisitor.apply(this,arguments)}},t))}function y1(e){return S.matchAll(/\w+|\[(\w*)]/g,e).map(t=>t[0]==="[]"?"":t[1]||t[0])}function x1(e){const t={},n=Object.keys(e);let r;const s=n.length;let a;for(r=0;r<s;r++)a=n[r],t[a]=e[a];return t}function Tp(e){function t(n,r,s,a){let l=n[a++];if(l==="__proto__")return!0;const o=Number.isFinite(+l),u=a>=n.length;return l=!l&&S.isArray(s)?s.length:l,u?(S.hasOwnProp(s,l)?s[l]=[s[l],r]:s[l]=r,!o):((!s[l]||!S.isObject(s[l]))&&(s[l]=[]),t(n,r,s[l],a)&&S.isArray(s[l])&&(s[l]=x1(s[l])),!o)}if(S.isFormData(e)&&S.isFunction(e.entries)){const n={};return S.forEachEntry(e,(r,s)=>{t(y1(r),s,n,0)}),n}return null}function v1(e,t,n){if(S.isString(e))try{return(t||JSON.parse)(e),S.trim(e)}catch(r){if(r.name!=="SyntaxError")throw r}return(n||JSON.stringify)(e)}const ya={transitional:Op,adapter:["xhr","http","fetch"],transformRequest:[function(t,n){const r=n.getContentType()||"",s=r.indexOf("application/json")>-1,a=S.isObject(t);if(a&&S.isHTMLForm(t)&&(t=new FormData(t)),S.isFormData(t))return s?JSON.stringify(Tp(t)):t;if(S.isArrayBuffer(t)||S.isBuffer(t)||S.isStream(t)||S.isFile(t)||S.isBlob(t)||S.isReadableStream(t))return t;if(S.isArrayBufferView(t))return t.buffer;if(S.isURLSearchParams(t))return n.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),t.toString();let o;if(a){if(r.indexOf("application/x-www-form-urlencoded")>-1)return g1(t,this.formSerializer).toString();if((o=S.isFileList(t))||r.indexOf("multipart/form-data")>-1){const u=this.env&&this.env.FormData;return cl(o?{"files[]":t}:t,u&&new u,this.formSerializer)}}return a||s?(n.setContentType("application/json",!1),v1(t)):t}],transformResponse:[function(t){const n=this.transitional||ya.transitional,r=n&&n.forcedJSONParsing,s=this.responseType==="json";if(S.isResponse(t)||S.isReadableStream(t))return t;if(t&&S.isString(t)&&(r&&!this.responseType||s)){const l=!(n&&n.silentJSONParsing)&&s;try{return JSON.parse(t)}catch(o){if(l)throw o.name==="SyntaxError"?$.from(o,$.ERR_BAD_RESPONSE,this,null,this.response):o}}return t}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Ke.classes.FormData,Blob:Ke.classes.Blob},validateStatus:function(t){return t>=200&&t<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};S.forEach(["delete","get","head","post","put","patch"],e=>{ya.headers[e]={}});const w1=S.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),j1=e=>{const t={};let n,r,s;return e&&e.split(`
`).forEach(function(l){s=l.indexOf(":"),n=l.substring(0,s).trim().toLowerCase(),r=l.substring(s+1).trim(),!(!n||t[n]&&w1[n])&&(n==="set-cookie"?t[n]?t[n].push(r):t[n]=[r]:t[n]=t[n]?t[n]+", "+r:r)}),t},rf=Symbol("internals");function ws(e){return e&&String(e).trim().toLowerCase()}function ii(e){return e===!1||e==null?e:S.isArray(e)?e.map(ii):String(e)}function N1(e){const t=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let r;for(;r=n.exec(e);)t[r[1]]=r[2];return t}const b1=e=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());function Ql(e,t,n,r,s){if(S.isFunction(r))return r.call(this,t,n);if(s&&(t=n),!!S.isString(t)){if(S.isString(r))return t.indexOf(r)!==-1;if(S.isRegExp(r))return r.test(t)}}function S1(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(t,n,r)=>n.toUpperCase()+r)}function k1(e,t){const n=S.toCamelCase(" "+t);["get","set","has"].forEach(r=>{Object.defineProperty(e,r+n,{value:function(s,a,l){return this[r].call(this,t,s,a,l)},configurable:!0})})}class Ye{constructor(t){t&&this.set(t)}set(t,n,r){const s=this;function a(o,u,c){const h=ws(u);if(!h)throw new Error("header name must be a non-empty string");const d=S.findKey(s,h);(!d||s[d]===void 0||c===!0||c===void 0&&s[d]!==!1)&&(s[d||u]=ii(o))}const l=(o,u)=>S.forEach(o,(c,h)=>a(c,h,u));if(S.isPlainObject(t)||t instanceof this.constructor)l(t,n);else if(S.isString(t)&&(t=t.trim())&&!b1(t))l(j1(t),n);else if(S.isHeaders(t))for(const[o,u]of t.entries())a(u,o,r);else t!=null&&a(n,t,r);return this}get(t,n){if(t=ws(t),t){const r=S.findKey(this,t);if(r){const s=this[r];if(!n)return s;if(n===!0)return N1(s);if(S.isFunction(n))return n.call(this,s,r);if(S.isRegExp(n))return n.exec(s);throw new TypeError("parser must be boolean|regexp|function")}}}has(t,n){if(t=ws(t),t){const r=S.findKey(this,t);return!!(r&&this[r]!==void 0&&(!n||Ql(this,this[r],r,n)))}return!1}delete(t,n){const r=this;let s=!1;function a(l){if(l=ws(l),l){const o=S.findKey(r,l);o&&(!n||Ql(r,r[o],o,n))&&(delete r[o],s=!0)}}return S.isArray(t)?t.forEach(a):a(t),s}clear(t){const n=Object.keys(this);let r=n.length,s=!1;for(;r--;){const a=n[r];(!t||Ql(this,this[a],a,t,!0))&&(delete this[a],s=!0)}return s}normalize(t){const n=this,r={};return S.forEach(this,(s,a)=>{const l=S.findKey(r,a);if(l){n[l]=ii(s),delete n[a];return}const o=t?S1(a):String(a).trim();o!==a&&delete n[a],n[o]=ii(s),r[o]=!0}),this}concat(...t){return this.constructor.concat(this,...t)}toJSON(t){const n=Object.create(null);return S.forEach(this,(r,s)=>{r!=null&&r!==!1&&(n[s]=t&&S.isArray(r)?r.join(", "):r)}),n}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([t,n])=>t+": "+n).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(t){return t instanceof this?t:new this(t)}static concat(t,...n){const r=new this(t);return n.forEach(s=>r.set(s)),r}static accessor(t){const r=(this[rf]=this[rf]={accessors:{}}).accessors,s=this.prototype;function a(l){const o=ws(l);r[o]||(k1(s,l),r[o]=!0)}return S.isArray(t)?t.forEach(a):a(t),this}}Ye.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);S.reduceDescriptors(Ye.prototype,({value:e},t)=>{let n=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(r){this[n]=r}}});S.freezeMethods(Ye);function Hl(e,t){const n=this||ya,r=t||n,s=Ye.from(r.headers);let a=r.data;return S.forEach(e,function(o){a=o.call(n,a,s.normalize(),t?t.status:void 0)}),s.normalize(),a}function Dp(e){return!!(e&&e.__CANCEL__)}function ds(e,t,n){$.call(this,e??"canceled",$.ERR_CANCELED,t,n),this.name="CanceledError"}S.inherits(ds,$,{__CANCEL__:!0});function _p(e,t,n){const r=n.config.validateStatus;!n.status||!r||r(n.status)?e(n):t(new $("Request failed with status code "+n.status,[$.ERR_BAD_REQUEST,$.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n))}function C1(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}function E1(e,t){e=e||10;const n=new Array(e),r=new Array(e);let s=0,a=0,l;return t=t!==void 0?t:1e3,function(u){const c=Date.now(),h=r[a];l||(l=c),n[s]=u,r[s]=c;let d=a,f=0;for(;d!==s;)f+=n[d++],d=d%e;if(s=(s+1)%e,s===a&&(a=(a+1)%e),c-l<t)return;const g=h&&c-h;return g?Math.round(f*1e3/g):void 0}}function P1(e,t){let n=0,r=1e3/t,s,a;const l=(c,h=Date.now())=>{n=h,s=null,a&&(clearTimeout(a),a=null),e.apply(null,c)};return[(...c)=>{const h=Date.now(),d=h-n;d>=r?l(c,h):(s=c,a||(a=setTimeout(()=>{a=null,l(s)},r-d)))},()=>s&&l(s)]}const Ii=(e,t,n=3)=>{let r=0;const s=E1(50,250);return P1(a=>{const l=a.loaded,o=a.lengthComputable?a.total:void 0,u=l-r,c=s(u),h=l<=o;r=l;const d={loaded:l,total:o,progress:o?l/o:void 0,bytes:u,rate:c||void 0,estimated:c&&o&&h?(o-l)/c:void 0,event:a,lengthComputable:o!=null,[t?"download":"upload"]:!0};e(d)},n)},sf=(e,t)=>{const n=e!=null;return[r=>t[0]({lengthComputable:n,total:e,loaded:r}),t[1]]},af=e=>(...t)=>S.asap(()=>e(...t)),R1=Ke.hasStandardBrowserEnv?function(){const t=Ke.navigator&&/(msie|trident)/i.test(Ke.navigator.userAgent),n=document.createElement("a");let r;function s(a){let l=a;return t&&(n.setAttribute("href",l),l=n.href),n.setAttribute("href",l),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:n.pathname.charAt(0)==="/"?n.pathname:"/"+n.pathname}}return r=s(window.location.href),function(l){const o=S.isString(l)?s(l):l;return o.protocol===r.protocol&&o.host===r.host}}():function(){return function(){return!0}}(),O1=Ke.hasStandardBrowserEnv?{write(e,t,n,r,s,a){const l=[e+"="+encodeURIComponent(t)];S.isNumber(n)&&l.push("expires="+new Date(n).toGMTString()),S.isString(r)&&l.push("path="+r),S.isString(s)&&l.push("domain="+s),a===!0&&l.push("secure"),document.cookie=l.join("; ")},read(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function T1(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}function D1(e,t){return t?e.replace(/\/?\/$/,"")+"/"+t.replace(/^\/+/,""):e}function Mp(e,t){return e&&!T1(t)?D1(e,t):t}const lf=e=>e instanceof Ye?{...e}:e;function cr(e,t){t=t||{};const n={};function r(c,h,d){return S.isPlainObject(c)&&S.isPlainObject(h)?S.merge.call({caseless:d},c,h):S.isPlainObject(h)?S.merge({},h):S.isArray(h)?h.slice():h}function s(c,h,d){if(S.isUndefined(h)){if(!S.isUndefined(c))return r(void 0,c,d)}else return r(c,h,d)}function a(c,h){if(!S.isUndefined(h))return r(void 0,h)}function l(c,h){if(S.isUndefined(h)){if(!S.isUndefined(c))return r(void 0,c)}else return r(void 0,h)}function o(c,h,d){if(d in t)return r(c,h);if(d in e)return r(void 0,c)}const u={url:a,method:a,data:a,baseURL:l,transformRequest:l,transformResponse:l,paramsSerializer:l,timeout:l,timeoutMessage:l,withCredentials:l,withXSRFToken:l,adapter:l,responseType:l,xsrfCookieName:l,xsrfHeaderName:l,onUploadProgress:l,onDownloadProgress:l,decompress:l,maxContentLength:l,maxBodyLength:l,beforeRedirect:l,transport:l,httpAgent:l,httpsAgent:l,cancelToken:l,socketPath:l,responseEncoding:l,validateStatus:o,headers:(c,h)=>s(lf(c),lf(h),!0)};return S.forEach(Object.keys(Object.assign({},e,t)),function(h){const d=u[h]||s,f=d(e[h],t[h],h);S.isUndefined(f)&&d!==o||(n[h]=f)}),n}const Fp=e=>{const t=cr({},e);let{data:n,withXSRFToken:r,xsrfHeaderName:s,xsrfCookieName:a,headers:l,auth:o}=t;t.headers=l=Ye.from(l),t.url=Rp(Mp(t.baseURL,t.url),e.params,e.paramsSerializer),o&&l.set("Authorization","Basic "+btoa((o.username||"")+":"+(o.password?unescape(encodeURIComponent(o.password)):"")));let u;if(S.isFormData(n)){if(Ke.hasStandardBrowserEnv||Ke.hasStandardBrowserWebWorkerEnv)l.setContentType(void 0);else if((u=l.getContentType())!==!1){const[c,...h]=u?u.split(";").map(d=>d.trim()).filter(Boolean):[];l.setContentType([c||"multipart/form-data",...h].join("; "))}}if(Ke.hasStandardBrowserEnv&&(r&&S.isFunction(r)&&(r=r(t)),r||r!==!1&&R1(t.url))){const c=s&&a&&O1.read(a);c&&l.set(s,c)}return t},_1=typeof XMLHttpRequest<"u",M1=_1&&function(e){return new Promise(function(n,r){const s=Fp(e);let a=s.data;const l=Ye.from(s.headers).normalize();let{responseType:o,onUploadProgress:u,onDownloadProgress:c}=s,h,d,f,g,m;function v(){g&&g(),m&&m(),s.cancelToken&&s.cancelToken.unsubscribe(h),s.signal&&s.signal.removeEventListener("abort",h)}let j=new XMLHttpRequest;j.open(s.method.toUpperCase(),s.url,!0),j.timeout=s.timeout;function p(){if(!j)return;const x=Ye.from("getAllResponseHeaders"in j&&j.getAllResponseHeaders()),C={data:!o||o==="text"||o==="json"?j.responseText:j.response,status:j.status,statusText:j.statusText,headers:x,config:e,request:j};_p(function(k){n(k),v()},function(k){r(k),v()},C),j=null}"onloadend"in j?j.onloadend=p:j.onreadystatechange=function(){!j||j.readyState!==4||j.status===0&&!(j.responseURL&&j.responseURL.indexOf("file:")===0)||setTimeout(p)},j.onabort=function(){j&&(r(new $("Request aborted",$.ECONNABORTED,e,j)),j=null)},j.onerror=function(){r(new $("Network Error",$.ERR_NETWORK,e,j)),j=null},j.ontimeout=function(){let b=s.timeout?"timeout of "+s.timeout+"ms exceeded":"timeout exceeded";const C=s.transitional||Op;s.timeoutErrorMessage&&(b=s.timeoutErrorMessage),r(new $(b,C.clarifyTimeoutError?$.ETIMEDOUT:$.ECONNABORTED,e,j)),j=null},a===void 0&&l.setContentType(null),"setRequestHeader"in j&&S.forEach(l.toJSON(),function(b,C){j.setRequestHeader(C,b)}),S.isUndefined(s.withCredentials)||(j.withCredentials=!!s.withCredentials),o&&o!=="json"&&(j.responseType=s.responseType),c&&([f,m]=Ii(c,!0),j.addEventListener("progress",f)),u&&j.upload&&([d,g]=Ii(u),j.upload.addEventListener("progress",d),j.upload.addEventListener("loadend",g)),(s.cancelToken||s.signal)&&(h=x=>{j&&(r(!x||x.type?new ds(null,e,j):x),j.abort(),j=null)},s.cancelToken&&s.cancelToken.subscribe(h),s.signal&&(s.signal.aborted?h():s.signal.addEventListener("abort",h)));const y=C1(s.url);if(y&&Ke.protocols.indexOf(y)===-1){r(new $("Unsupported protocol "+y+":",$.ERR_BAD_REQUEST,e));return}j.send(a||null)})},F1=(e,t)=>{const{length:n}=e=e?e.filter(Boolean):[];if(t||n){let r=new AbortController,s;const a=function(c){if(!s){s=!0,o();const h=c instanceof Error?c:this.reason;r.abort(h instanceof $?h:new ds(h instanceof Error?h.message:h))}};let l=t&&setTimeout(()=>{l=null,a(new $(`timeout ${t} of ms exceeded`,$.ETIMEDOUT))},t);const o=()=>{e&&(l&&clearTimeout(l),l=null,e.forEach(c=>{c.unsubscribe?c.unsubscribe(a):c.removeEventListener("abort",a)}),e=null)};e.forEach(c=>c.addEventListener("abort",a));const{signal:u}=r;return u.unsubscribe=()=>S.asap(o),u}},L1=function*(e,t){let n=e.byteLength;if(!t||n<t){yield e;return}let r=0,s;for(;r<n;)s=r+t,yield e.slice(r,s),r=s},z1=async function*(e,t){for await(const n of A1(e))yield*L1(n,t)},A1=async function*(e){if(e[Symbol.asyncIterator]){yield*e;return}const t=e.getReader();try{for(;;){const{done:n,value:r}=await t.read();if(n)break;yield r}}finally{await t.cancel()}},of=(e,t,n,r)=>{const s=z1(e,t);let a=0,l,o=u=>{l||(l=!0,r&&r(u))};return new ReadableStream({async pull(u){try{const{done:c,value:h}=await s.next();if(c){o(),u.close();return}let d=h.byteLength;if(n){let f=a+=d;n(f)}u.enqueue(new Uint8Array(h))}catch(c){throw o(c),c}},cancel(u){return o(u),s.return()}},{highWaterMark:2})},dl=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",Lp=dl&&typeof ReadableStream=="function",I1=dl&&(typeof TextEncoder=="function"?(e=>t=>e.encode(t))(new TextEncoder):async e=>new Uint8Array(await new Response(e).arrayBuffer())),zp=(e,...t)=>{try{return!!e(...t)}catch{return!1}},U1=Lp&&zp(()=>{let e=!1;const t=new Request(Ke.origin,{body:new ReadableStream,method:"POST",get duplex(){return e=!0,"half"}}).headers.has("Content-Type");return e&&!t}),uf=64*1024,lu=Lp&&zp(()=>S.isReadableStream(new Response("").body)),Ui={stream:lu&&(e=>e.body)};dl&&(e=>{["text","arrayBuffer","blob","formData","stream"].forEach(t=>{!Ui[t]&&(Ui[t]=S.isFunction(e[t])?n=>n[t]():(n,r)=>{throw new $(`Response type '${t}' is not supported`,$.ERR_NOT_SUPPORT,r)})})})(new Response);const $1=async e=>{if(e==null)return 0;if(S.isBlob(e))return e.size;if(S.isSpecCompliantForm(e))return(await new Request(Ke.origin,{method:"POST",body:e}).arrayBuffer()).byteLength;if(S.isArrayBufferView(e)||S.isArrayBuffer(e))return e.byteLength;if(S.isURLSearchParams(e)&&(e=e+""),S.isString(e))return(await I1(e)).byteLength},q1=async(e,t)=>{const n=S.toFiniteNumber(e.getContentLength());return n??$1(t)},B1=dl&&(async e=>{let{url:t,method:n,data:r,signal:s,cancelToken:a,timeout:l,onDownloadProgress:o,onUploadProgress:u,responseType:c,headers:h,withCredentials:d="same-origin",fetchOptions:f}=Fp(e);c=c?(c+"").toLowerCase():"text";let g=F1([s,a&&a.toAbortSignal()],l),m;const v=g&&g.unsubscribe&&(()=>{g.unsubscribe()});let j;try{if(u&&U1&&n!=="get"&&n!=="head"&&(j=await q1(h,r))!==0){let C=new Request(t,{method:"POST",body:r,duplex:"half"}),O;if(S.isFormData(r)&&(O=C.headers.get("content-type"))&&h.setContentType(O),C.body){const[k,E]=sf(j,Ii(af(u)));r=of(C.body,uf,k,E)}}S.isString(d)||(d=d?"include":"omit");const p="credentials"in Request.prototype;m=new Request(t,{...f,signal:g,method:n.toUpperCase(),headers:h.normalize().toJSON(),body:r,duplex:"half",credentials:p?d:void 0});let y=await fetch(m);const x=lu&&(c==="stream"||c==="response");if(lu&&(o||x&&v)){const C={};["status","statusText","headers"].forEach(F=>{C[F]=y[F]});const O=S.toFiniteNumber(y.headers.get("content-length")),[k,E]=o&&sf(O,Ii(af(o),!0))||[];y=new Response(of(y.body,uf,k,()=>{E&&E(),v&&v()}),C)}c=c||"text";let b=await Ui[S.findKey(Ui,c)||"text"](y,e);return!x&&v&&v(),await new Promise((C,O)=>{_p(C,O,{data:b,headers:Ye.from(y.headers),status:y.status,statusText:y.statusText,config:e,request:m})})}catch(p){throw v&&v(),p&&p.name==="TypeError"&&/fetch/i.test(p.message)?Object.assign(new $("Network Error",$.ERR_NETWORK,e,m),{cause:p.cause||p}):$.from(p,p&&p.code,e,m)}}),ou={http:s1,xhr:M1,fetch:B1};S.forEach(ou,(e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch{}Object.defineProperty(e,"adapterName",{value:t})}});const cf=e=>`- ${e}`,W1=e=>S.isFunction(e)||e===null||e===!1,Ap={getAdapter:e=>{e=S.isArray(e)?e:[e];const{length:t}=e;let n,r;const s={};for(let a=0;a<t;a++){n=e[a];let l;if(r=n,!W1(n)&&(r=ou[(l=String(n)).toLowerCase()],r===void 0))throw new $(`Unknown adapter '${l}'`);if(r)break;s[l||"#"+a]=r}if(!r){const a=Object.entries(s).map(([o,u])=>`adapter ${o} `+(u===!1?"is not supported by the environment":"is not available in the build"));let l=t?a.length>1?`since :
`+a.map(cf).join(`
`):" "+cf(a[0]):"as no adapter specified";throw new $("There is no suitable adapter to dispatch the request "+l,"ERR_NOT_SUPPORT")}return r},adapters:ou};function Vl(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new ds(null,e)}function df(e){return Vl(e),e.headers=Ye.from(e.headers),e.data=Hl.call(e,e.transformRequest),["post","put","patch"].indexOf(e.method)!==-1&&e.headers.setContentType("application/x-www-form-urlencoded",!1),Ap.getAdapter(e.adapter||ya.adapter)(e).then(function(r){return Vl(e),r.data=Hl.call(e,e.transformResponse,r),r.headers=Ye.from(r.headers),r},function(r){return Dp(r)||(Vl(e),r&&r.response&&(r.response.data=Hl.call(e,e.transformResponse,r.response),r.response.headers=Ye.from(r.response.headers))),Promise.reject(r)})}const Ip="1.7.7",jc={};["object","boolean","number","function","string","symbol"].forEach((e,t)=>{jc[e]=function(r){return typeof r===e||"a"+(t<1?"n ":" ")+e}});const ff={};jc.transitional=function(t,n,r){function s(a,l){return"[Axios v"+Ip+"] Transitional option '"+a+"'"+l+(r?". "+r:"")}return(a,l,o)=>{if(t===!1)throw new $(s(l," has been removed"+(n?" in "+n:"")),$.ERR_DEPRECATED);return n&&!ff[l]&&(ff[l]=!0,console.warn(s(l," has been deprecated since v"+n+" and will be removed in the near future"))),t?t(a,l,o):!0}};function Q1(e,t,n){if(typeof e!="object")throw new $("options must be an object",$.ERR_BAD_OPTION_VALUE);const r=Object.keys(e);let s=r.length;for(;s-- >0;){const a=r[s],l=t[a];if(l){const o=e[a],u=o===void 0||l(o,a,e);if(u!==!0)throw new $("option "+a+" must be "+u,$.ERR_BAD_OPTION_VALUE);continue}if(n!==!0)throw new $("Unknown option "+a,$.ERR_BAD_OPTION)}}const uu={assertOptions:Q1,validators:jc},Jt=uu.validators;class rr{constructor(t){this.defaults=t,this.interceptors={request:new nf,response:new nf}}async request(t,n){try{return await this._request(t,n)}catch(r){if(r instanceof Error){let s;Error.captureStackTrace?Error.captureStackTrace(s={}):s=new Error;const a=s.stack?s.stack.replace(/^.+\n/,""):"";try{r.stack?a&&!String(r.stack).endsWith(a.replace(/^.+\n.+\n/,""))&&(r.stack+=`
`+a):r.stack=a}catch{}}throw r}}_request(t,n){typeof t=="string"?(n=n||{},n.url=t):n=t||{},n=cr(this.defaults,n);const{transitional:r,paramsSerializer:s,headers:a}=n;r!==void 0&&uu.assertOptions(r,{silentJSONParsing:Jt.transitional(Jt.boolean),forcedJSONParsing:Jt.transitional(Jt.boolean),clarifyTimeoutError:Jt.transitional(Jt.boolean)},!1),s!=null&&(S.isFunction(s)?n.paramsSerializer={serialize:s}:uu.assertOptions(s,{encode:Jt.function,serialize:Jt.function},!0)),n.method=(n.method||this.defaults.method||"get").toLowerCase();let l=a&&S.merge(a.common,a[n.method]);a&&S.forEach(["delete","get","head","post","put","patch","common"],m=>{delete a[m]}),n.headers=Ye.concat(l,a);const o=[];let u=!0;this.interceptors.request.forEach(function(v){typeof v.runWhen=="function"&&v.runWhen(n)===!1||(u=u&&v.synchronous,o.unshift(v.fulfilled,v.rejected))});const c=[];this.interceptors.response.forEach(function(v){c.push(v.fulfilled,v.rejected)});let h,d=0,f;if(!u){const m=[df.bind(this),void 0];for(m.unshift.apply(m,o),m.push.apply(m,c),f=m.length,h=Promise.resolve(n);d<f;)h=h.then(m[d++],m[d++]);return h}f=o.length;let g=n;for(d=0;d<f;){const m=o[d++],v=o[d++];try{g=m(g)}catch(j){v.call(this,j);break}}try{h=df.call(this,g)}catch(m){return Promise.reject(m)}for(d=0,f=c.length;d<f;)h=h.then(c[d++],c[d++]);return h}getUri(t){t=cr(this.defaults,t);const n=Mp(t.baseURL,t.url);return Rp(n,t.params,t.paramsSerializer)}}S.forEach(["delete","get","head","options"],function(t){rr.prototype[t]=function(n,r){return this.request(cr(r||{},{method:t,url:n,data:(r||{}).data}))}});S.forEach(["post","put","patch"],function(t){function n(r){return function(a,l,o){return this.request(cr(o||{},{method:t,headers:r?{"Content-Type":"multipart/form-data"}:{},url:a,data:l}))}}rr.prototype[t]=n(),rr.prototype[t+"Form"]=n(!0)});class Nc{constructor(t){if(typeof t!="function")throw new TypeError("executor must be a function.");let n;this.promise=new Promise(function(a){n=a});const r=this;this.promise.then(s=>{if(!r._listeners)return;let a=r._listeners.length;for(;a-- >0;)r._listeners[a](s);r._listeners=null}),this.promise.then=s=>{let a;const l=new Promise(o=>{r.subscribe(o),a=o}).then(s);return l.cancel=function(){r.unsubscribe(a)},l},t(function(a,l,o){r.reason||(r.reason=new ds(a,l,o),n(r.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(t){if(this.reason){t(this.reason);return}this._listeners?this._listeners.push(t):this._listeners=[t]}unsubscribe(t){if(!this._listeners)return;const n=this._listeners.indexOf(t);n!==-1&&this._listeners.splice(n,1)}toAbortSignal(){const t=new AbortController,n=r=>{t.abort(r)};return this.subscribe(n),t.signal.unsubscribe=()=>this.unsubscribe(n),t.signal}static source(){let t;return{token:new Nc(function(s){t=s}),cancel:t}}}function H1(e){return function(n){return e.apply(null,n)}}function V1(e){return S.isObject(e)&&e.isAxiosError===!0}const cu={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(cu).forEach(([e,t])=>{cu[t]=e});function Up(e){const t=new rr(e),n=yp(rr.prototype.request,t);return S.extend(n,rr.prototype,t,{allOwnKeys:!0}),S.extend(n,t,null,{allOwnKeys:!0}),n.create=function(s){return Up(cr(e,s))},n}const ye=Up(ya);ye.Axios=rr;ye.CanceledError=ds;ye.CancelToken=Nc;ye.isCancel=Dp;ye.VERSION=Ip;ye.toFormData=cl;ye.AxiosError=$;ye.Cancel=ye.CanceledError;ye.all=function(t){return Promise.all(t)};ye.spread=H1;ye.isAxiosError=V1;ye.mergeConfig=cr;ye.AxiosHeaders=Ye;ye.formToJSON=e=>Tp(S.isHTMLForm(e)?new FormData(e):e);ye.getAdapter=Ap.getAdapter;ye.HttpStatusCode=cu;ye.default=ye;const L=ye.create({baseURL:"/api/v1",withCredentials:!0});/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const K1=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),$p=(...e)=>e.filter((t,n,r)=>!!t&&r.indexOf(t)===n).join(" ");/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var Y1={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const G1=N.forwardRef(({color:e="currentColor",size:t=24,strokeWidth:n=2,absoluteStrokeWidth:r,className:s="",children:a,iconNode:l,...o},u)=>N.createElement("svg",{ref:u,...Y1,width:t,height:t,stroke:e,strokeWidth:r?Number(n)*24/Number(t):n,className:$p("lucide",s),...o},[...l.map(([c,h])=>N.createElement(c,h)),...Array.isArray(a)?a:[a]]));/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const q=(e,t)=>{const n=N.forwardRef(({className:r,...s},a)=>N.createElement(G1,{ref:a,iconNode:t,className:$p(`lucide-${K1(e)}`,r),...s}));return n.displayName=`${e}`,n};/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const X1=q("ArrowLeft",[["path",{d:"m12 19-7-7 7-7",key:"1l729n"}],["path",{d:"M19 12H5",key:"x3x0zl"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const J1=q("ArrowRight",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"m12 5 7 7-7 7",key:"xquz4c"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const qp=q("Bell",[["path",{d:"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9",key:"1qo2s2"}],["path",{d:"M10.3 21a1.94 1.94 0 0 0 3.4 0",key:"qgo35s"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Z1=q("Bookmark",[["path",{d:"m19 21-7-4-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16z",key:"1fy3hk"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const wt=q("Briefcase",[["path",{d:"M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16",key:"jecpp"}],["rect",{width:"20",height:"14",x:"2",y:"6",rx:"2",key:"i6l2r4"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Bp=q("Building",[["rect",{width:"16",height:"20",x:"4",y:"2",rx:"2",ry:"2",key:"76otgf"}],["path",{d:"M9 22v-4h6v4",key:"r93iot"}],["path",{d:"M8 6h.01",key:"1dz90k"}],["path",{d:"M16 6h.01",key:"1x0f13"}],["path",{d:"M12 6h.01",key:"1vi96p"}],["path",{d:"M12 10h.01",key:"1nrarc"}],["path",{d:"M12 14h.01",key:"1etili"}],["path",{d:"M16 10h.01",key:"1m94wz"}],["path",{d:"M16 14h.01",key:"1gbofw"}],["path",{d:"M8 10h.01",key:"19clt8"}],["path",{d:"M8 14h.01",key:"6423bh"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const xa=q("Calendar",[["path",{d:"M8 2v4",key:"1cmpym"}],["path",{d:"M16 2v4",key:"4m81vk"}],["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",key:"1hopcy"}],["path",{d:"M3 10h18",key:"8toen8"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const hf=q("Camera",[["path",{d:"M14.5 4h-5L7 7H4a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-3l-2.5-3z",key:"1tc9qg"}],["circle",{cx:"12",cy:"13",r:"3",key:"1vg3eu"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ew=q("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const tw=q("CircleAlert",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["line",{x1:"12",x2:"12",y1:"8",y2:"12",key:"1pkeuh"}],["line",{x1:"12",x2:"12.01",y1:"16",y2:"16",key:"4dfq90"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const nw=q("CircleCheckBig",[["path",{d:"M21.801 10A10 10 0 1 1 17 3.335",key:"yps3ct"}],["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const fl=q("Clock",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["polyline",{points:"12 6 12 12 16 14",key:"68esgv"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Wp=q("DollarSign",[["line",{x1:"12",x2:"12",y1:"2",y2:"22",key:"7eqyqh"}],["path",{d:"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6",key:"1b0p4s"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const mf=q("ExternalLink",[["path",{d:"M15 3h6v6",key:"1q9fwt"}],["path",{d:"M10 14 21 3",key:"gplh6r"}],["path",{d:"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6",key:"a6xqqp"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const rw=q("Eye",[["path",{d:"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0",key:"1nclc0"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Vn=q("FileText",[["path",{d:"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z",key:"1rqfz7"}],["path",{d:"M14 2v4a2 2 0 0 0 2 2h4",key:"tnqrlb"}],["path",{d:"M10 9H8",key:"b1mrlr"}],["path",{d:"M16 13H8",key:"t4e002"}],["path",{d:"M16 17H8",key:"z1uh3a"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const sw=q("Filter",[["polygon",{points:"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3",key:"1yg77f"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const bc=q("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Qp=q("House",[["path",{d:"M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8",key:"5wwlr5"}],["path",{d:"M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z",key:"1d0kgt"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Sc=q("Image",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",ry:"2",key:"1m3agn"}],["circle",{cx:"9",cy:"9",r:"2",key:"af1f0g"}],["path",{d:"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21",key:"1xmnt7"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const aw=q("Key",[["path",{d:"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4",key:"g0fldk"}],["path",{d:"m21 2-9.6 9.6",key:"1j0ho8"}],["circle",{cx:"7.5",cy:"15.5",r:"5.5",key:"yqb3hr"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ae=q("Loader",[["path",{d:"M12 2v4",key:"3427ic"}],["path",{d:"m16.2 7.8 2.9-2.9",key:"r700ao"}],["path",{d:"M18 12h4",key:"wj9ykh"}],["path",{d:"m16.2 16.2 2.9 2.9",key:"1bxg5t"}],["path",{d:"M12 18v4",key:"jadmvz"}],["path",{d:"m4.9 19.1 2.9-2.9",key:"bwix9q"}],["path",{d:"M2 12h4",key:"j09sii"}],["path",{d:"m4.9 4.9 2.9 2.9",key:"giyufr"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const iw=q("LogOut",[["path",{d:"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4",key:"1uf3rs"}],["polyline",{points:"16 17 21 12 16 7",key:"1gabdz"}],["line",{x1:"21",x2:"9",y1:"12",y2:"12",key:"1uyos4"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Hp=q("Mail",[["rect",{width:"20",height:"16",x:"2",y:"4",rx:"2",key:"18n3k1"}],["path",{d:"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7",key:"1ocrg3"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const kc=q("MapPin",[["path",{d:"M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0",key:"1r0f0z"}],["circle",{cx:"12",cy:"10",r:"3",key:"ilqhr7"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const du=q("Megaphone",[["path",{d:"m3 11 18-5v12L3 14v-3z",key:"n962bs"}],["path",{d:"M11.6 16.8a3 3 0 1 1-5.8-1.6",key:"1yl0tm"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const lw=q("MessageCircle",[["path",{d:"M7.9 20A9 9 0 1 0 4 16.1L2 22Z",key:"vv11sd"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Vp=q("MessageSquare",[["path",{d:"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z",key:"1lielz"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ow=q("Minus",[["path",{d:"M5 12h14",key:"1ays0h"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Kp=q("Plus",[["path",{d:"M5 12h14",key:"1ays0h"}],["path",{d:"M12 5v14",key:"s699le"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const uw=q("School",[["path",{d:"M14 22v-4a2 2 0 1 0-4 0v4",key:"hhkicm"}],["path",{d:"m18 10 4 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-8l4-2",key:"1vwozw"}],["path",{d:"M18 5v17",key:"1sw6gf"}],["path",{d:"m4 6 8-4 8 4",key:"1q0ilc"}],["path",{d:"M6 5v17",key:"1xfsm0"}],["circle",{cx:"12",cy:"9",r:"2",key:"1092wv"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Yp=q("Search",[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const cw=q("Send",[["path",{d:"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z",key:"1ffxy3"}],["path",{d:"m21.854 2.147-10.94 10.939",key:"12cjpa"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const dw=q("Settings",[["path",{d:"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z",key:"1qme2f"}],["circle",{cx:"12",cy:"12",r:"3",key:"1v7zrd"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const fw=q("SquareChevronUp",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}],["path",{d:"m8 14 4-4 4 4",key:"fy2ptz"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Gp=q("ThumbsUp",[["path",{d:"M7 10v12",key:"1qc93n"}],["path",{d:"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z",key:"emmmcr"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const va=q("Trash2",[["path",{d:"M3 6h18",key:"d0wm0j"}],["path",{d:"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6",key:"4alrt4"}],["path",{d:"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2",key:"v07s0e"}],["line",{x1:"10",x2:"10",y1:"11",y2:"17",key:"1uufr5"}],["line",{x1:"14",x2:"14",y1:"11",y2:"17",key:"xtxkd"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Xp=q("UserCheck",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}],["polyline",{points:"16 11 18 13 22 9",key:"1pwet4"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const On=q("UserPlus",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}],["line",{x1:"19",x2:"19",y1:"8",y2:"14",key:"1bvyxn"}],["line",{x1:"22",x2:"16",y1:"11",y2:"11",key:"1shjgl"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const hw=q("User",[["path",{d:"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2",key:"975kel"}],["circle",{cx:"12",cy:"7",r:"4",key:"17ys0d"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Cc=q("Users",[["path",{d:"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2",key:"1yyitq"}],["circle",{cx:"9",cy:"7",r:"4",key:"nufk8"}],["path",{d:"M22 21v-2a4 4 0 0 0-3-3.87",key:"kshegd"}],["path",{d:"M16 3.13a4 4 0 0 1 0 7.75",key:"1da9ce"}]]);/**
 * @license lucide-react v0.439.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const hr=q("X",[["path",{d:"M18 6 6 18",key:"1bl5f8"}],["path",{d:"m6 6 12 12",key:"d8bk6v"}]]),mw=()=>{var o;const{data:e}=G({queryKey:["authUser"]}),t=Ne(),{data:n}=G({queryKey:["notifications"],queryFn:async()=>L.get("/notifications"),enabled:!!e}),{data:r}=G({queryKey:["connectionRequests"],queryFn:async()=>L.get("/connections/requests"),enabled:!!e}),{mutate:s}=K({mutationFn:()=>L.post("/auth/logout"),onSuccess:()=>{t.invalidateQueries({queryKey:["authUser"]})}}),a=n==null?void 0:n.data.filter(u=>!u.read).length,l=(o=r==null?void 0:r.data)==null?void 0:o.length;return i.jsx("nav",{className:"shadow-md sticky top-0 z-10",style:{backgroundColor:"#1b386a"},children:i.jsx("div",{className:"maindigox-w-7xl mx-auto px-4",children:i.jsxs("div",{className:"flex justify-between items-center py-3",children:[i.jsx("div",{className:"flex items-center space-x-4",children:i.jsx(U,{to:"/",children:i.jsx("img",{className:"h-8 rounded",src:"/small-logo.png",alt:"LinkedIn"})})}),i.jsx("div",{className:"flex items-center gap-2 md:gap-6",children:e?i.jsxs(i.Fragment,{children:[i.jsxs(U,{to:"/",className:"text-zinc-50 flex flex-col items-center",children:[i.jsx(Qp,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Inicio"})]}),i.jsxs(U,{to:"/projects",className:"text-zinc-50 flex flex-col items-center",children:[i.jsx(wt,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Proyectos"})]}),i.jsxs(U,{to:"/network",className:"text-zinc-50 flex flex-col items-center relative",children:[i.jsx(Cc,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Contactos"}),l>0&&i.jsx("span",{className:`absolute -top-1 -right-1 md:right-4 bg-blue-500 text-white text-xs 
                                            rounded-full size-3 md:size-4 flex items-center justify-center`,children:l})]}),i.jsxs(U,{to:"/notifications",className:"text-zinc-50 flex flex-col items-center relative",children:[i.jsx(qp,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Notificaciones"}),a>0&&i.jsx("span",{className:`absolute -top-1 -right-1 md:right-4 bg-blue-500 text-white text-xs 
                                            rounded-full size-3 md:size-4 flex items-center justify-center`,children:a})]}),(e.role==="egresado"||e.role==="administrador")&&i.jsxs(U,{to:"/announcements",className:"text-zinc-50 flex flex-col items-center",children:[i.jsx(du,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Anuncios"})]}),(e.role==="egresado"||e.role==="administrador")&&i.jsxs(U,{to:"/jobs",className:"text-zinc-50 flex flex-col items-center",children:[i.jsx(Z1,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Bolsa de Trabajos"})]}),i.jsxs(U,{to:`/profile/${e.username}`,className:"text-zinc-50 flex flex-col items-center",children:[i.jsx(hw,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Acerca de mi"})]}),e.role==="administrador"&&i.jsxs(U,{to:"/admin",className:"text-zinc-50 flex flex-col items-center",children:[i.jsx(dw,{size:20}),i.jsx("span",{className:"text-xs hidden md:block",children:"Admin"})]}),i.jsxs("button",{className:"flex items-center space-x-1 text-sm text-gray-400 hover:text-zinc-200",onClick:()=>s(),children:[i.jsx(iw,{size:20}),i.jsx("span",{className:"hidden md:inline",children:"cerrar sesión"})]})]}):i.jsxs(i.Fragment,{children:[i.jsx(U,{to:"/login",className:"btn btn-primary",children:"Iniciar sesión"}),i.jsx(U,{to:"/signup",className:"btn btn-primary",children:"Registrarse"})]})})]})})})},pw=({children:e})=>i.jsxs("div",{className:"min-h-screen bg-base-100",children:[i.jsx(mw,{}),i.jsx("main",{className:"max-w-7xl mx-auto px-4 py-6",children:e})]});function Tn({user:e}){return i.jsxs("div",{className:"bg-secondary rounded-lg shadow",children:[i.jsxs("div",{className:"p-4 text-center",children:[i.jsx("div",{className:"h-16 rounded-t-lg bg-cover bg-center",style:{backgroundImage:`url("${e.bannerImg||"/banner.png"}")`}}),i.jsxs(U,{to:`/profile/${e.username}`,children:[i.jsx("img",{src:e.profilePicture||"/avatar.png",alt:e.name,className:"w-20 h-20 rounded-full mx-auto mt-[-40px]"}),i.jsx("h2",{className:"text-xl font-semibold mt-2",children:e.name})]}),i.jsx("p",{className:"text-info",children:e.headline}),i.jsxs("p",{className:"text-info text-xs",children:[e.connections.length," contactos"]})]}),i.jsx("div",{className:"border-t border-base-100 p-4",children:i.jsx("nav",{children:i.jsxs("ul",{className:"space-y-2",children:[i.jsx("li",{children:i.jsxs(U,{to:"/",className:"flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors",children:[i.jsx(Qp,{className:"mr-2",size:20})," Inicio"]})}),i.jsx("li",{children:i.jsxs(U,{to:"/network",className:"flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors",children:[i.jsx(On,{className:"mr-2",size:20})," Mis contactos"]})}),i.jsx("li",{children:i.jsxs(U,{to:"/notifications",className:"flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors",children:[i.jsx(qp,{className:"mr-2",size:20})," Notificaciones"]})})]})})}),i.jsx("div",{className:"border-t border-base-100 p-4",children:i.jsx(U,{to:`/profile/${e.username}`,className:"text-sm font-semibold",children:"Mi perfil"})})]})}let gw={data:""},yw=e=>typeof window=="object"?((e?e.querySelector("#_goober"):window._goober)||Object.assign((e||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:e||gw,xw=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,vw=/\/\*[^]*?\*\/|  +/g,pf=/\n+/g,an=(e,t)=>{let n="",r="",s="";for(let a in e){let l=e[a];a[0]=="@"?a[1]=="i"?n=a+" "+l+";":r+=a[1]=="f"?an(l,a):a+"{"+an(l,a[1]=="k"?"":t)+"}":typeof l=="object"?r+=an(l,t?t.replace(/([^,])+/g,o=>a.replace(/(^:.*)|([^,])+/g,u=>/&/.test(u)?u.replace(/&/g,o):o?o+" "+u:u)):a):l!=null&&(a=/^--/.test(a)?a:a.replace(/[A-Z]/g,"-$&").toLowerCase(),s+=an.p?an.p(a,l):a+":"+l+";")}return n+(t&&s?t+"{"+s+"}":s)+r},Ft={},Jp=e=>{if(typeof e=="object"){let t="";for(let n in e)t+=n+Jp(e[n]);return t}return e},ww=(e,t,n,r,s)=>{let a=Jp(e),l=Ft[a]||(Ft[a]=(u=>{let c=0,h=11;for(;c<u.length;)h=101*h+u.charCodeAt(c++)>>>0;return"go"+h})(a));if(!Ft[l]){let u=a!==e?e:(c=>{let h,d,f=[{}];for(;h=xw.exec(c.replace(vw,""));)h[4]?f.shift():h[3]?(d=h[3].replace(pf," ").trim(),f.unshift(f[0][d]=f[0][d]||{})):f[0][h[1]]=h[2].replace(pf," ").trim();return f[0]})(e);Ft[l]=an(s?{["@keyframes "+l]:u}:u,n?"":"."+l)}let o=n&&Ft.g?Ft.g:null;return n&&(Ft.g=Ft[l]),((u,c,h,d)=>{d?c.data=c.data.replace(d,u):c.data.indexOf(u)===-1&&(c.data=h?u+c.data:c.data+u)})(Ft[l],t,r,o),l},jw=(e,t,n)=>e.reduce((r,s,a)=>{let l=t[a];if(l&&l.call){let o=l(n),u=o&&o.props&&o.props.className||/^go/.test(o)&&o;l=u?"."+u:o&&typeof o=="object"?o.props?"":an(o,""):o===!1?"":o}return r+s+(l??"")},"");function hl(e){let t=this||{},n=e.call?e(t.p):e;return ww(n.unshift?n.raw?jw(n,[].slice.call(arguments,1),t.p):n.reduce((r,s)=>Object.assign(r,s&&s.call?s(t.p):s),{}):n,yw(t.target),t.g,t.o,t.k)}let Zp,fu,hu;hl.bind({g:1});let Kt=hl.bind({k:1});function Nw(e,t,n,r){an.p=t,Zp=e,fu=n,hu=r}function zn(e,t){let n=this||{};return function(){let r=arguments;function s(a,l){let o=Object.assign({},a),u=o.className||s.className;n.p=Object.assign({theme:fu&&fu()},o),n.o=/ *go\d+/.test(u),o.className=hl.apply(n,r)+(u?" "+u:"");let c=e;return e[0]&&(c=o.as||e,delete o.as),hu&&c[0]&&hu(o),Zp(c,o)}return s}}var bw=e=>typeof e=="function",$i=(e,t)=>bw(e)?e(t):e,Sw=(()=>{let e=0;return()=>(++e).toString()})(),eg=(()=>{let e;return()=>{if(e===void 0&&typeof window<"u"){let t=matchMedia("(prefers-reduced-motion: reduce)");e=!t||t.matches}return e}})(),kw=20,li=new Map,Cw=1e3,gf=e=>{if(li.has(e))return;let t=setTimeout(()=>{li.delete(e),mr({type:4,toastId:e})},Cw);li.set(e,t)},Ew=e=>{let t=li.get(e);t&&clearTimeout(t)},mu=(e,t)=>{switch(t.type){case 0:return{...e,toasts:[t.toast,...e.toasts].slice(0,kw)};case 1:return t.toast.id&&Ew(t.toast.id),{...e,toasts:e.toasts.map(a=>a.id===t.toast.id?{...a,...t.toast}:a)};case 2:let{toast:n}=t;return e.toasts.find(a=>a.id===n.id)?mu(e,{type:1,toast:n}):mu(e,{type:0,toast:n});case 3:let{toastId:r}=t;return r?gf(r):e.toasts.forEach(a=>{gf(a.id)}),{...e,toasts:e.toasts.map(a=>a.id===r||r===void 0?{...a,visible:!1}:a)};case 4:return t.toastId===void 0?{...e,toasts:[]}:{...e,toasts:e.toasts.filter(a=>a.id!==t.toastId)};case 5:return{...e,pausedAt:t.time};case 6:let s=t.time-(e.pausedAt||0);return{...e,pausedAt:void 0,toasts:e.toasts.map(a=>({...a,pauseDuration:a.pauseDuration+s}))}}},oi=[],ui={toasts:[],pausedAt:void 0},mr=e=>{ui=mu(ui,e),oi.forEach(t=>{t(ui)})},Pw={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},Rw=(e={})=>{let[t,n]=N.useState(ui);N.useEffect(()=>(oi.push(n),()=>{let s=oi.indexOf(n);s>-1&&oi.splice(s,1)}),[t]);let r=t.toasts.map(s=>{var a,l;return{...e,...e[s.type],...s,duration:s.duration||((a=e[s.type])==null?void 0:a.duration)||(e==null?void 0:e.duration)||Pw[s.type],style:{...e.style,...(l=e[s.type])==null?void 0:l.style,...s.style}}});return{...t,toasts:r}},Ow=(e,t="blank",n)=>({createdAt:Date.now(),visible:!0,type:t,ariaProps:{role:"status","aria-live":"polite"},message:e,pauseDuration:0,...n,id:(n==null?void 0:n.id)||Sw()}),wa=e=>(t,n)=>{let r=Ow(t,e,n);return mr({type:2,toast:r}),r.id},ne=(e,t)=>wa("blank")(e,t);ne.error=wa("error");ne.success=wa("success");ne.loading=wa("loading");ne.custom=wa("custom");ne.dismiss=e=>{mr({type:3,toastId:e})};ne.remove=e=>mr({type:4,toastId:e});ne.promise=(e,t,n)=>{let r=ne.loading(t.loading,{...n,...n==null?void 0:n.loading});return e.then(s=>(ne.success($i(t.success,s),{id:r,...n,...n==null?void 0:n.success}),s)).catch(s=>{ne.error($i(t.error,s),{id:r,...n,...n==null?void 0:n.error})}),e};var Tw=(e,t)=>{mr({type:1,toast:{id:e,height:t}})},Dw=()=>{mr({type:5,time:Date.now()})},_w=e=>{let{toasts:t,pausedAt:n}=Rw(e);N.useEffect(()=>{if(n)return;let a=Date.now(),l=t.map(o=>{if(o.duration===1/0)return;let u=(o.duration||0)+o.pauseDuration-(a-o.createdAt);if(u<0){o.visible&&ne.dismiss(o.id);return}return setTimeout(()=>ne.dismiss(o.id),u)});return()=>{l.forEach(o=>o&&clearTimeout(o))}},[t,n]);let r=N.useCallback(()=>{n&&mr({type:6,time:Date.now()})},[n]),s=N.useCallback((a,l)=>{let{reverseOrder:o=!1,gutter:u=8,defaultPosition:c}=l||{},h=t.filter(g=>(g.position||c)===(a.position||c)&&g.height),d=h.findIndex(g=>g.id===a.id),f=h.filter((g,m)=>m<d&&g.visible).length;return h.filter(g=>g.visible).slice(...o?[f+1]:[0,f]).reduce((g,m)=>g+(m.height||0)+u,0)},[t]);return{toasts:t,handlers:{updateHeight:Tw,startPause:Dw,endPause:r,calculateOffset:s}}},Mw=Kt`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
 transform: scale(1) rotate(45deg);
  opacity: 1;
}`,Fw=Kt`
from {
  transform: scale(0);
  opacity: 0;
}
to {
  transform: scale(1);
  opacity: 1;
}`,Lw=Kt`
from {
  transform: scale(0) rotate(90deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(90deg);
	opacity: 1;
}`,zw=zn("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${e=>e.primary||"#ff4b4b"};
  position: relative;
  transform: rotate(45deg);

  animation: ${Mw} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;

  &:after,
  &:before {
    content: '';
    animation: ${Fw} 0.15s ease-out forwards;
    animation-delay: 150ms;
    position: absolute;
    border-radius: 3px;
    opacity: 0;
    background: ${e=>e.secondary||"#fff"};
    bottom: 9px;
    left: 4px;
    height: 2px;
    width: 12px;
  }

  &:before {
    animation: ${Lw} 0.15s ease-out forwards;
    animation-delay: 180ms;
    transform: rotate(90deg);
  }
`,Aw=Kt`
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
`,Iw=zn("div")`
  width: 12px;
  height: 12px;
  box-sizing: border-box;
  border: 2px solid;
  border-radius: 100%;
  border-color: ${e=>e.secondary||"#e0e0e0"};
  border-right-color: ${e=>e.primary||"#616161"};
  animation: ${Aw} 1s linear infinite;
`,Uw=Kt`
from {
  transform: scale(0) rotate(45deg);
	opacity: 0;
}
to {
  transform: scale(1) rotate(45deg);
	opacity: 1;
}`,$w=Kt`
0% {
	height: 0;
	width: 0;
	opacity: 0;
}
40% {
  height: 0;
	width: 6px;
	opacity: 1;
}
100% {
  opacity: 1;
  height: 10px;
}`,qw=zn("div")`
  width: 20px;
  opacity: 0;
  height: 20px;
  border-radius: 10px;
  background: ${e=>e.primary||"#61d345"};
  position: relative;
  transform: rotate(45deg);

  animation: ${Uw} 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
  animation-delay: 100ms;
  &:after {
    content: '';
    box-sizing: border-box;
    animation: ${$w} 0.2s ease-out forwards;
    opacity: 0;
    animation-delay: 200ms;
    position: absolute;
    border-right: 2px solid;
    border-bottom: 2px solid;
    border-color: ${e=>e.secondary||"#fff"};
    bottom: 6px;
    left: 6px;
    height: 10px;
    width: 6px;
  }
`,Bw=zn("div")`
  position: absolute;
`,Ww=zn("div")`
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: 20px;
  min-height: 20px;
`,Qw=Kt`
from {
  transform: scale(0.6);
  opacity: 0.4;
}
to {
  transform: scale(1);
  opacity: 1;
}`,Hw=zn("div")`
  position: relative;
  transform: scale(0.6);
  opacity: 0.4;
  min-width: 20px;
  animation: ${Qw} 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)
    forwards;
`,Vw=({toast:e})=>{let{icon:t,type:n,iconTheme:r}=e;return t!==void 0?typeof t=="string"?N.createElement(Hw,null,t):t:n==="blank"?null:N.createElement(Ww,null,N.createElement(Iw,{...r}),n!=="loading"&&N.createElement(Bw,null,n==="error"?N.createElement(zw,{...r}):N.createElement(qw,{...r})))},Kw=e=>`
0% {transform: translate3d(0,${e*-200}%,0) scale(.6); opacity:.5;}
100% {transform: translate3d(0,0,0) scale(1); opacity:1;}
`,Yw=e=>`
0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}
100% {transform: translate3d(0,${e*-150}%,-1px) scale(.6); opacity:0;}
`,Gw="0%{opacity:0;} 100%{opacity:1;}",Xw="0%{opacity:1;} 100%{opacity:0;}",Jw=zn("div")`
  display: flex;
  align-items: center;
  background: #fff;
  color: #363636;
  line-height: 1.3;
  will-change: transform;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);
  max-width: 350px;
  pointer-events: auto;
  padding: 8px 10px;
  border-radius: 8px;
`,Zw=zn("div")`
  display: flex;
  justify-content: center;
  margin: 4px 10px;
  color: inherit;
  flex: 1 1 auto;
  white-space: pre-line;
`,ej=(e,t)=>{let n=e.includes("top")?1:-1,[r,s]=eg()?[Gw,Xw]:[Kw(n),Yw(n)];return{animation:t?`${Kt(r)} 0.35s cubic-bezier(.21,1.02,.73,1) forwards`:`${Kt(s)} 0.4s forwards cubic-bezier(.06,.71,.55,1)`}},tj=N.memo(({toast:e,position:t,style:n,children:r})=>{let s=e.height?ej(e.position||t||"top-center",e.visible):{opacity:0},a=N.createElement(Vw,{toast:e}),l=N.createElement(Zw,{...e.ariaProps},$i(e.message,e));return N.createElement(Jw,{className:e.className,style:{...s,...n,...e.style}},typeof r=="function"?r({icon:a,message:l}):N.createElement(N.Fragment,null,a,l))});Nw(N.createElement);var nj=({id:e,className:t,style:n,onHeightUpdate:r,children:s})=>{let a=N.useCallback(l=>{if(l){let o=()=>{let u=l.getBoundingClientRect().height;r(e,u)};o(),new MutationObserver(o).observe(l,{subtree:!0,childList:!0,characterData:!0})}},[e,r]);return N.createElement("div",{ref:a,className:t,style:n},s)},rj=(e,t)=>{let n=e.includes("top"),r=n?{top:0}:{bottom:0},s=e.includes("center")?{justifyContent:"center"}:e.includes("right")?{justifyContent:"flex-end"}:{};return{left:0,right:0,display:"flex",position:"absolute",transition:eg()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:`translateY(${t*(n?1:-1)}px)`,...r,...s}},sj=hl`
  z-index: 9999;
  > * {
    pointer-events: auto;
  }
`,Ba=16,aj=({reverseOrder:e,position:t="top-center",toastOptions:n,gutter:r,children:s,containerStyle:a,containerClassName:l})=>{let{toasts:o,handlers:u}=_w(n);return N.createElement("div",{style:{position:"fixed",zIndex:9999,top:Ba,left:Ba,right:Ba,bottom:Ba,pointerEvents:"none",...a},className:l,onMouseEnter:u.startPause,onMouseLeave:u.endPause},o.map(c=>{let h=c.position||t,d=u.calculateOffset(c,{reverseOrder:e,gutter:r,defaultPosition:t}),f=rj(h,d);return N.createElement(nj,{id:c.id,key:c.id,onHeightUpdate:u.updateHeight,className:c.visible?sj:"",style:f},c.type==="custom"?$i(c.message,c):s?s(c):N.createElement(tj,{toast:c,position:h}))}))},M=ne;const ij=({user:e})=>{const[t,n]=N.useState(""),[r,s]=N.useState(null),[a,l]=N.useState(null),o=Ne(),{mutate:u,isPending:c}=K({mutationFn:async m=>(await L.post("/posts/create",m,{headers:{"Content-Type":"application/json"}})).data,onSuccess:()=>{d(),M.success("Post creado"),o.invalidateQueries({queryKey:["posts"]})},onError:m=>{M.error(m.response.data.message||"Failed to create post")}}),h=async()=>{try{const m={content:t};r&&(m.image=await g(r)),u(m)}catch(m){console.error("Error in handlePostCreation:",m)}},d=()=>{n(""),s(null),l(null)},f=m=>{const v=m.target.files[0];s(v),v?g(v).then(l):l(null)},g=m=>new Promise((v,j)=>{const p=new FileReader;p.onloadend=()=>v(p.result),p.onerror=j,p.readAsDataURL(m)});return i.jsxs("div",{className:"bg-secondary rounded-lg shadow mb-4 p-4",children:[i.jsxs("div",{className:"flex space-x-3",children:[i.jsx("img",{src:e.profilePicture||"/avatar.png",alt:e.name,className:"size-12 rounded-full"}),i.jsx("textarea",{placeholder:"Escribe tu post aquí.",className:"w-full p-3 rounded-lg bg-base-100 hover:bg-base-200 focus:bg-base-200 focus:outline-none resize-none transition-colors duration-200 min-h-[100px]",value:t,onChange:m=>n(m.target.value)})]}),a&&i.jsx("div",{className:"mt-4",children:i.jsx("img",{src:a,alt:"Selected",className:"w-full h-auto rounded-lg"})}),i.jsxs("div",{className:"flex justify-between items-center mt-4",children:[i.jsx("div",{className:"flex space-x-4",children:i.jsxs("label",{className:"flex items-center text-info hover:text-info-dark transition-colors duration-200 cursor-pointer",children:[i.jsx(Sc,{size:20,className:"mr-2"}),i.jsx("span",{children:"Aregar imagen"}),i.jsx("input",{type:"file",accept:"image/*",className:"hidden",onChange:f})]})}),i.jsx("button",{className:"bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200",onClick:h,disabled:c,children:c?i.jsx(Ae,{className:"size-5 animate-spin"}):"Publicar"})]})]})};function re(e){const t=Object.prototype.toString.call(e);return e instanceof Date||typeof e=="object"&&t==="[object Date]"?new e.constructor(+e):typeof e=="number"||t==="[object Number]"||typeof e=="string"||t==="[object String]"?new Date(e):new Date(NaN)}function Dn(e,t){return e instanceof Date?new e.constructor(t):new Date(t)}const tg=6048e5,lj=864e5,ng=6e4,rg=36e5,Wa=43200,yf=1440;let oj={};function ja(){return oj}function aa(e,t){var o,u,c,h;const n=ja(),r=(t==null?void 0:t.weekStartsOn)??((u=(o=t==null?void 0:t.locale)==null?void 0:o.options)==null?void 0:u.weekStartsOn)??n.weekStartsOn??((h=(c=n.locale)==null?void 0:c.options)==null?void 0:h.weekStartsOn)??0,s=re(e),a=s.getDay(),l=(a<r?7:0)+a-r;return s.setDate(s.getDate()-l),s.setHours(0,0,0,0),s}function qi(e){return aa(e,{weekStartsOn:1})}function sg(e){const t=re(e),n=t.getFullYear(),r=Dn(e,0);r.setFullYear(n+1,0,4),r.setHours(0,0,0,0);const s=qi(r),a=Dn(e,0);a.setFullYear(n,0,4),a.setHours(0,0,0,0);const l=qi(a);return t.getTime()>=s.getTime()?n+1:t.getTime()>=l.getTime()?n:n-1}function xf(e){const t=re(e);return t.setHours(0,0,0,0),t}function Bi(e){const t=re(e),n=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return n.setUTCFullYear(t.getFullYear()),+e-+n}function uj(e,t){const n=xf(e),r=xf(t),s=+n-Bi(n),a=+r-Bi(r);return Math.round((s-a)/lj)}function cj(e){const t=sg(e),n=Dn(e,0);return n.setFullYear(t,0,4),n.setHours(0,0,0,0),qi(n)}function ci(e,t){const n=re(e),r=re(t),s=n.getTime()-r.getTime();return s<0?-1:s>0?1:s}function dj(e){return Dn(e,Date.now())}function fj(e){return e instanceof Date||typeof e=="object"&&Object.prototype.toString.call(e)==="[object Date]"}function ag(e){if(!fj(e)&&typeof e!="number")return!1;const t=re(e);return!isNaN(Number(t))}function hj(e,t){const n=re(e),r=re(t),s=n.getFullYear()-r.getFullYear(),a=n.getMonth()-r.getMonth();return s*12+a}function mj(e){return t=>{const r=(e?Math[e]:Math.trunc)(t);return r===0?0:r}}function pj(e,t){return+re(e)-+re(t)}function gj(e){const t=re(e);return t.setHours(23,59,59,999),t}function yj(e){const t=re(e),n=t.getMonth();return t.setFullYear(t.getFullYear(),n+1,0),t.setHours(23,59,59,999),t}function xj(e){const t=re(e);return+gj(t)==+yj(t)}function vj(e,t){const n=re(e),r=re(t),s=ci(n,r),a=Math.abs(hj(n,r));let l;if(a<1)l=0;else{n.getMonth()===1&&n.getDate()>27&&n.setDate(30),n.setMonth(n.getMonth()-s*a);let o=ci(n,r)===-s;xj(re(e))&&a===1&&ci(e,r)===1&&(o=!1),l=s*(a-Number(o))}return l===0?0:l}function wj(e,t,n){const r=pj(e,t)/1e3;return mj(n==null?void 0:n.roundingMethod)(r)}function jj(e){const t=re(e),n=Dn(e,0);return n.setFullYear(t.getFullYear(),0,1),n.setHours(0,0,0,0),n}const Nj={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},bj=(e,t,n)=>{let r;const s=Nj[e];return typeof s=="string"?r=s:t===1?r=s.one:r=s.other.replace("{{count}}",t.toString()),n!=null&&n.addSuffix?n.comparison&&n.comparison>0?"in "+r:r+" ago":r};function Kl(e){return(t={})=>{const n=t.width?String(t.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}const Sj={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},kj={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},Cj={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},Ej={date:Kl({formats:Sj,defaultWidth:"full"}),time:Kl({formats:kj,defaultWidth:"full"}),dateTime:Kl({formats:Cj,defaultWidth:"full"})},Pj={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},Rj=(e,t,n,r)=>Pj[e];function js(e){return(t,n)=>{const r=n!=null&&n.context?String(n.context):"standalone";let s;if(r==="formatting"&&e.formattingValues){const l=e.defaultFormattingWidth||e.defaultWidth,o=n!=null&&n.width?String(n.width):l;s=e.formattingValues[o]||e.formattingValues[l]}else{const l=e.defaultWidth,o=n!=null&&n.width?String(n.width):e.defaultWidth;s=e.values[o]||e.values[l]}const a=e.argumentCallback?e.argumentCallback(t):t;return s[a]}}const Oj={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},Tj={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},Dj={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},_j={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},Mj={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},Fj={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},Lj=(e,t)=>{const n=Number(e),r=n%100;if(r>20||r<10)switch(r%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},zj={ordinalNumber:Lj,era:js({values:Oj,defaultWidth:"wide"}),quarter:js({values:Tj,defaultWidth:"wide",argumentCallback:e=>e-1}),month:js({values:Dj,defaultWidth:"wide"}),day:js({values:_j,defaultWidth:"wide"}),dayPeriod:js({values:Mj,defaultWidth:"wide",formattingValues:Fj,defaultFormattingWidth:"wide"})};function Ns(e){return(t,n={})=>{const r=n.width,s=r&&e.matchPatterns[r]||e.matchPatterns[e.defaultMatchWidth],a=t.match(s);if(!a)return null;const l=a[0],o=r&&e.parsePatterns[r]||e.parsePatterns[e.defaultParseWidth],u=Array.isArray(o)?Ij(o,d=>d.test(l)):Aj(o,d=>d.test(l));let c;c=e.valueCallback?e.valueCallback(u):u,c=n.valueCallback?n.valueCallback(c):c;const h=t.slice(l.length);return{value:c,rest:h}}}function Aj(e,t){for(const n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&t(e[n]))return n}function Ij(e,t){for(let n=0;n<e.length;n++)if(t(e[n]))return n}function Uj(e){return(t,n={})=>{const r=t.match(e.matchPattern);if(!r)return null;const s=r[0],a=t.match(e.parsePattern);if(!a)return null;let l=e.valueCallback?e.valueCallback(a[0]):a[0];l=n.valueCallback?n.valueCallback(l):l;const o=t.slice(s.length);return{value:l,rest:o}}}const $j=/^(\d+)(th|st|nd|rd)?/i,qj=/\d+/i,Bj={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},Wj={any:[/^b/i,/^(a|c)/i]},Qj={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},Hj={any:[/1/i,/2/i,/3/i,/4/i]},Vj={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},Kj={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},Yj={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},Gj={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},Xj={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},Jj={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},Zj={ordinalNumber:Uj({matchPattern:$j,parsePattern:qj,valueCallback:e=>parseInt(e,10)}),era:Ns({matchPatterns:Bj,defaultMatchWidth:"wide",parsePatterns:Wj,defaultParseWidth:"any"}),quarter:Ns({matchPatterns:Qj,defaultMatchWidth:"wide",parsePatterns:Hj,defaultParseWidth:"any",valueCallback:e=>e+1}),month:Ns({matchPatterns:Vj,defaultMatchWidth:"wide",parsePatterns:Kj,defaultParseWidth:"any"}),day:Ns({matchPatterns:Yj,defaultMatchWidth:"wide",parsePatterns:Gj,defaultParseWidth:"any"}),dayPeriod:Ns({matchPatterns:Xj,defaultMatchWidth:"any",parsePatterns:Jj,defaultParseWidth:"any"})},ig={code:"en-US",formatDistance:bj,formatLong:Ej,formatRelative:Rj,localize:zj,match:Zj,options:{weekStartsOn:0,firstWeekContainsDate:1}};function e2(e){const t=re(e);return uj(t,jj(t))+1}function t2(e){const t=re(e),n=+qi(t)-+cj(t);return Math.round(n/tg)+1}function lg(e,t){var h,d,f,g;const n=re(e),r=n.getFullYear(),s=ja(),a=(t==null?void 0:t.firstWeekContainsDate)??((d=(h=t==null?void 0:t.locale)==null?void 0:h.options)==null?void 0:d.firstWeekContainsDate)??s.firstWeekContainsDate??((g=(f=s.locale)==null?void 0:f.options)==null?void 0:g.firstWeekContainsDate)??1,l=Dn(e,0);l.setFullYear(r+1,0,a),l.setHours(0,0,0,0);const o=aa(l,t),u=Dn(e,0);u.setFullYear(r,0,a),u.setHours(0,0,0,0);const c=aa(u,t);return n.getTime()>=o.getTime()?r+1:n.getTime()>=c.getTime()?r:r-1}function n2(e,t){var o,u,c,h;const n=ja(),r=(t==null?void 0:t.firstWeekContainsDate)??((u=(o=t==null?void 0:t.locale)==null?void 0:o.options)==null?void 0:u.firstWeekContainsDate)??n.firstWeekContainsDate??((h=(c=n.locale)==null?void 0:c.options)==null?void 0:h.firstWeekContainsDate)??1,s=lg(e,t),a=Dn(e,0);return a.setFullYear(s,0,r),a.setHours(0,0,0,0),aa(a,t)}function r2(e,t){const n=re(e),r=+aa(n,t)-+n2(n,t);return Math.round(r/tg)+1}function ee(e,t){const n=e<0?"-":"",r=Math.abs(e).toString().padStart(t,"0");return n+r}const Zt={y(e,t){const n=e.getFullYear(),r=n>0?n:1-n;return ee(t==="yy"?r%100:r,t.length)},M(e,t){const n=e.getMonth();return t==="M"?String(n+1):ee(n+1,2)},d(e,t){return ee(e.getDate(),t.length)},a(e,t){const n=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return n.toUpperCase();case"aaa":return n;case"aaaaa":return n[0];case"aaaa":default:return n==="am"?"a.m.":"p.m."}},h(e,t){return ee(e.getHours()%12||12,t.length)},H(e,t){return ee(e.getHours(),t.length)},m(e,t){return ee(e.getMinutes(),t.length)},s(e,t){return ee(e.getSeconds(),t.length)},S(e,t){const n=t.length,r=e.getMilliseconds(),s=Math.trunc(r*Math.pow(10,n-3));return ee(s,t.length)}},yr={am:"am",pm:"pm",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},vf={G:function(e,t,n){const r=e.getFullYear()>0?1:0;switch(t){case"G":case"GG":case"GGG":return n.era(r,{width:"abbreviated"});case"GGGGG":return n.era(r,{width:"narrow"});case"GGGG":default:return n.era(r,{width:"wide"})}},y:function(e,t,n){if(t==="yo"){const r=e.getFullYear(),s=r>0?r:1-r;return n.ordinalNumber(s,{unit:"year"})}return Zt.y(e,t)},Y:function(e,t,n,r){const s=lg(e,r),a=s>0?s:1-s;if(t==="YY"){const l=a%100;return ee(l,2)}return t==="Yo"?n.ordinalNumber(a,{unit:"year"}):ee(a,t.length)},R:function(e,t){const n=sg(e);return ee(n,t.length)},u:function(e,t){const n=e.getFullYear();return ee(n,t.length)},Q:function(e,t,n){const r=Math.ceil((e.getMonth()+1)/3);switch(t){case"Q":return String(r);case"QQ":return ee(r,2);case"Qo":return n.ordinalNumber(r,{unit:"quarter"});case"QQQ":return n.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return n.quarter(r,{width:"narrow",context:"formatting"});case"QQQQ":default:return n.quarter(r,{width:"wide",context:"formatting"})}},q:function(e,t,n){const r=Math.ceil((e.getMonth()+1)/3);switch(t){case"q":return String(r);case"qq":return ee(r,2);case"qo":return n.ordinalNumber(r,{unit:"quarter"});case"qqq":return n.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return n.quarter(r,{width:"narrow",context:"standalone"});case"qqqq":default:return n.quarter(r,{width:"wide",context:"standalone"})}},M:function(e,t,n){const r=e.getMonth();switch(t){case"M":case"MM":return Zt.M(e,t);case"Mo":return n.ordinalNumber(r+1,{unit:"month"});case"MMM":return n.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return n.month(r,{width:"narrow",context:"formatting"});case"MMMM":default:return n.month(r,{width:"wide",context:"formatting"})}},L:function(e,t,n){const r=e.getMonth();switch(t){case"L":return String(r+1);case"LL":return ee(r+1,2);case"Lo":return n.ordinalNumber(r+1,{unit:"month"});case"LLL":return n.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return n.month(r,{width:"narrow",context:"standalone"});case"LLLL":default:return n.month(r,{width:"wide",context:"standalone"})}},w:function(e,t,n,r){const s=r2(e,r);return t==="wo"?n.ordinalNumber(s,{unit:"week"}):ee(s,t.length)},I:function(e,t,n){const r=t2(e);return t==="Io"?n.ordinalNumber(r,{unit:"week"}):ee(r,t.length)},d:function(e,t,n){return t==="do"?n.ordinalNumber(e.getDate(),{unit:"date"}):Zt.d(e,t)},D:function(e,t,n){const r=e2(e);return t==="Do"?n.ordinalNumber(r,{unit:"dayOfYear"}):ee(r,t.length)},E:function(e,t,n){const r=e.getDay();switch(t){case"E":case"EE":case"EEE":return n.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return n.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return n.day(r,{width:"short",context:"formatting"});case"EEEE":default:return n.day(r,{width:"wide",context:"formatting"})}},e:function(e,t,n,r){const s=e.getDay(),a=(s-r.weekStartsOn+8)%7||7;switch(t){case"e":return String(a);case"ee":return ee(a,2);case"eo":return n.ordinalNumber(a,{unit:"day"});case"eee":return n.day(s,{width:"abbreviated",context:"formatting"});case"eeeee":return n.day(s,{width:"narrow",context:"formatting"});case"eeeeee":return n.day(s,{width:"short",context:"formatting"});case"eeee":default:return n.day(s,{width:"wide",context:"formatting"})}},c:function(e,t,n,r){const s=e.getDay(),a=(s-r.weekStartsOn+8)%7||7;switch(t){case"c":return String(a);case"cc":return ee(a,t.length);case"co":return n.ordinalNumber(a,{unit:"day"});case"ccc":return n.day(s,{width:"abbreviated",context:"standalone"});case"ccccc":return n.day(s,{width:"narrow",context:"standalone"});case"cccccc":return n.day(s,{width:"short",context:"standalone"});case"cccc":default:return n.day(s,{width:"wide",context:"standalone"})}},i:function(e,t,n){const r=e.getDay(),s=r===0?7:r;switch(t){case"i":return String(s);case"ii":return ee(s,t.length);case"io":return n.ordinalNumber(s,{unit:"day"});case"iii":return n.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return n.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return n.day(r,{width:"short",context:"formatting"});case"iiii":default:return n.day(r,{width:"wide",context:"formatting"})}},a:function(e,t,n){const s=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return n.dayPeriod(s,{width:"abbreviated",context:"formatting"});case"aaa":return n.dayPeriod(s,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return n.dayPeriod(s,{width:"narrow",context:"formatting"});case"aaaa":default:return n.dayPeriod(s,{width:"wide",context:"formatting"})}},b:function(e,t,n){const r=e.getHours();let s;switch(r===12?s=yr.noon:r===0?s=yr.midnight:s=r/12>=1?"pm":"am",t){case"b":case"bb":return n.dayPeriod(s,{width:"abbreviated",context:"formatting"});case"bbb":return n.dayPeriod(s,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return n.dayPeriod(s,{width:"narrow",context:"formatting"});case"bbbb":default:return n.dayPeriod(s,{width:"wide",context:"formatting"})}},B:function(e,t,n){const r=e.getHours();let s;switch(r>=17?s=yr.evening:r>=12?s=yr.afternoon:r>=4?s=yr.morning:s=yr.night,t){case"B":case"BB":case"BBB":return n.dayPeriod(s,{width:"abbreviated",context:"formatting"});case"BBBBB":return n.dayPeriod(s,{width:"narrow",context:"formatting"});case"BBBB":default:return n.dayPeriod(s,{width:"wide",context:"formatting"})}},h:function(e,t,n){if(t==="ho"){let r=e.getHours()%12;return r===0&&(r=12),n.ordinalNumber(r,{unit:"hour"})}return Zt.h(e,t)},H:function(e,t,n){return t==="Ho"?n.ordinalNumber(e.getHours(),{unit:"hour"}):Zt.H(e,t)},K:function(e,t,n){const r=e.getHours()%12;return t==="Ko"?n.ordinalNumber(r,{unit:"hour"}):ee(r,t.length)},k:function(e,t,n){let r=e.getHours();return r===0&&(r=24),t==="ko"?n.ordinalNumber(r,{unit:"hour"}):ee(r,t.length)},m:function(e,t,n){return t==="mo"?n.ordinalNumber(e.getMinutes(),{unit:"minute"}):Zt.m(e,t)},s:function(e,t,n){return t==="so"?n.ordinalNumber(e.getSeconds(),{unit:"second"}):Zt.s(e,t)},S:function(e,t){return Zt.S(e,t)},X:function(e,t,n){const r=e.getTimezoneOffset();if(r===0)return"Z";switch(t){case"X":return jf(r);case"XXXX":case"XX":return qn(r);case"XXXXX":case"XXX":default:return qn(r,":")}},x:function(e,t,n){const r=e.getTimezoneOffset();switch(t){case"x":return jf(r);case"xxxx":case"xx":return qn(r);case"xxxxx":case"xxx":default:return qn(r,":")}},O:function(e,t,n){const r=e.getTimezoneOffset();switch(t){case"O":case"OO":case"OOO":return"GMT"+wf(r,":");case"OOOO":default:return"GMT"+qn(r,":")}},z:function(e,t,n){const r=e.getTimezoneOffset();switch(t){case"z":case"zz":case"zzz":return"GMT"+wf(r,":");case"zzzz":default:return"GMT"+qn(r,":")}},t:function(e,t,n){const r=Math.trunc(e.getTime()/1e3);return ee(r,t.length)},T:function(e,t,n){const r=e.getTime();return ee(r,t.length)}};function wf(e,t=""){const n=e>0?"-":"+",r=Math.abs(e),s=Math.trunc(r/60),a=r%60;return a===0?n+String(s):n+String(s)+t+ee(a,2)}function jf(e,t){return e%60===0?(e>0?"-":"+")+ee(Math.abs(e)/60,2):qn(e,t)}function qn(e,t=""){const n=e>0?"-":"+",r=Math.abs(e),s=ee(Math.trunc(r/60),2),a=ee(r%60,2);return n+s+t+a}const Nf=(e,t)=>{switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});case"PPPP":default:return t.date({width:"full"})}},og=(e,t)=>{switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});case"pppp":default:return t.time({width:"full"})}},s2=(e,t)=>{const n=e.match(/(P+)(p+)?/)||[],r=n[1],s=n[2];if(!s)return Nf(e,t);let a;switch(r){case"P":a=t.dateTime({width:"short"});break;case"PP":a=t.dateTime({width:"medium"});break;case"PPP":a=t.dateTime({width:"long"});break;case"PPPP":default:a=t.dateTime({width:"full"});break}return a.replace("{{date}}",Nf(r,t)).replace("{{time}}",og(s,t))},a2={p:og,P:s2},i2=/^D+$/,l2=/^Y+$/,o2=["D","DD","YY","YYYY"];function u2(e){return i2.test(e)}function c2(e){return l2.test(e)}function d2(e,t,n){const r=f2(e,t,n);if(console.warn(r),o2.includes(e))throw new RangeError(r)}function f2(e,t,n){const r=e[0]==="Y"?"years":"days of the month";return`Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${r} to the input \`${n}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`}const h2=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,m2=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,p2=/^'([^]*?)'?$/,g2=/''/g,y2=/[a-zA-Z]/;function x2(e,t,n){var h,d,f,g;const r=ja(),s=r.locale??ig,a=r.firstWeekContainsDate??((d=(h=r.locale)==null?void 0:h.options)==null?void 0:d.firstWeekContainsDate)??1,l=r.weekStartsOn??((g=(f=r.locale)==null?void 0:f.options)==null?void 0:g.weekStartsOn)??0,o=re(e);if(!ag(o))throw new RangeError("Invalid time value");let u=t.match(m2).map(m=>{const v=m[0];if(v==="p"||v==="P"){const j=a2[v];return j(m,s.formatLong)}return m}).join("").match(h2).map(m=>{if(m==="''")return{isToken:!1,value:"'"};const v=m[0];if(v==="'")return{isToken:!1,value:v2(m)};if(vf[v])return{isToken:!0,value:m};if(v.match(y2))throw new RangeError("Format string contains an unescaped latin alphabet character `"+v+"`");return{isToken:!1,value:m}});s.localize.preprocessor&&(u=s.localize.preprocessor(o,u));const c={firstWeekContainsDate:a,weekStartsOn:l,locale:s};return u.map(m=>{if(!m.isToken)return m.value;const v=m.value;(c2(v)||u2(v))&&d2(v,t,String(e));const j=vf[v[0]];return j(o,v,s.localize,c)}).join("")}function v2(e){const t=e.match(p2);return t?t[1].replace(g2,"'"):e}function w2(e,t,n){const r=ja(),s=(n==null?void 0:n.locale)??r.locale??ig,a=2520,l=ci(e,t);if(isNaN(l))throw new RangeError("Invalid time value");const o=Object.assign({},n,{addSuffix:n==null?void 0:n.addSuffix,comparison:l});let u,c;l>0?(u=re(t),c=re(e)):(u=re(e),c=re(t));const h=wj(c,u),d=(Bi(c)-Bi(u))/1e3,f=Math.round((h-d)/60);let g;if(f<2)return n!=null&&n.includeSeconds?h<5?s.formatDistance("lessThanXSeconds",5,o):h<10?s.formatDistance("lessThanXSeconds",10,o):h<20?s.formatDistance("lessThanXSeconds",20,o):h<40?s.formatDistance("halfAMinute",0,o):h<60?s.formatDistance("lessThanXMinutes",1,o):s.formatDistance("xMinutes",1,o):f===0?s.formatDistance("lessThanXMinutes",1,o):s.formatDistance("xMinutes",f,o);if(f<45)return s.formatDistance("xMinutes",f,o);if(f<90)return s.formatDistance("aboutXHours",1,o);if(f<yf){const m=Math.round(f/60);return s.formatDistance("aboutXHours",m,o)}else{if(f<a)return s.formatDistance("xDays",1,o);if(f<Wa){const m=Math.round(f/yf);return s.formatDistance("xDays",m,o)}else if(f<Wa*2)return g=Math.round(f/Wa),s.formatDistance("aboutXMonths",g,o)}if(g=vj(c,u),g<12){const m=Math.round(f/Wa);return s.formatDistance("xMonths",m,o)}else{const m=g%12,v=Math.trunc(g/12);return m<3?s.formatDistance("aboutXYears",v,o):m<9?s.formatDistance("overXYears",v,o):s.formatDistance("almostXYears",v+1,o)}}function En(e,t){return w2(e,dj(e),t)}function j2(e,t){const r=k2(e);let s;if(r.date){const u=C2(r.date,2);s=E2(u.restDateString,u.year)}if(!s||isNaN(s.getTime()))return new Date(NaN);const a=s.getTime();let l=0,o;if(r.time&&(l=P2(r.time),isNaN(l)))return new Date(NaN);if(r.timezone){if(o=R2(r.timezone),isNaN(o))return new Date(NaN)}else{const u=new Date(a+l),c=new Date(0);return c.setFullYear(u.getUTCFullYear(),u.getUTCMonth(),u.getUTCDate()),c.setHours(u.getUTCHours(),u.getUTCMinutes(),u.getUTCSeconds(),u.getUTCMilliseconds()),c}return new Date(a+l+o)}const Qa={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},N2=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,b2=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,S2=/^([+-])(\d{2})(?::?(\d{2}))?$/;function k2(e){const t={},n=e.split(Qa.dateTimeDelimiter);let r;if(n.length>2)return t;if(/:/.test(n[0])?r=n[0]:(t.date=n[0],r=n[1],Qa.timeZoneDelimiter.test(t.date)&&(t.date=e.split(Qa.timeZoneDelimiter)[0],r=e.substr(t.date.length,e.length))),r){const s=Qa.timezone.exec(r);s?(t.time=r.replace(s[1],""),t.timezone=s[1]):t.time=r}return t}function C2(e,t){const n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),r=e.match(n);if(!r)return{year:NaN,restDateString:""};const s=r[1]?parseInt(r[1]):null,a=r[2]?parseInt(r[2]):null;return{year:a===null?s:a*100,restDateString:e.slice((r[1]||r[2]).length)}}function E2(e,t){if(t===null)return new Date(NaN);const n=e.match(N2);if(!n)return new Date(NaN);const r=!!n[4],s=bs(n[1]),a=bs(n[2])-1,l=bs(n[3]),o=bs(n[4]),u=bs(n[5])-1;if(r)return M2(t,o,u)?O2(t,o,u):new Date(NaN);{const c=new Date(0);return!D2(t,a,l)||!_2(t,s)?new Date(NaN):(c.setUTCFullYear(t,a,Math.max(s,l)),c)}}function bs(e){return e?parseInt(e):1}function P2(e){const t=e.match(b2);if(!t)return NaN;const n=Yl(t[1]),r=Yl(t[2]),s=Yl(t[3]);return F2(n,r,s)?n*rg+r*ng+s*1e3:NaN}function Yl(e){return e&&parseFloat(e.replace(",","."))||0}function R2(e){if(e==="Z")return 0;const t=e.match(S2);if(!t)return 0;const n=t[1]==="+"?-1:1,r=parseInt(t[2]),s=t[3]&&parseInt(t[3])||0;return L2(r,s)?n*(r*rg+s*ng):NaN}function O2(e,t,n){const r=new Date(0);r.setUTCFullYear(e,0,4);const s=r.getUTCDay()||7,a=(t-1)*7+n+1-s;return r.setUTCDate(r.getUTCDate()+a),r}const T2=[31,null,31,30,31,30,31,31,30,31,30,31];function ug(e){return e%400===0||e%4===0&&e%100!==0}function D2(e,t,n){return t>=0&&t<=11&&n>=1&&n<=(T2[t]||(ug(e)?29:28))}function _2(e,t){return t>=1&&t<=(ug(e)?366:365)}function M2(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}function F2(e,t,n){return e===24?t===0&&n===0:n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}function L2(e,t){return t>=0&&t<=59}function bf({icon:e,text:t,onClick:n}){return i.jsxs("button",{className:"flex items-center",onClick:n,children:[i.jsx("span",{className:"mr-1",children:e}),i.jsx("span",{className:"hidden sm:inline",children:t})]})}const cg=({post:e})=>{var C,O;const{postId:t}=mc(),{data:n}=G({queryKey:["authUser"]}),[r,s]=N.useState(!1),[a,l]=N.useState(""),[o,u]=N.useState(e.comments||[]),c=n._id===e.author._id,h=e.likes.includes(n._id),d=Ne(),{mutate:f,isPending:g}=K({mutationFn:async()=>{await L.delete(`/posts/delete/${e._id}`)},onSuccess:()=>{d.invalidateQueries({queryKey:["posts"]}),M.success("Post borrado")},onError:k=>{M.error(k.message)}}),{mutate:m,isPending:v}=K({mutationFn:async k=>{await L.post(`/posts/${e._id}/comment`,{content:k})},onSuccess:()=>{d.invalidateQueries({queryKey:["posts"]}),M.success("Comentario añadido")},onError:k=>{M.error(k.response.data.message||"Fallo al añadir el comentario")}}),{mutate:j,isPending:p}=K({mutationFn:async()=>{await L.post(`/posts/${e._id}/like`)},onSuccess:()=>{d.invalidateQueries({queryKey:["posts"]}),d.invalidateQueries({queryKey:["post",t]})}}),y=()=>{window.confirm("¿Estas seguro de que quieres borrar este post?")&&f()},x=async()=>{p||j()},b=async k=>{k.preventDefault(),a.trim()&&(m(a),l(""),u([...o,{content:a,user:{_id:n._id,name:n.name,profilePicture:n.profilePicture},createdAt:new Date}]))};return i.jsxs("div",{className:"bg-secondary rounded-lg shadow mb-4",children:[i.jsxs("div",{className:"p-4",children:[i.jsxs("div",{className:"flex items-center justify-between mb-4",children:[i.jsxs("div",{className:"flex items-center",children:[i.jsx(U,{to:`/profile/${(C=e==null?void 0:e.author)==null?void 0:C.username}`,children:i.jsx("img",{src:e.author.profilePicture||"/avatar.png",alt:e.author.name,className:"size-10 rounded-full mr-3"})}),i.jsxs("div",{children:[i.jsx(U,{to:`/profile/${(O=e==null?void 0:e.author)==null?void 0:O.username}`,children:i.jsx("h3",{className:"font-semibold",children:e.author.name})}),i.jsx("p",{className:"text-xs text-info",children:e.author.headline}),i.jsx("p",{className:"text-xs text-info",children:En(new Date(e.createdAt),{addSuffix:!0})})]})]}),c&&i.jsx("button",{onClick:y,className:"text-red-500 hover:text-red-700",children:g?i.jsx(Ae,{size:18,className:"animate-spin"}):i.jsx(va,{size:18})})]}),i.jsx("p",{className:"mb-4",children:e.content}),e.image&&i.jsx("img",{src:e.image,alt:"Post content",className:"rounded-lg w-full mb-4"}),i.jsxs("div",{className:"flex justify-between text-info",children:[i.jsx(bf,{icon:i.jsx(fw,{size:18,className:h?"text-blue-500  fill-blue-300":""}),text:`Votos positivos (${e.likes.length})`,onClick:x}),i.jsx(bf,{icon:i.jsx(lw,{size:18}),text:`Comentarios (${o.length})`,onClick:()=>s(!r)})]})]}),r&&i.jsxs("div",{className:"px-4 pb-4",children:[i.jsx("div",{className:"mb-4 max-h-60 overflow-y-auto",children:o.map(k=>i.jsxs("div",{className:"mb-2 bg-base-100 p-2 rounded flex items-start",children:[i.jsx("img",{src:k.user.profilePicture||"/avatar.png",alt:k.user.name,className:"w-8 h-8 rounded-full mr-2 flex-shrink-0"}),i.jsxs("div",{className:"flex-grow",children:[i.jsxs("div",{className:"flex items-center mb-1",children:[i.jsx("span",{className:"font-semibold mr-2",children:k.user.name}),i.jsx("span",{className:"text-xs text-info",children:En(new Date(k.createdAt))})]}),i.jsx("p",{children:k.content})]})]},k._id))}),i.jsxs("form",{onSubmit:b,className:"flex items-center",children:[i.jsx("input",{type:"text",value:a,onChange:k=>l(k.target.value),placeholder:"Add a comment...",className:"flex-grow p-2 rounded-l-full bg-base-100 focus:outline-none focus:ring-2 focus:ring-primary"}),i.jsx("button",{type:"submit",className:"bg-primary text-white p-2 rounded-r-full hover:bg-primary-dark transition duration-300",disabled:v,children:v?i.jsx(Ae,{size:18,className:"animate-spin"}):i.jsx(cw,{size:18})})]})]})]})},dg=({user:e})=>{const t=Ne(),{data:n,isLoading:r}=G({queryKey:["connectionStatus",e._id],queryFn:()=>L.get(`/connections/status/${e._id}`)}),{mutate:s}=K({mutationFn:c=>L.post(`/connections/request/${c}`),onSuccess:()=>{M.success("Solicitud enviada"),t.invalidateQueries({queryKey:["connectionStatus",e._id]})},onError:c=>{var h,d;M.error(((d=(h=c.response)==null?void 0:h.data)==null?void 0:d.error)||"Ocurrio un problema")}}),{mutate:a}=K({mutationFn:c=>L.put(`/connections/accept/${c}`),onSuccess:()=>{M.success("Conexión aceptada"),t.invalidateQueries({queryKey:["connectionStatus",e._id]})},onError:c=>{var h,d;M.error(((d=(h=c.response)==null?void 0:h.data)==null?void 0:d.error)||"Ocurrio un problema")}}),{mutate:l}=K({mutationFn:c=>L.put(`/connections/reject/${c}`),onSuccess:()=>{M.success("Conexión rechazada"),t.invalidateQueries({queryKey:["connectionStatus",e._id]})},onError:c=>{var h,d;M.error(((d=(h=c.response)==null?void 0:h.data)==null?void 0:d.error)||"ocurrio un problema")}}),o=()=>{var c;if(r)return i.jsx("button",{className:"px-3 py-1 rounded-full text-sm bg-gray-200 text-gray-500",disabled:!0,children:"Loading..."});switch((c=n==null?void 0:n.data)==null?void 0:c.status){case"pending":return i.jsxs("button",{className:"px-3 py-1 rounded-full text-xs bg-yellow-500 text-white flex items-center",disabled:!0,children:[i.jsx(fl,{size:14,className:"mr-1"}),"Pendiente"]});case"received":return i.jsxs("div",{className:"flex gap-2 justify-center",children:[i.jsx("button",{onClick:()=>a(n.data.requestId),className:"rounded-full p-1 flex items-center justify-center bg-green-500 hover:bg-green-600 text-white",children:i.jsx(ew,{size:16})}),i.jsx("button",{onClick:()=>l(n.data.requestId),className:"rounded-full p-1 flex items-center justify-center bg-red-500 hover:bg-red-600 text-white",children:i.jsx(hr,{size:16})})]});case"connected":return i.jsxs("button",{className:"px-3 py-1 rounded-full text-sm bg-green-500 text-white flex items-center",disabled:!0,children:[i.jsx(Xp,{size:15,className:"mr-1"}),"conectado"]});default:return i.jsxs("button",{className:"px-1 py-1 rounded-full text-sm border border-primary text-xs hover:bg-primary hover:text-white transition-colors duration-200 flex items-center",onClick:u,children:[i.jsx(On,{size:14,className:"mr-1"}),"Hacer conexión"]})}},u=()=>{var c;((c=n==null?void 0:n.data)==null?void 0:c.status)==="not_connected"&&s(e._id)};return i.jsxs("div",{className:"flex items-center justify-between mb-4",children:[i.jsxs(U,{to:`/profile/${e.username}`,className:"flex items-center flex-grow",children:[i.jsx("img",{src:e.profilePicture||"/avatar.png",alt:e.name,className:"w-12 h-12 rounded-full mr-3"}),i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold text-sm",children:e.name}),i.jsx("p",{className:"text-xs text-info",children:e.headline})]})]}),o()]})},z2=()=>{const{data:e}=G({queryKey:["authUser"]}),{data:t}=G({queryKey:["recommendedUsers"],queryFn:async()=>(await L.get("/users/suggestions?limit=5")).data}),{data:n}=G({queryKey:["posts"],queryFn:async()=>(await L.get("/posts")).data});return console.log("posts",n),i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"hidden lg:block lg:col-span-1",children:i.jsx(Tn,{user:e})}),i.jsxs("div",{className:"col-span-1 lg:col-span-2 order-first lg:order-none",children:[i.jsx(ij,{user:e}),n==null?void 0:n.map(r=>i.jsx(cg,{post:r},r._id)),(n==null?void 0:n.length)===0&&i.jsxs("div",{className:"bg-white rounded-lg shadow p-8 text-center",children:[i.jsx("div",{className:"mb-6",children:i.jsx(Vn,{size:64,className:"mx-auto text-blue-500"})}),i.jsx("h2",{className:"text-2xl font-bold mb-4 text-gray-800",children:"No hay publicaciones todavía"}),i.jsx("p",{className:"text-gray-600 mb-6",children:"Añade personas a tus contactos para porder ver sus posts"})]})]}),(t==null?void 0:t.length)>0&&i.jsx("div",{className:"col-span-1 lg:col-span-1 hidden lg:block",children:i.jsxs("div",{className:"bg-secondary rounded-lg shadow p-4",children:[i.jsx("h2",{className:"font-semibold mb-4",children:"Personas que quiza conozcas"}),t==null?void 0:t.map(r=>i.jsx(dg,{user:r},r._id))]})})]})},A2=()=>{const[e,t]=N.useState(""),[n,r]=N.useState(""),s=Ne(),{mutate:a,isLoading:l}=K({mutationFn:u=>L.post("/auth/login",u),onSuccess:u=>{u.data&&u.data.isFirstLogin!==void 0?s.invalidateQueries({queryKey:["authUser"],updater:c=>c&&{...c,isFirstLogin:u.data.isFirstLogin}}):s.invalidateQueries({queryKey:["authUser"]})},onError:u=>{M.error(u.response.data.message||"Something went wrong")}}),o=u=>{u.preventDefault(),a({username:e,password:n})};return i.jsxs("form",{onSubmit:o,className:"space-y-4 w-full max-w-md",children:[i.jsx("input",{type:"text",placeholder:"Usuario",value:e,onChange:u=>t(u.target.value),className:"input input-bordered w-full",required:!0}),i.jsx("input",{type:"password",placeholder:"Contraseña",value:n,onChange:u=>r(u.target.value),className:"input input-bordered w-full",required:!0}),i.jsx("button",{type:"submit",className:"btn btn-primary w-full",children:l?i.jsx(Ae,{className:"size-5 animate-spin"}):"Entrar"})]})},I2=()=>i.jsxs("div",{className:"min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8",children:[i.jsxs("div",{className:"sm:mx-auto sm:w-full sm:max-w-md",children:[i.jsx("img",{className:"mx-auto h-40 w-auto",src:"/logo redondo.png",alt:"LinkedIn"}),i.jsx("h2",{className:" text-center text-3xl font-extrabold text-gray-900",children:"Iniciar sesión"})]}),i.jsx("div",{className:"mt-8 sm:mx-auto sm:w-full sm:max-w-md shadow-md",children:i.jsxs("div",{className:"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10",children:[i.jsx(A2,{}),i.jsxs("div",{className:"mt-6",children:[i.jsxs("div",{className:"relative",children:[i.jsx("div",{className:"absolute inset-0 flex items-center",children:i.jsx("div",{className:"w-full border-t border-gray-300"})}),i.jsx("div",{className:"relative flex justify-center text-sm",children:i.jsx("span",{className:"px-2 bg-white text-gray-500",children:"¿Aun no tienes una cuenta?"})})]}),i.jsx("div",{className:"mt-6",children:i.jsx(U,{to:"/signup",className:"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-blue-600 bg-white hover:bg-gray-50",children:"Registrate"})})]})]})})]}),U2=()=>{const e=hc(),[t,n]=N.useState({name:"",username:"",email:"",studentId:"",password:"",confirmPassword:""}),[r,s]=N.useState(!1),a=o=>{const{name:u,value:c}=o.target;if(u==="studentId")if(/^\d{8}$/.test(c)){const h=`L${c}@tuxtla.tecnm.mx`;n({...t,studentId:c,email:h})}else n({...t,studentId:c});else n({...t,[u]:c})},l=async o=>{var c,h;if(o.preventDefault(),t.password!==t.confirmPassword){ne.error("Las contraseñas no coinciden");return}if(!/^\d{8}$/.test(t.studentId)){ne.error("ID de estudiante inválido. Debe ser un número de 8 dígitos.");return}const u=`L${t.studentId}@tuxtla.tecnm.mx`;if(t.email!==u){ne.error("El correo institucional debe coincidir con tu ID de estudiante");return}try{s(!0);const{confirmPassword:d,...f}=t,g=await ye.post("http://localhost:5000/api/v1/auth/signup",f);ne.success(g.data.message||"Registro exitoso"),e("/login")}catch(d){ne.error(((h=(c=d.response)==null?void 0:c.data)==null?void 0:h.message)||"Error al registrarse")}finally{s(!1)}};return i.jsxs("form",{onSubmit:l,className:"space-y-4",children:[i.jsxs("div",{children:[i.jsx("label",{className:"label",children:"Nombre completo"}),i.jsx("input",{type:"text",name:"name",value:t.name,onChange:a,className:"input input-bordered w-full",required:!0})]}),i.jsxs("div",{children:[i.jsx("label",{className:"label",children:"Nombre de usuario"}),i.jsx("input",{type:"text",name:"username",value:t.username,onChange:a,className:"input input-bordered w-full",required:!0})]}),i.jsxs("div",{children:[i.jsx("label",{className:"label",children:"ID de Estudiante (8 dígitos)"}),i.jsx("input",{type:"text",name:"studentId",value:t.studentId,onChange:a,className:"input input-bordered w-full",placeholder:"Ejemplo: 20270806",required:!0})]}),i.jsxs("div",{children:[i.jsx("label",{className:"label",children:"Correo Institucional"}),i.jsx("input",{type:"email",name:"email",value:t.email,className:"input input-bordered w-full",readOnly:!0,required:!0}),i.jsx("p",{className:"text-xs text-gray-500 mt-1",children:"El correo se genera automáticamente a partir de tu ID de estudiante"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"label",children:"Contraseña"}),i.jsx("input",{type:"password",name:"password",value:t.password,onChange:a,className:"input input-bordered w-full",required:!0,minLength:6})]}),i.jsxs("div",{children:[i.jsx("label",{className:"label",children:"Confirmar Contraseña"}),i.jsx("input",{type:"password",name:"confirmPassword",value:t.confirmPassword,onChange:a,className:"input input-bordered w-full",required:!0,minLength:6})]}),i.jsx("button",{type:"submit",className:"btn btn-primary w-full",disabled:r,children:r?"Registrando...":"Registrarse"})]})},$2=()=>i.jsxs("div",{className:"min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8",children:[i.jsxs("div",{className:"sm:mx-auto sm:w-full sm:max-w-md",children:[i.jsx("img",{className:"mx-auto h-40 w-auto",src:"/logo redondo.png",alt:"ITTG"}),i.jsx("h2",{className:"text-center text-3xl font-extrabold text-gray-900",children:"Crea conexiones para tu vida profesional"})]}),i.jsx("div",{className:"mt-8 sm:mx-auto sm:w-full sm:max-w-md shadow-md",children:i.jsxs("div",{className:"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10",children:[i.jsx(U2,{}),i.jsxs("div",{className:"mt-6",children:[i.jsxs("div",{className:"relative",children:[i.jsx("div",{className:"absolute inset-0 flex items-center",children:i.jsx("div",{className:"w-full border-t border-gray-300"})}),i.jsx("div",{className:"relative flex justify-center text-sm",children:i.jsx("span",{className:"px-2 bg-white text-gray-500",children:"¿Ya tienes una cuenta?"})})]}),i.jsx("div",{className:"mt-6",children:i.jsx(U,{to:"/login",className:"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-blue-600 bg-white hover:bg-gray-50",children:"Iniciar sesion"})})]})]})})]}),q2=()=>{const{data:e}=G({queryKey:["authUser"]}),t=Ne(),{data:n,isLoading:r}=G({queryKey:["notifications"],queryFn:()=>L.get("/notifications")}),{mutate:s}=K({mutationFn:c=>L.put(`/notifications/${c}/read`),onSuccess:()=>{t.invalidateQueries(["notifications"])}}),{mutate:a}=K({mutationFn:c=>L.delete(`/notifications/${c}`),onSuccess:()=>{t.invalidateQueries(["notifications"]),ne.success("Notificación eliminada")}}),l=c=>{switch(c){case"like":case"projectLike":return i.jsx(Gp,{className:"text-blue-500"});case"comment":case"projectComment":return i.jsx(Vp,{className:"text-green-500"});case"connectionAccepted":return i.jsx(On,{className:"text-purple-500"});case"projectInterest":return i.jsx(Cc,{className:"text-yellow-500"});case"projectExpired":return i.jsx(fl,{className:"text-red-500"});default:return null}},o=c=>{switch(c.type){case"like":return i.jsxs("span",{children:[i.jsx(U,{to:`/profile/${c.relatedUser.username}`,className:"font-bold",children:c.relatedUser.name})," ","dio me gusta a tu post"]});case"comment":return i.jsxs("span",{children:[i.jsx(U,{to:`/profile/${c.relatedUser.username}`,className:"font-bold",children:c.relatedUser.name})," ","comentó en tu post"]});case"connectionAccepted":return i.jsxs("span",{children:[i.jsx(U,{to:`/profile/${c.relatedUser.username}`,className:"font-bold",children:c.relatedUser.name})," ","aceptó tu solicitud de conexión"]});case"projectInterest":return i.jsxs("span",{children:[i.jsx(U,{to:`/profile/${c.relatedUser.username}`,className:"font-bold",children:c.relatedUser.name})," ","mostró interés en tu proyecto"]});case"projectComment":return i.jsxs("span",{children:[i.jsx(U,{to:`/profile/${c.relatedUser.username}`,className:"font-bold",children:c.relatedUser.name})," ","comentó en tu proyecto"]});case"projectLike":return i.jsxs("span",{children:[i.jsx(U,{to:`/profile/${c.relatedUser.username}`,className:"font-bold",children:c.relatedUser.name})," ","le dio me gusta a tu proyecto"]});case"projectExpired":return i.jsx("span",{children:"Tu proyecto ha expirado"});default:return null}},u=c=>c.relatedProject?i.jsxs(U,{to:"/projects",className:"mt-2 p-2 bg-gray-50 rounded-md flex items-center space-x-2 hover:bg-gray-100 transition-colors",children:[i.jsx(wt,{size:16,className:"text-gray-500"}),i.jsx("div",{className:"flex-1 overflow-hidden",children:i.jsx("p",{className:"text-sm text-gray-600 truncate",children:"Ver proyecto"})}),i.jsx(mf,{size:14,className:"text-gray-400"})]}):c.relatedPost?i.jsxs(U,{to:`/post/${c.relatedPost._id}`,className:"mt-2 p-2 bg-gray-50 rounded-md flex items-center space-x-2 hover:bg-gray-100 transition-colors",children:[c.relatedPost.image&&i.jsx("img",{src:c.relatedPost.image,alt:"Post preview",className:"w-10 h-10 object-cover rounded"}),i.jsx("div",{className:"flex-1 overflow-hidden",children:i.jsx("p",{className:"text-sm text-gray-600 truncate",children:c.relatedPost.content})}),i.jsx(mf,{size:14,className:"text-gray-400"})]}):null;return i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"col-span-1 lg:col-span-1",children:i.jsx(Tn,{user:e})}),i.jsx("div",{className:"col-span-1 lg:col-span-3",children:i.jsxs("div",{className:"bg-white rounded-lg shadow p-6",children:[i.jsx("h1",{className:"text-2xl font-bold mb-6",children:"Notificaciones"}),r?i.jsx("p",{children:"Cargando notificaciones..."}):n&&n.data.length>0?i.jsx("ul",{children:n.data.map(c=>i.jsx("li",{className:`bg-white border rounded-lg p-4 my-4 transition-all hover:shadow-md ${c.read?"border-gray-200":"border-blue-500"}`,children:i.jsxs("div",{className:"flex items-start justify-between",children:[i.jsxs("div",{className:"flex items-center space-x-4",children:[c.relatedUser&&i.jsx(U,{to:`/profile/${c.relatedUser.username}`,children:i.jsx("img",{src:c.relatedUser.profilePicture||"/avatar.png",alt:c.relatedUser.name,className:"w-12 h-12 rounded-full object-cover"})}),i.jsxs("div",{children:[i.jsxs("div",{className:"flex items-center gap-2",children:[i.jsx("div",{className:"p-1 bg-gray-100 rounded-full",children:l(c.type)}),i.jsx("p",{className:"text-sm",children:o(c)})]}),i.jsx("p",{className:"text-xs text-gray-500 mt-1",children:En(new Date(c.createdAt),{addSuffix:!0})}),u(c)]})]}),i.jsxs("div",{className:"flex gap-2",children:[!c.read&&i.jsx("button",{onClick:()=>s(c._id),className:"p-1 bg-blue-100 text-blue-600 rounded hover:bg-blue-200 transition-colors","aria-label":"Mark as read",children:i.jsx(rw,{size:16})}),i.jsx("button",{onClick:()=>a(c._id),className:"p-1 bg-red-100 text-red-600 rounded hover:bg-red-200 transition-colors","aria-label":"Delete notification",children:i.jsx(va,{size:16})})]})]})},c._id))}):i.jsx("p",{children:"No hay notificaciones por el momento"})]})})]})},B2=({request:e})=>{const t=Ne(),{mutate:n}=K({mutationFn:s=>L.put(`/connections/accept/${s}`),onSuccess:()=>{M.success("solicitud de conexión aceptada"),t.invalidateQueries({queryKey:["connectionRequests"]})},onError:s=>{M.error(s.response.data.error)}}),{mutate:r}=K({mutationFn:s=>L.put(`/connections/reject/${s}`),onSuccess:()=>{M.success("Solicitud de conexión rechazada"),t.invalidateQueries({queryKey:["connectionRequests"]})},onError:s=>{M.error(s.response.data.error)}});return i.jsxs("div",{className:"bg-white rounded-lg shadow p-4 flex items-center justify-between transition-all hover:shadow-md",children:[i.jsxs("div",{className:"flex items-center gap-4",children:[i.jsx(U,{to:`/profile/${e.sender.username}`,children:i.jsx("img",{src:e.sender.profilePicture||"/avatar.png",alt:e.name,className:"w-16 h-16 rounded-full object-cover"})}),i.jsxs("div",{children:[i.jsx(U,{to:`/profile/${e.sender.username}`,className:"font-semibold text-lg",children:e.sender.name}),i.jsx("p",{className:"text-gray-600",children:e.sender.headline})]})]}),i.jsxs("div",{className:"space-x-2",children:[i.jsx("button",{className:"bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors",onClick:()=>n(e._id),children:"Aceptar"}),i.jsx("button",{className:"bg-gray-200 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-300 transition-colors",onClick:()=>r(e._id),children:"Rechazar"})]})]})};function W2({user:e,isConnection:t}){var n;return i.jsxs("div",{className:"bg-white rounded-lg shadow p-4 flex flex-col items-center transition-all hover:shadow-md",children:[i.jsxs(U,{to:`/profile/${e.username}`,className:"flex flex-col items-center",children:[i.jsx("img",{src:e.profilePicture||"/avatar.png",alt:e.name,className:"w-24 h-24 rounded-full object-cover mb-4"}),i.jsx("h3",{className:"font-semibold text-lg text-center",children:e.name})]}),i.jsx("p",{className:"text-gray-600 text-center",children:e.headline}),i.jsxs("p",{className:"text-sm text-gray-500 mt-2",children:[(n=e.connections)==null?void 0:n.length," conexiones"]}),i.jsx("button",{className:"mt-4 bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors w-full",children:t?"Conectados":"Connect"})]})}const Q2=()=>{var l,o;const{data:e}=G({queryKey:["authUser"]}),{data:t}=G({queryKey:["connectionRequests"],queryFn:()=>L.get("/connections/requests")}),{data:n}=G({queryKey:["connections"],queryFn:()=>L.get("/connections")}),{data:r}=G({queryKey:["recommendedUsersBig"],queryFn:async()=>(await L.get("/users/suggestions?limit=50")).data}),[s,a]=N.useState("");return r&&r.filter(u=>u&&u.name&&u.name.toLowerCase().includes(s.toLowerCase())||u&&u.username&&u.username.toLowerCase().includes(s.toLowerCase())),i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"col-span-1 lg:col-span-1",children:i.jsx(Tn,{user:e})}),i.jsx("div",{className:"col-span-1 lg:col-span-3",children:i.jsxs("div",{className:"bg-secondary rounded-lg shadow p-6 mb-6",children:[i.jsx("h1",{className:"text-2xl font-bold mb-6",children:"Mis contactos"}),((l=t==null?void 0:t.data)==null?void 0:l.length)>0?i.jsxs("div",{className:"mb-8",children:[i.jsx("h2",{className:"text-xl font-semibold mb-2",children:"Solicitudes de conexión."}),i.jsx("div",{className:"space-y-4",children:t.data.map(u=>i.jsx(B2,{request:u},u.id))})]}):i.jsxs("div",{className:"bg-white rounded-lg shadow p-6 text-center mb-6",children:[i.jsx(On,{size:48,className:"mx-auto text-gray-400 mb-4"}),i.jsx("h3",{className:"text-xl font-semibold mb-2",children:"No hay solicitudes de conexión"}),i.jsx("p",{className:"text-gray-600",children:"No tienes solicitudes de conexión por el momento."}),i.jsx("p",{className:"text-gray-600 mt-2",children:"Explora sugerencias de conexión abajo para expandir tus contactos!"})]}),((o=n==null?void 0:n.data)==null?void 0:o.length)>0&&i.jsxs("div",{className:"mb-8",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Mis conexiones"}),i.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:n.data.map(u=>i.jsx(W2,{user:u,isConnection:!0},u._id))})]}),(r==null?void 0:r.length)>0&&i.jsxs("div",{className:"mb-8",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Sugerencias de Conexión"}),i.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:r.map(u=>i.jsx(dg,{user:u},u._id))})]})]})})]})},H2=()=>{const{postId:e}=mc(),{data:t}=G({queryKey:["authUser"]}),{data:n,isLoading:r}=G({queryKey:["post",e],queryFn:()=>L.get(`/posts/${e}`)});return r?i.jsx("div",{children:"Cargando Post..."}):n!=null&&n.data?i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"hidden lg:block lg:col-span-1",children:i.jsx(Tn,{user:t})}),i.jsx("div",{className:"col-span-1 lg:col-span-3",children:i.jsx(cg,{post:n.data})})]}):i.jsx("div",{children:"Post not foundno encontrado"})},V2=({userData:e,onSave:t,isOwnProfile:n})=>{var O;const[r,s]=N.useState(!1),[a,l]=N.useState({}),o=Ne(),{data:u}=G({queryKey:["authUser"]}),{data:c,refetch:h}=G({queryKey:["connectionStatus",e._id],queryFn:()=>L.get(`/connections/status/${e._id}`),enabled:!n}),d=e.connections.some(k=>k===u._id),{mutate:f}=K({mutationFn:k=>L.post(`/connections/request/${k}`),onSuccess:()=>{ne.success("Connection request sent"),h(),o.invalidateQueries(["connectionRequests"])},onError:k=>{var E,F;ne.error(((F=(E=k.response)==null?void 0:E.data)==null?void 0:F.message)||"An error occurred")}}),{mutate:g}=K({mutationFn:k=>L.put(`/connections/accept/${k}`),onSuccess:()=>{ne.success("Connection request accepted"),h(),o.invalidateQueries(["connectionRequests"])},onError:k=>{var E,F;ne.error(((F=(E=k.response)==null?void 0:E.data)==null?void 0:F.message)||"An error occurred")}}),{mutate:m}=K({mutationFn:k=>L.put(`/connections/reject/${k}`),onSuccess:()=>{ne.success("Connection request rejected"),h(),o.invalidateQueries(["connectionRequests"])},onError:k=>{var E,F;ne.error(((F=(E=k.response)==null?void 0:E.data)==null?void 0:F.message)||"An error occurred")}}),{mutate:v}=K({mutationFn:k=>L.delete(`/connections/${k}`),onSuccess:()=>{ne.success("Connection removed"),h(),o.invalidateQueries(["connectionRequests"])},onError:k=>{var E,F;ne.error(((F=(E=k.response)==null?void 0:E.data)==null?void 0:F.message)||"An error occurred")}}),j=N.useMemo(()=>{var k;return d?"connected":d?(k=c==null?void 0:c.data)==null?void 0:k.status:"not_connected"},[d,c]),p=()=>{const k="text-white py-2 px-4 rounded-full transition duration-300 flex items-center justify-center";switch(j){case"connected":return i.jsxs("div",{className:"flex gap-2 justify-center",children:[i.jsxs("div",{className:`${k} bg-green-500 hover:bg-green-600`,children:[i.jsx(Xp,{size:20,className:"mr-2"}),"Conectado"]}),i.jsxs("button",{className:`${k} bg-red-500 hover:bg-red-600 text-sm`,onClick:()=>v(e._id),children:[i.jsx(hr,{size:20,className:"mr-2"}),"Cancelar conexión"]})]});case"pending":return i.jsxs("button",{className:`${k} bg-yellow-500 hover:bg-yellow-600`,children:[i.jsx(fl,{size:20,className:"mr-2"}),"Pendiente"]});case"received":return i.jsxs("div",{className:"flex gap-2 justify-center",children:[i.jsx("button",{onClick:()=>g(c.data.requestId),className:`${k} bg-green-500 hover:bg-green-600`,children:"Aceptar"}),i.jsx("button",{onClick:()=>m(c.data.requestId),className:`${k} bg-red-500 hover:bg-red-600`,children:"Rechazar"})]});default:return i.jsxs("button",{onClick:()=>f(e._id),className:"bg-primary hover:bg-primary-dark text-white py-2 px-4 rounded-full transition duration-300 flex items-center justify-center",children:[i.jsx(On,{size:20,className:"mr-2"}),"Conectar"]})}},y=k=>{const E=k.target.files[0];if(E){const F=new FileReader;F.onloadend=()=>{const I=k.target.name;if(I==="curriculumImg"&&E.type!=="application/pdf"){ne.error("Por favor sube un archivo PDF");return}l(oe=>({...oe,[I]:F.result}))},F.readAsDataURL(E)}},x=()=>{console.log("Saving data:",a),t(a),s(!1)},b=()=>{switch(e.role){case"empresario":return"bg-green-100 text-green-800";case"administrador":return"bg-purple-100 text-purple-800";default:return"bg-blue-100 text-blue-800"}},C=()=>{switch(e.role){case"empresario":return"Empresario";case"administrador":return"Administrador";default:return"Egresado"}};return i.jsxs("div",{className:"bg-white shadow rounded-lg mb-6",children:[i.jsx("div",{className:"relative h-48 rounded-t-lg bg-cover bg-center",style:{backgroundImage:`url('${a.bannerImg||e.bannerImg||"/banner.png"}')`},children:r&&i.jsxs("label",{className:"absolute top-2 right-2 bg-white p-2 rounded-full shadow cursor-pointer",children:[i.jsx(hf,{size:20}),i.jsx("input",{type:"file",className:"hidden",name:"bannerImg",onChange:y,accept:"image/*"})]})}),i.jsxs("div",{className:"p-4",children:[i.jsx("div",{className:"relative -mt-20 mb-4",children:i.jsxs("div",{className:"relative",children:[i.jsx("img",{className:"w-32 h-32 rounded-full mx-auto object-cover",src:a.profilePicture||e.profilePicture||"/avatar.png",alt:e.name}),r&&i.jsxs("label",{className:"absolute bottom-0 right-1/2 transform translate-x-16 bg-white p-2 rounded-full shadow cursor-pointer",children:[i.jsx(hf,{size:20}),i.jsx("input",{type:"file",className:"hidden",name:"profilePicture",onChange:y,accept:"image/*"})]})]})}),i.jsxs("div",{className:"text-center mb-4",children:[r?i.jsx("input",{type:"text",value:a.name??e.name,onChange:k=>l({...a,name:k.target.value}),className:"text-2xl font-bold mb-2 text-center w-full"}):i.jsx("h1",{className:"text-2xl font-bold mb-2",children:e.name}),i.jsx("div",{className:"mt-1 mb-2",children:i.jsx("span",{className:`inline-block px-3 py-1 text-xs rounded-full ${b()}`,children:C()})}),r?i.jsx("input",{type:"text",value:a.headline??e.headline,onChange:k=>l({...a,headline:k.target.value}),className:"text-gray-600 text-center w-full"}):i.jsx("p",{className:"text-gray-600",children:e.role==="empresario"&&((O=e.companyInfo)!=null&&O.companyName)?`${e.companyInfo.companyName} · ${e.headline}`:e.headline}),i.jsxs("div",{className:"flex justify-center items-center mt-2",children:[i.jsx(kc,{size:16,className:"text-gray-500 mr-1"}),r?i.jsx("input",{type:"text",value:a.location??e.location,onChange:k=>l({...a,location:k.target.value}),className:"text-gray-600 text-center"}):i.jsx("span",{className:"text-gray-600",children:e.location})]})]}),n?r?i.jsx("button",{className:"w-full bg-primary text-white py-2 px-4 rounded-full hover:bg-primary-dark transition duration-300",onClick:x,children:"Guardar cambios"}):i.jsx("button",{onClick:()=>s(!0),className:"w-full bg-primary text-white py-2 px-4 rounded-full hover:bg-primary-dark transition duration-300",children:"Editar perfil"}):i.jsx("div",{className:"flex justify-center",children:p()})]}),i.jsxs("div",{className:"p-4 border-t",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4 text-center",children:"Curriculum"}),i.jsxs("div",{className:"max-w-md mx-auto",children:[i.jsxs("div",{className:"relative w-full h-32 rounded-lg border-2 border-gray-200 flex items-center justify-center bg-gray-50",children:[a.curriculumImg||e.curriculumImg?i.jsxs("div",{className:"text-center",children:[i.jsx(Vn,{size:32,className:"mx-auto mb-2 text-gray-600"}),i.jsxs("a",{href:a.curriculumImg||e.curriculumImg,target:"_blank",rel:"noopener noreferrer",className:"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full inline-flex items-center gap-2 transition-colors duration-200",children:[i.jsx("span",{children:"Ver Curriculum"}),i.jsx(Vn,{size:16})]})]}):i.jsxs("div",{className:"text-center text-gray-500",children:[i.jsx(Vn,{size:32,className:"mx-auto mb-2"}),i.jsx("p",{className:"text-sm",children:r?"Haz clic para subir PDF":"No hay curriculum"})]}),r&&i.jsxs("label",{className:"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 opacity-0 hover:opacity-100 transition-opacity duration-300 cursor-pointer rounded-lg",children:[i.jsx("div",{className:"bg-white p-2 rounded-full shadow",children:i.jsx(Vn,{size:20})}),i.jsx("input",{type:"file",className:"hidden",name:"curriculumImg",onChange:y,accept:"application/pdf"})]})]}),r&&i.jsx("p",{className:"text-center text-xs text-gray-500 mt-1",children:"Solo archivos PDF"})]})]})]})},K2=({userData:e,isOwnProfile:t,onSave:n})=>{const[r,s]=N.useState(!1),[a,l]=N.useState(e.about||""),o=()=>{s(!1),n({about:a})};return i.jsxs("div",{className:"bg-white shadow rounded-lg p-6 mb-6",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Acerca de mi"}),t&&i.jsx(i.Fragment,{children:r?i.jsxs(i.Fragment,{children:[i.jsx("textarea",{value:a,onChange:u=>l(u.target.value),className:"w-full p-2 border rounded",rows:"4"}),i.jsx("button",{onClick:o,className:`mt-2 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark 
								transition duration-300`,children:"Guardar"})]}):i.jsxs(i.Fragment,{children:[i.jsx("p",{children:e.about}),i.jsx("button",{onClick:()=>s(!0),className:"mt-2 text-primary hover:text-primary-dark transition duration-300",children:"Editar"})]})})]})},Sf=e=>{const t=j2(e);return ag(t)?x2(t,"MMM yyyy"):"Present"},Y2=({userData:e,isOwnProfile:t,onSave:n})=>{const[r,s]=N.useState(!1),[a,l]=N.useState(e.experience||[]),[o,u]=N.useState({title:"",company:"",startDate:"",endDate:"",description:"",currentlyWorking:!1}),c=()=>{o.title&&o.company&&o.startDate&&(l([...a,o]),u({title:"",company:"",startDate:"",endDate:"",description:"",currentlyWorking:!1}))},h=g=>{l(a.filter(m=>m._id!==g))},d=()=>{n({experience:a}),s(!1)},f=g=>{u({...o,currentlyWorking:g.target.checked,endDate:g.target.checked?"":o.endDate})};return i.jsxs("div",{className:"bg-white shadow rounded-lg p-6 mb-6",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Experiencia"}),a.map(g=>i.jsxs("div",{className:"mb-4 flex justify-between items-start",children:[i.jsxs("div",{className:"flex items-start",children:[i.jsx(wt,{size:20,className:"mr-2 mt-1"}),i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:g.title}),i.jsx("p",{className:"text-gray-600",children:g.company}),i.jsxs("p",{className:"text-gray-500 text-sm",children:[Sf(g.startDate)," - ",g.endDate?Sf(g.endDate):"presente"]}),i.jsx("p",{className:"text-gray-700",children:g.description})]})]}),r&&i.jsx("button",{onClick:()=>h(g._id),className:"text-red-500",children:i.jsx(hr,{size:20})})]},g._id)),r&&i.jsxs("div",{className:"mt-4",children:[i.jsx("input",{type:"text",placeholder:"Titulo",value:o.title,onChange:g=>u({...o,title:g.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("input",{type:"text",placeholder:"Compañia",value:o.company,onChange:g=>u({...o,company:g.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("input",{type:"date",placeholder:"Fecha de inicio",value:o.startDate,onChange:g=>u({...o,startDate:g.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsxs("div",{className:"flex items-center mb-2",children:[i.jsx("input",{type:"checkbox",id:"currentlyWorking",checked:o.currentlyWorking,onChange:f,className:"mr-2"}),i.jsx("label",{htmlFor:"currentlyWorking",children:"Sigo trabajando aquí"})]}),!o.currentlyWorking&&i.jsx("input",{type:"date",placeholder:"Fecha de terminación",value:o.endDate,onChange:g=>u({...o,endDate:g.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("textarea",{placeholder:"Descripción",value:o.description,onChange:g=>u({...o,description:g.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("button",{onClick:c,className:"bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300",children:"Añadir experiencia"})]}),t&&i.jsx(i.Fragment,{children:r?i.jsx("button",{onClick:d,className:"mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300",children:"Guardar cambios"}):i.jsx("button",{onClick:()=>s(!0),className:"mt-4 text-primary hover:text-primary-dark transition duration-300",children:"Editar experiencias"})})]})},G2=({userData:e,isOwnProfile:t,onSave:n})=>{const[r,s]=N.useState(!1),[a,l]=N.useState(e.education||[]),[o,u]=N.useState({school:"",fieldOfStudy:"",startYear:"",endYear:""}),c=()=>{o.school&&o.fieldOfStudy&&o.startYear&&(l([...a,o]),u({school:"",fieldOfStudy:"",startYear:"",endYear:""}))},h=f=>{l(a.filter(g=>g._id!==f))},d=()=>{n({education:a}),s(!1)};return i.jsxs("div",{className:"bg-white shadow rounded-lg p-6 mb-6",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Educación"}),a.map(f=>i.jsxs("div",{className:"mb-4 flex justify-between items-start",children:[i.jsxs("div",{className:"flex items-start",children:[i.jsx(uw,{size:20,className:"mr-2 mt-1"}),i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:f.fieldOfStudy}),i.jsx("p",{className:"text-gray-600",children:f.school}),i.jsxs("p",{className:"text-gray-500 text-sm",children:[f.startYear," - ",f.endYear||"Present"]})]})]}),r&&i.jsx("button",{onClick:()=>h(f._id),className:"text-red-500",children:i.jsx(hr,{size:20})})]},f._id)),r&&i.jsxs("div",{className:"mt-4",children:[i.jsx("input",{type:"text",placeholder:"Escuela",value:o.school,onChange:f=>u({...o,school:f.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("input",{type:"text",placeholder:"Especialidad",value:o.fieldOfStudy,onChange:f=>u({...o,fieldOfStudy:f.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("input",{type:"number",placeholder:"Año de ingreso.",value:o.startYear,onChange:f=>u({...o,startYear:f.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("input",{type:"number",placeholder:"Fin del año.",value:o.endYear,onChange:f=>u({...o,endYear:f.target.value}),className:"w-full p-2 border rounded mb-2"}),i.jsx("button",{onClick:c,className:"bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300",children:"Añadir educación"})]}),t&&i.jsx(i.Fragment,{children:r?i.jsx("button",{onClick:d,className:`mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark
							 transition duration-300`,children:"Guardar cambios"}):i.jsx("button",{onClick:()=>s(!0),className:"mt-4 text-primary hover:text-primary-dark transition duration-300",children:"Editar educación"})})]})},X2=({userData:e,isOwnProfile:t,onSave:n})=>{const[r,s]=N.useState(!1),[a,l]=N.useState(e.skills||[]),[o,u]=N.useState(""),c=()=>{o&&!a.includes(o)&&(l([...a,o]),u(""))},h=f=>{l(a.filter(g=>g!==f))},d=()=>{n({skills:a}),s(!1)};return i.jsxs("div",{className:"bg-white shadow rounded-lg p-6",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Habilidades"}),i.jsx("div",{className:"flex flex-wrap",children:a.map((f,g)=>i.jsxs("span",{className:"bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm mr-2 mb-2 flex items-center",children:[f,r&&i.jsx("button",{onClick:()=>h(f),className:"ml-2 text-red-500",children:i.jsx(hr,{size:14})})]},g))}),r&&i.jsxs("div",{className:"mt-4 flex",children:[i.jsx("input",{type:"text",placeholder:"Nueva habilidad",value:o,onChange:f=>u(f.target.value),className:"flex-grow p-2 border rounded-l"}),i.jsx("button",{onClick:c,className:"bg-primary text-white py-2 px-4 rounded-r hover:bg-primary-dark transition duration-300",children:"Añadir habilidad"})]}),t&&i.jsx(i.Fragment,{children:r?i.jsx("button",{onClick:d,className:"mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300",children:"Guardar cambios"}):i.jsx("button",{onClick:()=>s(!0),className:"mt-4 text-primary hover:text-primary-dark transition duration-300",children:"Editar habilidades"})})]})},J2=({companyInfo:e,setCompanyInfo:t,hasWebsite:n,setHasWebsite:r})=>i.jsxs("form",{className:"space-y-4",children:[i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Nombre de la Empresa"}),i.jsx("input",{type:"text",value:e.companyName||"",onChange:s=>t({...e,companyName:s.target.value}),className:"mt-1 p-2 w-full border rounded-md"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Industria"}),i.jsx("input",{type:"text",value:e.industry||"",onChange:s=>t({...e,industry:s.target.value}),className:"mt-1 p-2 w-full border rounded-md"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Año de Fundación"}),i.jsxs("div",{className:"relative",children:[i.jsx("div",{className:"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none",children:i.jsx(xa,{className:"h-5 w-5 text-gray-400"})}),i.jsx("input",{type:"number",min:"1900",max:new Date().getFullYear(),value:e.foundedYear||"",onChange:s=>t({...e,foundedYear:s.target.value}),className:"mt-1 p-2 pl-10 w-full border rounded-md",placeholder:new Date().getFullYear()})]})]}),i.jsxs("div",{children:[i.jsxs("div",{className:"flex items-center justify-between mb-2",children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Sitio Web"}),i.jsxs("div",{className:"flex items-center",children:[i.jsx("span",{className:"text-sm text-gray-500 mr-2",children:n?"Activado":"Desactivado"}),i.jsxs("label",{className:"relative inline-flex items-center cursor-pointer",children:[i.jsx("input",{type:"checkbox",checked:n,onChange:s=>r(s.target.checked),className:"sr-only peer"}),i.jsx("div",{className:"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"})]})]})]}),n&&i.jsxs("div",{className:"relative",children:[i.jsx("div",{className:"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none",children:i.jsx(bc,{className:"h-5 w-5 text-gray-400"})}),i.jsx("input",{type:"url",value:e.website||"",onChange:s=>t({...e,website:s.target.value}),className:"mt-1 p-2 pl-10 w-full border rounded-md",placeholder:"https://"})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Cantidad de Empleados"}),i.jsxs("select",{value:e.employees||"",onChange:s=>t({...e,employees:s.target.value}),className:"mt-1 p-2 w-full border rounded-md",children:[i.jsx("option",{value:"",children:"Seleccionar"}),i.jsx("option",{value:"1-10",children:"1-10 empleados"}),i.jsx("option",{value:"11-50",children:"11-50 empleados"}),i.jsx("option",{value:"51-200",children:"51-200 empleados"}),i.jsx("option",{value:"201-500",children:"201-500 empleados"}),i.jsx("option",{value:"501+",children:"501+ empleados"})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Descripción"}),i.jsx("textarea",{value:e.description||"",onChange:s=>t({...e,description:s.target.value}),rows:"4",className:"mt-1 p-2 w-full border rounded-md"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Ubicación"}),i.jsx("input",{type:"text",value:e.location||"",onChange:s=>t({...e,location:s.target.value}),className:"mt-1 p-2 w-full border rounded-md"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Email de Contacto"}),i.jsx("input",{type:"email",value:e.contactEmail||"",onChange:s=>t({...e,contactEmail:s.target.value}),className:"mt-1 p-2 w-full border rounded-md"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Teléfono de Contacto"}),i.jsx("input",{type:"tel",value:e.contactPhone||"",onChange:s=>t({...e,contactPhone:s.target.value}),className:"mt-1 p-2 w-full border rounded-md"})]})]}),Z2=({userData:e,isOwnProfile:t,onSave:n})=>{const[r,s]=N.useState(!1),[a,l]=N.useState(e.companyInfo||{}),[o,u]=N.useState(!!a.website),c=()=>{const h={...a};o||(h.website=""),console.log("CompanyInfoSection - Saving data:",h),n({companyInfo:h}),s(!1)};return e.role!=="empresario"?null:i.jsxs("div",{className:"bg-white shadow rounded-lg p-6 mb-6",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Información de la Empresa"}),r?i.jsxs(i.Fragment,{children:[i.jsx(J2,{companyInfo:a,setCompanyInfo:l,hasWebsite:o,setHasWebsite:u}),i.jsx("button",{type:"button",onClick:c,className:"mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300",children:"Guardar Información"})]}):i.jsxs("div",{className:"space-y-4",children:[a&&a.companyName?i.jsxs(i.Fragment,{children:[i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Nombre:"}),i.jsx("p",{children:a.companyName})]}),a.industry&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Industria:"}),i.jsx("p",{children:a.industry})]}),a.foundedYear&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Fundada en:"}),i.jsx("p",{children:a.foundedYear})]}),a.website&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Sitio Web:"}),i.jsxs("div",{className:"flex items-center",children:[i.jsx(bc,{size:16,className:"mr-2 text-primary"}),i.jsx("a",{href:a.website.startsWith("http")?a.website:`https://${a.website}`,target:"_blank",rel:"noopener noreferrer",className:"text-primary hover:underline",children:a.website})]})]}),a.employees&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Tamaño:"}),i.jsxs("p",{children:[a.employees," empleados"]})]}),a.description&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Acerca de la empresa:"}),i.jsx("p",{children:a.description})]}),a.location&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Ubicación:"}),i.jsx("p",{children:a.location})]}),a.contactEmail&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Email de contacto:"}),i.jsx("p",{children:a.contactEmail})]}),a.contactPhone&&i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold",children:"Teléfono de contacto:"}),i.jsx("p",{children:a.contactPhone})]})]}):i.jsx("p",{className:"text-gray-500",children:"No hay información de la empresa disponible."}),t&&i.jsx("button",{onClick:()=>s(!0),className:"mt-4 text-primary hover:text-primary-dark transition duration-300",children:"Editar información de la empresa"})]})]})},eN=()=>{var h;const{username:e}=mc(),t=Ne(),{data:n,isLoading:r}=G({queryKey:["authUser"]}),{data:s,isLoading:a}=G({queryKey:["userProfile",e],queryFn:()=>L.get(`/users/${e}`)}),{mutate:l}=K({mutationFn:async d=>{await L.put("/users/profile",d)},onSuccess:()=>{M.success("Perfil actualizado"),t.invalidateQueries(["userProfile",e]),t.invalidateQueries(["authUser"])}});if(r||a)return i.jsx("div",{className:"min-h-screen flex items-center justify-center",children:i.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-primary"})});const o=n.username===((h=s==null?void 0:s.data)==null?void 0:h.username),u=o?n:s==null?void 0:s.data,c=d=>{console.log("ProfilePage receiving:",d),l(d)};return i.jsxs("div",{className:"max-w-4xl mx-auto p-4",children:[i.jsx(V2,{userData:u,isOwnProfile:o,onSave:c}),u.role==="empresario"&&i.jsx(i.Fragment,{children:u.isFirstLogin?i.jsx("div",{className:"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6",children:i.jsxs("div",{className:"flex",children:[i.jsx("div",{className:"flex-shrink-0",children:i.jsx("svg",{className:"h-5 w-5 text-yellow-400",viewBox:"0 0 20 20",fill:"currentColor",children:i.jsx("path",{fillRule:"evenodd",d:"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",clipRule:"evenodd"})})}),i.jsx("div",{className:"ml-3",children:i.jsx("p",{className:"text-sm text-yellow-700",children:"Por favor complete el cuestionario inicial para configurar la información de su empresa."})})]})}):i.jsx(Z2,{userData:u,isOwnProfile:o,onSave:c})}),i.jsx(K2,{userData:u,isOwnProfile:o,onSave:c}),i.jsx(Y2,{userData:u,isOwnProfile:o,onSave:c}),i.jsx(G2,{userData:u,isOwnProfile:o,onSave:c}),i.jsx(X2,{userData:u,isOwnProfile:o,onSave:c})]})},tN=()=>{const[e,t]=N.useState(!1),[n,r]=N.useState({name:"",username:"",email:"",password:"",studentId:"",role:"egresado"}),[s,a]=N.useState(""),[l,o]=N.useState("users"),u=Ne(),{data:c,isLoading:h}=G({queryKey:["admin-users"],queryFn:async()=>(await L.get("/admin/users")).data}),{data:d,isLoading:f}=G({queryKey:["admin-banned-users"],queryFn:async()=>(await L.get("/admin/banned-users")).data,enabled:l==="banned"}),{mutate:g,isPending:m}=K({mutationFn:async R=>L.post("/admin/users",R),onSuccess:()=>{M.success("Usuario creado exitosamente"),t(!1),r({name:"",username:"",email:"",password:"",studentId:"",role:"egresado"}),u.invalidateQueries(["admin-users"])},onError:R=>{var z,X;M.error(((X=(z=R.response)==null?void 0:z.data)==null?void 0:X.message)||"Error al crear usuario")}}),{mutate:v}=K({mutationFn:async R=>L.delete(`/admin/users/${R}`),onSuccess:()=>{M.success("Usuario eliminado exitosamente"),u.invalidateQueries(["admin-users"])},onError:R=>{var z,X;M.error(((X=(z=R.response)==null?void 0:z.data)==null?void 0:X.message)||"Error al eliminar usuario")}}),{mutate:j}=K({mutationFn:async({userId:R,role:z})=>L.put(`/admin/users/${R}/role`,{role:z}),onSuccess:()=>{M.success("Rol actualizado exitosamente"),u.invalidateQueries(["admin-users"])},onError:R=>{var z,X;M.error(((X=(z=R.response)==null?void 0:z.data)==null?void 0:X.message)||"Error al actualizar rol")}}),{mutate:p}=K({mutationFn:async({userId:R,reason:z})=>L.post(`/admin/users/${R}/ban`,{reason:z}),onSuccess:()=>{M.success("Usuario baneado exitosamente"),u.invalidateQueries(["admin-users"]),u.invalidateQueries(["admin-banned-users"])},onError:R=>{var z,X;M.error(((X=(z=R.response)==null?void 0:z.data)==null?void 0:X.message)||"Error al banear usuario")}}),{mutate:y}=K({mutationFn:async R=>L.delete(`/admin/banned-users/${R}`),onSuccess:()=>{M.success("Usuario desbaneado exitosamente"),u.invalidateQueries(["admin-banned-users"])},onError:R=>{var z,X;M.error(((X=(z=R.response)==null?void 0:z.data)==null?void 0:X.message)||"Error al desbanear usuario")}}),{mutate:x}=K({mutationFn:async({userId:R,newPassword:z})=>L.post(`/admin/users/${R}/reset-password`,{newPassword:z}),onSuccess:()=>{M.success("Contraseña restablecida exitosamente"),u.invalidateQueries(["admin-users"])},onError:R=>{var z,X;M.error(((X=(z=R.response)==null?void 0:z.data)==null?void 0:X.message)||"Error al restablecer la contraseña")}}),b=R=>{R.preventDefault(),g(n)},C=R=>{window.confirm("¿Estás seguro de eliminar este usuario?")&&v(R)},O=(R,z)=>{j({userId:R,role:z})},k=(R,z)=>{const X=prompt(`Ingrese la razón para banear a ${z}:`);X!==null&&window.confirm(`¿Estás seguro de banear a ${z}? Esta acción no se puede deshacer y el usuario no podrá crear una nueva cuenta con el mismo ID.`)&&p({userId:R,reason:X})},E=(R,z)=>{const X=prompt(`Ingrese la nueva contraseña para ${z}:

(Debe tener al menos 6 caracteres)`);if(X){if(X.length<6){M.error("La contraseña debe tener al menos 6 caracteres");return}window.confirm(`¿Estás seguro de restablecer la contraseña de ${z} a "${X}"?`)&&(x({userId:R,newPassword:X}),M.success(`Contraseña para ${z} actualizada exitosamente`))}},F=R=>{const z=R.target.value;r({...n,studentId:z,email:n.role==="egresado"&&/^\d{8}$/.test(z)?`L${z}@tuxtla.tecnm.mx`:n.email})},I=R=>{const z=R.target.value;r({...n,role:z,email:z==="egresado"&&/^\d{8}$/.test(n.studentId)?`L${n.studentId}@tuxtla.tecnm.mx`:n.email})},oe=c==null?void 0:c.filter(R=>R&&R.name&&R.name.toLowerCase().includes(s.toLowerCase())||R&&R.email&&R.email.toLowerCase().includes(s.toLowerCase())||R&&R.username&&R.username.toLowerCase().includes(s.toLowerCase())),kt=R=>{switch(R){case"empresario":return i.jsx("span",{className:"px-2 py-1 text-xs rounded-full bg-green-100 text-green-800",children:"Empresario"});case"administrador":return i.jsx("span",{className:"px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800",children:"Administrador"});default:return i.jsx("span",{className:"px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800",children:"Egresado"})}};return i.jsxs("div",{className:"bg-white rounded-lg shadow p-6",children:[i.jsx("h1",{className:"text-2xl font-bold mb-6",children:"Panel de Administración"}),i.jsx("div",{className:"mb-6",children:i.jsxs("div",{className:"flex border-b",children:[i.jsx("button",{className:`py-2 px-4 ${l==="users"?"border-b-2 border-primary font-semibold":"text-gray-500"}`,onClick:()=>o("users"),children:"Usuarios"}),i.jsx("button",{className:`py-2 px-4 ${l==="banned"?"border-b-2 border-primary font-semibold":"text-gray-500"}`,onClick:()=>o("banned"),children:"Usuarios Baneados"})]})}),l==="users"&&i.jsxs(i.Fragment,{children:[i.jsxs("div",{className:"mb-6 flex justify-between items-center",children:[i.jsxs("div",{className:"relative w-64",children:[i.jsx("input",{type:"text",placeholder:"Buscar usuarios...",value:s,onChange:R=>a(R.target.value),className:"w-full pl-10 pr-4 py-2 border rounded-lg"}),i.jsx(Yp,{className:"absolute left-3 top-2.5 text-gray-400",size:18})]}),i.jsxs("button",{onClick:()=>t(!0),className:"bg-primary text-white px-4 py-2 rounded-lg flex items-center",children:[i.jsx(On,{size:18,className:"mr-2"}),"Crear Usuario"]})]}),h?i.jsx("div",{className:"flex justify-center py-8",children:i.jsx(Ae,{className:"animate-spin",size:32})}):i.jsx("div",{className:"overflow-x-auto",children:i.jsxs("table",{className:"w-full border-collapse",children:[i.jsx("thead",{children:i.jsxs("tr",{className:"bg-gray-100",children:[i.jsx("th",{className:"border p-2 text-left",children:"Nombre"}),i.jsx("th",{className:"border p-2 text-left",children:"Usuario"}),i.jsx("th",{className:"border p-2 text-left",children:"Correo"}),i.jsx("th",{className:"border p-2 text-left",children:"Rol"}),i.jsx("th",{className:"border p-2 text-center",children:"Acciones"})]})}),i.jsxs("tbody",{children:[oe==null?void 0:oe.map(R=>i.jsxs("tr",{className:"hover:bg-gray-50",children:[i.jsx("td",{className:"border p-2",children:i.jsx("div",{className:"flex items-center",children:i.jsx("span",{children:R.name})})}),i.jsx("td",{className:"border p-2",children:R.username}),i.jsx("td",{className:"border p-2",children:R.email}),i.jsx("td",{className:"border p-2",children:i.jsxs("div",{className:"flex items-center space-x-2",children:[kt(R.role),i.jsxs("select",{value:R.role,onChange:z=>O(R._id,z.target.value),className:"ml-2 p-1 border rounded",children:[i.jsx("option",{value:"egresado",children:"Egresado"}),i.jsx("option",{value:"empresario",children:"Empresario"}),i.jsx("option",{value:"administrador",children:"Administrador"})]})]})}),i.jsx("td",{className:"border p-2 text-center",children:i.jsxs("div",{className:"flex justify-center space-x-2",children:[i.jsx("button",{onClick:()=>C(R._id),className:"text-red-500 hover:bg-red-100 p-1 rounded",title:"Eliminar Usuario",children:i.jsx(va,{size:18})}),R.role==="egresado"&&i.jsx("button",{onClick:()=>k(R._id,R.name),className:"text-orange-500 hover:bg-orange-100 p-1 rounded",title:"Banear Usuario",children:i.jsx(tw,{size:18})}),i.jsx("button",{onClick:()=>E(R._id,R.name),className:"text-blue-500 hover:bg-blue-100 p-1 rounded",title:"Restablecer Contraseña",children:i.jsx(aw,{size:18})})]})})]},R._id)),(oe==null?void 0:oe.length)===0&&i.jsx("tr",{children:i.jsx("td",{colSpan:"5",className:"text-center py-4",children:"No se encontraron usuarios"})})]})]})})]}),l==="banned"&&i.jsx("div",{className:"overflow-x-auto",children:f?i.jsx("div",{className:"flex justify-center py-8",children:i.jsx(Ae,{className:"animate-spin",size:32})}):i.jsxs("table",{className:"w-full border-collapse",children:[i.jsx("thead",{children:i.jsxs("tr",{className:"bg-gray-100",children:[i.jsx("th",{className:"border p-2 text-left",children:"ID Estudiante"}),i.jsx("th",{className:"border p-2 text-left",children:"Correo"}),i.jsx("th",{className:"border p-2 text-left",children:"Razón"}),i.jsx("th",{className:"border p-2 text-left",children:"Baneado Por"}),i.jsx("th",{className:"border p-2 text-left",children:"Fecha"}),i.jsx("th",{className:"border p-2 text-center",children:"Acciones"})]})}),i.jsxs("tbody",{children:[d==null?void 0:d.map(R=>{var z;return i.jsxs("tr",{className:"hover:bg-gray-50",children:[i.jsx("td",{className:"border p-2",children:R.studentId}),i.jsx("td",{className:"border p-2",children:R.email}),i.jsx("td",{className:"border p-2",children:R.reason}),i.jsx("td",{className:"border p-2",children:((z=R.bannedBy)==null?void 0:z.name)||"N/A"}),i.jsx("td",{className:"border p-2",children:new Date(R.bannedAt).toLocaleString()}),i.jsx("td",{className:"border p-2 text-center",children:i.jsx("button",{onClick:()=>{window.confirm("¿Estás seguro de desbanear a este usuario?")&&y(R.studentId)},className:"text-blue-500 hover:bg-blue-100 p-1 rounded",children:"Desbanear"})})]},R._id)}),(!d||d.length===0)&&i.jsx("tr",{children:i.jsx("td",{colSpan:"6",className:"text-center py-4",children:"No hay usuarios baneados"})})]})]})}),e&&i.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:i.jsxs("div",{className:"bg-white rounded-lg p-6 w-full max-w-md",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Crear Nuevo Usuario"}),i.jsxs("form",{onSubmit:b,children:[i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block mb-1",children:"Nombre completo"}),i.jsx("input",{type:"text",value:n.name,onChange:R=>r({...n,name:R.target.value}),className:"w-full p-2 border rounded",required:!0})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block mb-1",children:"Nombre de usuario"}),i.jsx("input",{type:"text",value:n.username,onChange:R=>r({...n,username:R.target.value}),className:"w-full p-2 border rounded",required:!0})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block mb-1",children:"Rol"}),i.jsxs("select",{value:n.role,onChange:I,className:"w-full p-2 border rounded",children:[i.jsx("option",{value:"egresado",children:"Egresado"}),i.jsx("option",{value:"empresario",children:"Empresario"}),i.jsx("option",{value:"administrador",children:"Administrador"})]})]}),n.role==="egresado"&&i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block mb-1",children:"ID de Estudiante (8 dígitos)"}),i.jsx("input",{type:"text",value:n.studentId,onChange:F,className:"w-full p-2 border rounded",placeholder:"Ejemplo: 20270806",required:n.role==="egresado"})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block mb-1",children:"Correo electrónico"}),i.jsx("input",{type:"email",value:n.email,onChange:R=>r({...n,email:R.target.value}),className:"w-full p-2 border rounded",readOnly:n.role==="egresado"&&/^\d{8}$/.test(n.studentId),required:!0}),n.role==="egresado"&&/^\d{8}$/.test(n.studentId)&&i.jsx("p",{className:"text-xs text-gray-500 mt-1",children:"El correo se genera automáticamente a partir del ID de estudiante"})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block mb-1",children:"Contraseña"}),i.jsx("input",{type:"password",value:n.password,onChange:R=>r({...n,password:R.target.value}),className:"w-full p-2 border rounded",required:!0})]}),i.jsxs("div",{className:"flex justify-end gap-2",children:[i.jsx("button",{type:"button",onClick:()=>t(!1),className:"px-4 py-2 border rounded-lg",children:"Cancelar"}),i.jsxs("button",{type:"submit",className:"bg-primary text-white px-4 py-2 rounded-lg flex items-center",disabled:m,children:[m?i.jsx(Ae,{className:"animate-spin mr-2",size:18}):i.jsx(On,{size:18,className:"mr-2"}),"Crear Usuario"]})]})]})]})})]})},nN=({user:e,onComplete:t})=>{const[n,r]=N.useState({title:"",content:"",image:null,projectRequirements:"",projectGoals:"",expirationDays:"30"}),[s,a]=N.useState(null),l=Ne(),{mutate:o,isPending:u}=K({mutationFn:async m=>(await L.post("/projects/create",m,{headers:{"Content-Type":"application/json"}})).data,onSuccess:()=>{h(),M.success("Proyecto creado exitosamente"),l.invalidateQueries({queryKey:["projects"]}),t&&t()},onError:m=>{var v,j;M.error(((j=(v=m.response)==null?void 0:v.data)==null?void 0:j.message)||"Error al crear el proyecto")}}),c=async()=>{try{if(!n.title||!n.content)return M.error("El título y la descripción son obligatorios");const m={...n};n.image&&(m.image=await f(n.image)),o(m)}catch(m){console.error("Error in handleProjectCreation:",m),M.error("Error al crear el proyecto")}},h=()=>{r({title:"",content:"",image:null,projectRequirements:"",projectGoals:"",expirationDays:"30"}),a(null)},d=m=>{const v=m.target.files[0];r({...n,image:v}),v?f(v).then(a):a(null)},f=m=>new Promise((v,j)=>{const p=new FileReader;p.onloadend=()=>v(p.result),p.onerror=j,p.readAsDataURL(m)}),g=m=>{const{name:v,value:j}=m.target;r({...n,[v]:j})};return i.jsxs("div",{className:"bg-white rounded-lg shadow p-6 border-2 border-primary",children:[i.jsx("h2",{className:"text-xl font-bold mb-4",children:"Crear Nuevo Proyecto"}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Título del Proyecto*"}),i.jsx("input",{type:"text",name:"title",value:n.title,onChange:g,placeholder:"Escribe un título llamativo para tu proyecto",className:"w-full p-3 border rounded-lg",required:!0})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Descripción*"}),i.jsx("textarea",{name:"content",value:n.content,onChange:g,placeholder:"Describe tu proyecto, sus objetivos y lo que buscas",className:"w-full p-3 border rounded-lg min-h-[120px]",required:!0})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Requisitos"}),i.jsx("textarea",{name:"projectRequirements",value:n.projectRequirements,onChange:g,placeholder:"Detalla los requisitos o habilidades necesarias para participar",className:"w-full p-3 border rounded-lg min-h-[80px]"})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Metas"}),i.jsx("textarea",{name:"projectGoals",value:n.projectGoals,onChange:g,placeholder:"¿Cuáles son las metas a corto y largo plazo del proyecto?",className:"w-full p-3 border rounded-lg min-h-[80px]"})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Tiempo de Expiración"}),i.jsxs("div",{className:"flex items-center",children:[i.jsx(xa,{size:20,className:"mr-2 text-gray-500"}),i.jsxs("select",{name:"expirationDays",value:n.expirationDays,onChange:g,className:"p-2 border rounded-lg",children:[i.jsx("option",{value:"7",children:"7 días"}),i.jsx("option",{value:"14",children:"14 días"}),i.jsx("option",{value:"30",children:"30 días"}),i.jsx("option",{value:"60",children:"60 días"}),i.jsx("option",{value:"90",children:"90 días"})]})]})]}),s&&i.jsx("div",{className:"mt-4 mb-4",children:i.jsx("img",{src:s,alt:"Vista previa",className:"w-full h-auto rounded-lg"})}),i.jsxs("div",{className:"flex justify-between items-center mt-6",children:[i.jsx("div",{className:"flex items-center",children:i.jsxs("label",{className:"flex items-center text-primary hover:text-primary-dark transition-colors duration-200 cursor-pointer",children:[i.jsx(Sc,{size:20,className:"mr-2"}),i.jsx("span",{children:"Añadir imagen"}),i.jsx("input",{type:"file",accept:"image/*",className:"hidden",onChange:d})]})}),i.jsxs("div",{className:"flex space-x-3",children:[i.jsx("button",{onClick:h,className:"px-4 py-2 border border-gray-300 rounded-lg",children:"Cancelar"}),i.jsx("button",{className:"bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200 flex items-center",onClick:c,disabled:u,children:u?i.jsxs(i.Fragment,{children:[i.jsx(Ae,{className:"size-5 animate-spin mr-2"}),"Creando..."]}):"Publicar Proyecto"})]})]})]})},rN=()=>{const e=Ne(),{data:t}=G({queryKey:["authUser"],suspense:!1}),[n,r]=N.useState(!1),[s,a]=N.useState({status:"active",view:"all"}),{data:l=[],isLoading:o,error:u}=G({queryKey:["projects",s],queryFn:async()=>{var f,g;try{const m=new URLSearchParams;s.status&&m.append("status",s.status),s.view==="created"&&m.append("created","true"),s.view==="interested"&&m.append("interested","true");const v=await L.get(`/projects?${m}`);return JSON.parse(JSON.stringify(v.data))}catch(m){throw console.error("Error fetching projects:",m),new Error(((g=(f=m.response)==null?void 0:f.data)==null?void 0:g.message)||"Error al cargar los proyectos")}},enabled:!!t,staleTime:1e3*60*5}),{mutate:c}=K({mutationFn:async f=>(await L.post(`/projects/${f}/like`)).data,onSuccess:()=>{e.invalidateQueries(["projects",s]),M.success("Acción realizada correctamente")},onError:f=>{var g,m;M.error(((m=(g=f.response)==null?void 0:g.data)==null?void 0:m.message)||"Error al realizar la acción")}}),{mutate:h}=K({mutationFn:async f=>(await L.post(`/projects/${f}/interest`)).data,onSuccess:f=>{e.invalidateQueries(["projects",s]);const g=f.message.includes("removed")?"Interés removido":"Interés añadido";M.success(g)},onError:f=>{var g,m;M.error(((m=(g=f.response)==null?void 0:g.data)==null?void 0:m.message)||"Error al mostrar interés")}}),d=({project:f,isOwner:g})=>{var I,oe,kt,R,z,X;const[m,v]=N.useState(!1),[j,p]=N.useState(""),[y,x]=N.useState(!1),b=(I=f.likes)==null?void 0:I.includes(t._id),C=(oe=f.interestedUsers)==null?void 0:oe.some(Z=>Z.user._id===t._id),O=()=>{c(f._id)},k=()=>{h(f._id)},{mutate:E}=K({mutationFn:async()=>(await L.post(`/projects/${f._id}/comment`,{content:j})).data,onSuccess:()=>{e.invalidateQueries(["projects",s]),p(""),v(!1),M.success("Comentario añadido")},onError:Z=>{var pr,T;M.error(((T=(pr=Z.response)==null?void 0:pr.data)==null?void 0:T.message)||"Error al añadir comentario")}}),F=Z=>{Z.preventDefault(),j.trim()&&E()};return i.jsxs("div",{className:"bg-white rounded-lg shadow p-6 border border-gray-200",children:[i.jsxs("div",{className:"flex justify-between mb-4",children:[i.jsxs("div",{className:"flex items-center",children:[i.jsx(U,{to:`/profile/${f.author.username}`,children:i.jsx("img",{src:f.author.profilePicture||"/avatar.png",alt:f.author.name,className:"w-10 h-10 rounded-full mr-3"})}),i.jsxs("div",{children:[i.jsx("h3",{className:"font-semibold text-lg",children:f.title}),i.jsxs("div",{className:"flex items-center text-sm text-gray-600",children:[i.jsx(U,{to:`/profile/${f.author.username}`,className:"hover:underline",children:f.author.name}),i.jsx("span",{className:"mx-1",children:"•"}),i.jsx("span",{children:En(new Date(f.createdAt),{addSuffix:!0})})]})]})]}),i.jsxs("div",{className:"flex flex-col items-end",children:[g&&i.jsx("span",{className:"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full mb-2",children:"Tu proyecto"}),i.jsx("span",{className:`text-xs px-2 py-1 rounded-full ${f.status==="active"?"bg-green-100 text-green-800":f.status==="completed"?"bg-purple-100 text-purple-800":"bg-gray-100 text-gray-800"}`,children:f.status==="active"?"Activo":f.status==="completed"?"Completado":"Expirado"})]})]}),i.jsx("p",{className:"mb-4",children:f.content}),f.image&&i.jsx("img",{src:f.image,alt:"Project image",className:"w-full rounded-lg mb-4"}),(f.projectRequirements||f.projectGoals)&&i.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4",children:[f.projectRequirements&&i.jsxs("div",{className:"bg-gray-50 p-3 rounded",children:[i.jsx("h4",{className:"font-semibold mb-2",children:"Requisitos:"}),i.jsx("p",{className:"text-sm",children:f.projectRequirements})]}),f.projectGoals&&i.jsxs("div",{className:"bg-gray-50 p-3 rounded",children:[i.jsx("h4",{className:"font-semibold mb-2",children:"Metas:"}),i.jsx("p",{className:"text-sm",children:f.projectGoals})]})]}),i.jsxs("div",{className:"flex items-center justify-between p-2 border-t border-b my-3",children:[i.jsxs("button",{onClick:O,className:`flex items-center gap-1 px-3 py-1 rounded-full transition-colors
                            ${b?"text-blue-600 bg-blue-50":"text-gray-500 hover:bg-gray-100"}`,children:[i.jsx(Gp,{size:18,className:b?"fill-blue-600":""}),i.jsx("span",{children:((kt=f.likes)==null?void 0:kt.length)||0})]}),i.jsxs("button",{onClick:()=>v(!m),className:"flex items-center gap-1 px-3 py-1 rounded-full text-gray-500 hover:bg-gray-100 transition-colors",children:[i.jsx(Vp,{size:18}),i.jsxs("span",{children:[((R=f.comments)==null?void 0:R.length)||0," Comentarios"]})]}),i.jsxs("button",{onClick:k,className:`flex items-center gap-1 px-3 py-1 rounded-full transition-colors
                            ${C?"text-green-600 bg-green-50":"text-gray-500 hover:bg-gray-100"}`,disabled:f.status==="expired",children:[i.jsx(On,{size:18,className:C?"fill-green-600":""}),i.jsx("span",{children:C?"Interesado":"Mostrar interés"})]})]}),((z=f.interestedUsers)==null?void 0:z.length)>0&&i.jsxs("div",{className:"mt-2 mb-4",children:[i.jsxs("button",{onClick:()=>x(!y),className:"flex items-center text-sm text-gray-600 hover:text-gray-900",children:[i.jsx(Cc,{size:16,className:"mr-1"}),i.jsxs("span",{children:[f.interestedUsers.length,f.interestedUsers.length===1?" persona interesada":" personas interesadas"]})]}),y&&i.jsx("div",{className:"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50",children:i.jsxs("div",{className:"bg-white rounded-lg p-6 w-full max-w-md",children:[i.jsxs("div",{className:"flex justify-between items-center mb-4",children:[i.jsx("h3",{className:"text-lg font-semibold",children:"Personas interesadas"}),i.jsx("button",{onClick:()=>x(!1),className:"text-gray-500 hover:text-gray-700",children:i.jsx(hr,{size:20})})]}),i.jsx("div",{className:"max-h-80 overflow-y-auto",children:f.interestedUsers.map(Z=>i.jsxs("div",{className:"flex items-center p-3 hover:bg-gray-50 rounded",children:[i.jsxs(U,{to:`/profile/${Z.user.username}`,className:"flex items-center flex-grow",children:[i.jsx("img",{src:Z.user.profilePicture||"/avatar.png",alt:Z.user.name,className:"w-10 h-10 rounded-full mr-3"}),i.jsxs("div",{children:[i.jsx("p",{className:"font-medium",children:Z.user.name}),i.jsx("p",{className:"text-xs text-gray-500",children:Z.user.headline})]})]}),i.jsx("span",{className:"text-xs text-gray-500",children:En(new Date(Z.createdAt),{addSuffix:!0})})]},Z.user._id))})]})})]}),m&&i.jsxs("form",{onSubmit:F,className:"mt-4",children:[i.jsx("textarea",{value:j,onChange:Z=>p(Z.target.value),placeholder:"Escribe un comentario...",className:"w-full p-3 border rounded-lg mb-2",rows:"2",disabled:f.status==="expired"}),i.jsx("button",{type:"submit",className:"bg-primary text-white px-4 py-2 rounded-lg disabled:opacity-50",disabled:!j.trim()||f.status==="expired",children:"Comentar"})]}),m&&((X=f.comments)==null?void 0:X.length)>0&&i.jsxs("div",{className:"mt-4 border-t pt-4",children:[i.jsx("h4",{className:"font-semibold mb-2",children:"Comentarios"}),i.jsx("div",{className:"space-y-3 max-h-60 overflow-y-auto",children:f.comments.map(Z=>i.jsxs("div",{className:"flex items-start gap-2 p-2 bg-gray-50 rounded",children:[i.jsx(U,{to:`/profile/${Z.user.username}`,children:i.jsx("img",{src:Z.user.profilePicture||"/avatar.png",alt:Z.user.name,className:"w-8 h-8 rounded-full"})}),i.jsxs("div",{children:[i.jsxs("div",{className:"flex items-baseline gap-2",children:[i.jsx(U,{to:`/profile/${Z.user.username}`,className:"font-semibold text-sm hover:underline",children:Z.user.name}),i.jsx("span",{className:"text-xs text-gray-500",children:En(new Date(Z.createdAt),{addSuffix:!0})})]}),i.jsx("p",{className:"text-sm",children:Z.content})]})]},Z._id))})]})]})};return u?i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"hidden lg:block lg:col-span-1",children:i.jsx(Tn,{user:t})}),i.jsx("div",{className:"col-span-1 lg:col-span-3",children:i.jsx("div",{className:"bg-white rounded-lg shadow p-6",children:i.jsx("div",{className:"text-center text-red-600",children:i.jsxs("p",{children:["Error al cargar los proyectos: ",u.message]})})})})]}):i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"hidden lg:block lg:col-span-1",children:i.jsx(Tn,{user:t})}),i.jsx("div",{className:"col-span-1 lg:col-span-3",children:i.jsxs("div",{className:"bg-white rounded-lg shadow p-6 mb-6",children:[i.jsxs("div",{className:"flex justify-between items-center mb-6",children:[i.jsx("h1",{className:"text-2xl font-bold",children:"Proyectos"}),i.jsxs("button",{onClick:()=>r(!n),className:"bg-primary text-white px-4 py-2 rounded-lg flex items-center gap-2",children:[i.jsx(Kp,{size:20}),n?"Cerrar":"Crear Proyecto"]})]}),n&&i.jsx("div",{className:"mb-6",children:i.jsx(nN,{user:t,onComplete:()=>{r(!1),M.success("Proyecto creado exitosamente")}})}),i.jsxs("div",{className:"flex flex-wrap gap-2 mb-6",children:[i.jsxs("div",{className:"flex items-center border rounded-lg overflow-hidden",children:[i.jsx("button",{className:`px-4 py-2 ${s.view==="all"?"bg-primary text-white":"bg-gray-100"}`,onClick:()=>a({...s,view:"all"}),children:"Todos"}),i.jsx("button",{className:`px-4 py-2 ${s.view==="created"?"bg-primary text-white":"bg-gray-100"}`,onClick:()=>a({...s,view:"created"}),children:"Mis Proyectos"}),i.jsx("button",{className:`px-4 py-2 ${s.view==="interested"?"bg-primary text-white":"bg-gray-100"}`,onClick:()=>a({...s,view:"interested"}),children:"Interesado"})]}),i.jsxs("div",{className:"flex items-center border rounded-lg overflow-hidden ml-auto",children:[i.jsx("button",{className:`px-4 py-2 ${s.status==="active"?"bg-primary text-white":"bg-gray-100"}`,onClick:()=>a({...s,status:"active"}),children:"Activos"}),i.jsx("button",{className:`px-4 py-2 ${s.status==="completed"?"bg-primary text-white":"bg-gray-100"}`,onClick:()=>a({...s,status:"completed"}),children:"Completados"}),i.jsx("button",{className:`px-4 py-2 ${s.status==="expired"?"bg-primary text-white":"bg-gray-100"}`,onClick:()=>a({...s,status:"expired"}),children:"Expirados"})]})]}),o?i.jsx("div",{className:"flex items-center justify-center py-10",children:i.jsx(Ae,{className:"w-10 h-10 animate-spin text-primary"})}):l&&l.length>0?i.jsx("div",{className:"space-y-6",children:l.map(f=>i.jsx(d,{project:f,isOwner:f.author._id===t._id},f._id))}):i.jsxs("div",{className:"text-center py-10 bg-gray-50 rounded-lg",children:[i.jsx(wt,{size:64,className:"mx-auto text-gray-400 mb-4"}),i.jsx("h2",{className:"text-xl font-semibold mb-2",children:"No hay proyectos disponibles"}),i.jsx("p",{className:"text-gray-600 mb-6",children:s.view==="created"?"No has creado ningún proyecto todavía.":s.view==="interested"?"No has mostrado interés en ningún proyecto.":"No hay proyectos que coincidan con tus filtros."}),s.view==="created"&&i.jsx("button",{onClick:()=>r(!0),className:"bg-primary text-white px-4 py-2 rounded-lg",children:"Crear tu primer proyecto"})]})]})})]})},sN=({user:e})=>{const[t,n]=N.useState(""),[r,s]=N.useState(null),[a,l]=N.useState(null),o=Ne(),{mutate:u,isPending:c}=K({mutationFn:async m=>(await L.post("/announcements/create",m,{headers:{"Content-Type":"application/json"}})).data,onSuccess:()=>{d(),M.success("Anuncio creado"),o.invalidateQueries({queryKey:["announcements"]})},onError:m=>{var v,j;M.error(((j=(v=m.response)==null?void 0:v.data)==null?void 0:j.message)||"Error al crear el anuncio")}}),h=async()=>{try{if(!t.trim()){M.error("El contenido es obligatorio");return}const m={content:t};r&&(m.image=await g(r)),u(m)}catch(m){console.error("Error in handleAnnouncementCreation:",m),M.error("Error al crear el anuncio")}},d=()=>{n(""),s(null),l(null)},f=m=>{const v=m.target.files[0];s(v),v?g(v).then(l):l(null)},g=m=>new Promise((v,j)=>{const p=new FileReader;p.onloadend=()=>v(p.result),p.onerror=j,p.readAsDataURL(m)});return e.role!=="administrador"?null:i.jsxs("div",{className:"bg-secondary rounded-lg shadow mb-4 p-4",children:[i.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Crear nuevo anuncio"}),i.jsxs("div",{className:"flex space-x-3",children:[i.jsx("img",{src:e.profilePicture||"/avatar.png",alt:e.name,className:"size-12 rounded-full"}),i.jsx("textarea",{placeholder:"Escribe un anuncio importante para los estudiantes...",className:"w-full p-3 rounded-lg bg-base-100 hover:bg-base-200 focus:bg-base-200 focus:outline-none resize-none transition-colors duration-200 min-h-[100px]",value:t,onChange:m=>n(m.target.value)})]}),a&&i.jsx("div",{className:"mt-4",children:i.jsx("img",{src:a,alt:"Vista previa del anuncio",className:"w-full h-auto rounded-lg"})}),i.jsxs("div",{className:"flex justify-between items-center mt-4",children:[i.jsx("div",{className:"flex space-x-4",children:i.jsxs("label",{className:"flex items-center text-info hover:text-info-dark transition-colors duration-200 cursor-pointer",children:[i.jsx(Sc,{size:20,className:"mr-2"}),i.jsx("span",{children:"Agregar imagen"}),i.jsx("input",{type:"file",accept:"image/*",className:"hidden",onChange:f})]})}),i.jsx("button",{className:"bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200",onClick:h,disabled:c,children:c?i.jsx(Ae,{className:"size-5 animate-spin"}):"Publicar anuncio"})]})]})},aN=({announcement:e})=>{var o,u;const{data:t}=G({queryKey:["authUser"]}),n=(t==null?void 0:t.role)==="administrador",r=Ne(),{mutate:s,isPending:a}=K({mutationFn:async()=>{await L.delete(`/announcements/${e._id}`)},onSuccess:()=>{r.invalidateQueries({queryKey:["announcements"]}),M.success("Anuncio eliminado")},onError:c=>{var h,d;M.error(((d=(h=c.response)==null?void 0:h.data)==null?void 0:d.message)||"Error al eliminar el anuncio")}}),l=()=>{window.confirm("¿Estás seguro de que quieres eliminar este anuncio?")&&s()};return i.jsx("div",{className:"bg-white border-l-4 border-primary rounded-lg shadow mb-4",children:i.jsxs("div",{className:"p-4",children:[i.jsxs("div",{className:"flex items-center justify-between mb-4",children:[i.jsxs("div",{className:"flex items-center",children:[i.jsx(U,{to:`/profile/${(o=e==null?void 0:e.author)==null?void 0:o.username}`,children:i.jsx("img",{src:e.author.profilePicture||"/avatar.png",alt:e.author.name,className:"size-10 rounded-full mr-3"})}),i.jsxs("div",{children:[i.jsx(U,{to:`/profile/${(u=e==null?void 0:e.author)==null?void 0:u.username}`,children:i.jsx("h3",{className:"font-semibold",children:e.author.name})}),i.jsx("p",{className:"text-xs text-info",children:e.author.headline}),i.jsx("p",{className:"text-xs text-info",children:En(new Date(e.createdAt),{addSuffix:!0})})]})]}),n&&i.jsx("button",{onClick:l,className:"text-red-500 hover:text-red-700",children:a?i.jsx(Ae,{size:18,className:"animate-spin"}):i.jsx(va,{size:18})})]}),i.jsx("p",{className:"mb-4",children:e.content}),e.image&&i.jsx("img",{src:e.image,alt:"Contenido del anuncio",className:"rounded-lg w-full mb-4"})]})})},iN=()=>{const{data:e}=G({queryKey:["authUser"]}),t=(e==null?void 0:e.role)==="egresado"||(e==null?void 0:e.role)==="administrador",{data:n,isLoading:r,error:s}=G({queryKey:["announcements"],queryFn:async()=>(await L.get("/announcements")).data,enabled:t});return t?i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"hidden lg:block lg:col-span-1",children:i.jsx(Tn,{user:e})}),i.jsxs("div",{className:"col-span-1 lg:col-span-2 order-first lg:order-none",children:[i.jsxs("div",{className:"bg-white rounded-lg shadow p-6 mb-6",children:[i.jsxs("h1",{className:"text-2xl font-bold mb-6 flex items-center",children:[i.jsx(du,{className:"mr-2"})," Anuncios"]}),i.jsx("p",{className:"text-gray-600 mb-6",children:"Esta sección contiene anuncios y comunicaciones importantes publicados por los administradores."})]}),(e==null?void 0:e.role)==="administrador"&&i.jsx(sN,{user:e}),r?i.jsx("div",{className:"flex justify-center py-12",children:i.jsx(Ae,{className:"w-12 h-12 animate-spin text-primary"})}):s?i.jsx("div",{className:"bg-red-50 p-4 rounded-lg text-red-800",children:i.jsxs("p",{children:["Error al cargar los anuncios: ",s.message]})}):(n==null?void 0:n.length)>0?n.map(a=>i.jsx(aN,{announcement:a},a._id)):i.jsxs("div",{className:"bg-white rounded-lg shadow p-8 text-center",children:[i.jsx(du,{size:64,className:"mx-auto text-blue-500"}),i.jsx("h2",{className:"text-2xl font-bold mb-4 text-gray-800",children:"No hay anuncios todavía"}),i.jsx("p",{className:"text-gray-600 mb-6",children:(e==null?void 0:e.role)==="administrador"?"Crea el primer anuncio usando el formulario de arriba.":"No se han publicado anuncios todavía."})]})]}),i.jsx("div",{className:"col-span-1 lg:col-span-1 hidden lg:block",children:i.jsxs("div",{className:"bg-secondary rounded-lg shadow p-4",children:[i.jsx("h2",{className:"font-semibold mb-4",children:"¿Qué son los anuncios?"}),i.jsx("p",{className:"text-sm text-gray-600",children:"Los anuncios son comunicaciones oficiales publicadas por los administradores. Aquí encontrarás información importante sobre eventos, actualizaciones y noticias relevantes para los egresados."})]})})]}):i.jsx("div",{className:"flex items-center justify-center h-96",children:i.jsxs("div",{className:"text-center",children:[i.jsx("h2",{className:"text-2xl font-bold text-gray-700 mb-2",children:"Acceso restringido"}),i.jsx("p",{className:"text-gray-600",children:"No tienes acceso a esta sección."})]})})},lN=({user:e,onComplete:t})=>{const[n,r]=N.useState({title:"",company:"",location:"",description:"",requirements:"",salary:"",contactEmail:"",applicationDeadline:"",jobType:"full-time"}),[s,a]=N.useState(!1),l=Ne(),{mutate:o,isPending:u}=K({mutationFn:async f=>(await L.post("/jobs/create",f,{headers:{"Content-Type":"application/json"}})).data,onSuccess:()=>{h(),M.success("Oferta de trabajo creada exitosamente"),l.invalidateQueries({queryKey:["jobs"]}),t&&t()},onError:f=>{var g,m;M.error(((m=(g=f.response)==null?void 0:g.data)==null?void 0:m.message)||"Error al crear la oferta de trabajo")}}),c=async()=>{try{if(!n.title||!n.company||!n.location||!n.description||!n.jobType)return M.error("Por favor complete los campos obligatorios");const f={...n};s||(f.applicationDeadline=null),o(f)}catch(f){console.error("Error in handleJobCreation:",f),M.error("Error al crear la oferta de trabajo")}},h=()=>{r({title:"",company:"",location:"",description:"",requirements:"",salary:"",contactEmail:"",applicationDeadline:"",jobType:"full-time"}),a(!1)},d=f=>{const{name:g,value:m}=f.target;r({...n,[g]:m})};return e.role!=="administrador"?null:i.jsxs("div",{className:"bg-white rounded-lg shadow p-6 border-2 border-primary mb-6",children:[i.jsx("div",{className:"flex justify-between items-center mb-4",children:i.jsxs("h2",{className:"text-xl font-bold flex items-center",children:[i.jsx(wt,{className:"mr-2"})," Publicar Nueva Oferta de Trabajo"]})}),i.jsxs("div",{className:"space-y-4",children:[i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Título del Puesto*"}),i.jsxs("div",{className:"relative",children:[i.jsx("input",{type:"text",name:"title",value:n.title,onChange:d,placeholder:"Ej: Desarrollador Full Stack",className:"w-full p-3 pl-10 border rounded-lg",required:!0}),i.jsx(wt,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Empresa*"}),i.jsxs("div",{className:"relative",children:[i.jsx("input",{type:"text",name:"company",value:n.company,onChange:d,placeholder:"Ej: Tech Innovations S.A.",className:"w-full p-3 pl-10 border rounded-lg",required:!0}),i.jsx(Bp,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Ubicación*"}),i.jsxs("div",{className:"relative",children:[i.jsx("input",{type:"text",name:"location",value:n.location,onChange:d,placeholder:"Ej: Tuxtla Gutiérrez, Chiapas",className:"w-full p-3 pl-10 border rounded-lg",required:!0}),i.jsx(kc,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Tipo de Empleo*"}),i.jsxs("div",{className:"relative",children:[i.jsxs("select",{name:"jobType",value:n.jobType,onChange:d,className:"w-full p-3 pl-10 border rounded-lg appearance-none",required:!0,children:[i.jsx("option",{value:"full-time",children:"Tiempo Completo"}),i.jsx("option",{value:"part-time",children:"Medio Tiempo"}),i.jsx("option",{value:"contract",children:"Contrato"}),i.jsx("option",{value:"internship",children:"Pasantía"}),i.jsx("option",{value:"temporary",children:"Temporal"})]}),i.jsx(wt,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Descripción del Puesto*"}),i.jsxs("div",{className:"relative",children:[i.jsx("textarea",{name:"description",value:n.description,onChange:d,placeholder:"Describe las responsabilidades y detalles del puesto...",className:"w-full p-3 pl-10 border rounded-lg min-h-[120px]",required:!0}),i.jsx(Vn,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Requisitos"}),i.jsxs("div",{className:"relative",children:[i.jsx("textarea",{name:"requirements",value:n.requirements,onChange:d,placeholder:"Requisitos, habilidades o experiencia necesaria...",className:"w-full p-3 pl-10 border rounded-lg min-h-[100px]"}),i.jsx(Vn,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Salario (opcional)"}),i.jsxs("div",{className:"relative",children:[i.jsx("input",{type:"text",name:"salary",value:n.salary,onChange:d,placeholder:"Ej: $15,000 - $20,000 MXN mensual",className:"w-full p-3 pl-10 border rounded-lg"}),i.jsx(Wp,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium mb-1",children:"Email de Contacto"}),i.jsxs("div",{className:"relative",children:[i.jsx("input",{type:"email",name:"contactEmail",value:n.contactEmail,onChange:d,placeholder:"Ej: reclutamiento@empresa.com",className:"w-full p-3 pl-10 border rounded-lg"}),i.jsx(Hp,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{children:[i.jsxs("div",{className:"flex items-center mb-2",children:[i.jsx("input",{type:"checkbox",id:"enableDeadline",checked:s,onChange:f=>a(f.target.checked),className:"mr-2"}),i.jsx("label",{htmlFor:"enableDeadline",className:"block text-sm font-medium",children:"Establecer Fecha Límite de Aplicación"})]}),s&&i.jsxs("div",{className:"relative",children:[i.jsx("input",{type:"date",name:"applicationDeadline",value:n.applicationDeadline,onChange:d,className:"w-full p-3 pl-10 border rounded-lg",min:new Date().toISOString().split("T")[0]}),i.jsx(xa,{className:"absolute left-3 top-3 text-gray-400",size:18})]})]}),i.jsxs("div",{className:"flex justify-end items-center mt-6 pt-4 border-t",children:[i.jsxs("button",{onClick:h,className:"mr-3 flex items-center gap-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-100",children:[i.jsx(hr,{size:18}),"Cancelar"]}),i.jsx("button",{onClick:c,disabled:u,className:"flex items-center gap-1 bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary-dark transition-colors",children:u?i.jsxs(i.Fragment,{children:[i.jsx(Ae,{className:"animate-spin",size:18}),"Publicando..."]}):i.jsxs(i.Fragment,{children:[i.jsx(wt,{size:18}),"Publicar Oferta"]})})]})]})]})},oN=({jobPost:e})=>{var f,g;const{data:t}=G({queryKey:["authUser"]}),n=(t==null?void 0:t.role)==="administrador",r=(t==null?void 0:t._id)===e.author._id,s=Ne(),{mutate:a,isPending:l}=K({mutationFn:async()=>{await L.delete(`/jobs/${e._id}`)},onSuccess:()=>{s.invalidateQueries({queryKey:["jobs"]}),M.success("Oferta de trabajo eliminada")},onError:m=>{var v,j;M.error(((j=(v=m.response)==null?void 0:v.data)==null?void 0:j.message)||"Error al eliminar la oferta de trabajo")}}),o=()=>{window.confirm("¿Estás seguro de que quieres eliminar esta oferta de trabajo?")&&a()},u=m=>m?new Date(m).toLocaleDateString("es-ES",{year:"numeric",month:"long",day:"numeric"}):"No especificada",c=m=>{switch(m){case"active":return"bg-green-100 text-green-800";case"closed":return"bg-gray-100 text-gray-800";case"expired":return"bg-red-100 text-red-800";default:return"bg-blue-100 text-blue-800"}},h=m=>{switch(m){case"full-time":return"bg-blue-100 text-blue-800";case"part-time":return"bg-purple-100 text-purple-800";case"contract":return"bg-yellow-100 text-yellow-800";case"internship":return"bg-green-100 text-green-800";case"temporary":return"bg-orange-100 text-orange-800";default:return"bg-gray-100 text-gray-800"}},d=m=>{switch(m){case"full-time":return"Tiempo completo";case"part-time":return"Medio tiempo";case"contract":return"Contrato";case"internship":return"Pasantía";case"temporary":return"Temporal";default:return m}};return i.jsx("div",{className:"bg-white rounded-lg shadow mb-4 overflow-hidden",children:i.jsx("div",{className:"border-l-4 border-primary",children:i.jsxs("div",{className:"p-6",children:[i.jsxs("div",{className:"flex items-center justify-between mb-4",children:[i.jsxs("div",{className:"flex items-center",children:[i.jsx(U,{to:`/profile/${(f=e==null?void 0:e.author)==null?void 0:f.username}`,children:i.jsx("img",{src:e.author.profilePicture||"/avatar.png",alt:e.author.name,className:"size-10 rounded-full mr-3"})}),i.jsxs("div",{children:[i.jsx(U,{to:`/profile/${(g=e==null?void 0:e.author)==null?void 0:g.username}`,children:i.jsx("h3",{className:"font-semibold",children:e.author.name})}),i.jsx("p",{className:"text-xs text-info",children:e.author.headline}),i.jsx("p",{className:"text-xs text-info",children:En(new Date(e.createdAt),{addSuffix:!0})})]})]}),n&&r&&i.jsx("button",{onClick:o,className:"text-red-500 hover:text-red-700",children:l?i.jsx(Ae,{size:18,className:"animate-spin"}):i.jsx(va,{size:18})})]}),i.jsxs("div",{className:"flex flex-wrap gap-2 mb-4",children:[i.jsx("span",{className:`px-2 py-1 text-xs rounded-full ${c(e.status)}`,children:e.status==="active"?"Activa":e.status==="closed"?"Cerrada":"Expirada"}),i.jsx("span",{className:`px-2 py-1 text-xs rounded-full ${h(e.jobType)}`,children:d(e.jobType)})]}),i.jsx("h2",{className:"text-xl font-bold mb-3",children:e.title}),i.jsxs("div",{className:"flex flex-wrap gap-x-8 gap-y-2 mb-4",children:[i.jsxs("div",{className:"flex items-center text-gray-600",children:[i.jsx(Bp,{size:16,className:"mr-2"}),i.jsx("span",{children:e.company})]}),i.jsxs("div",{className:"flex items-center text-gray-600",children:[i.jsx(kc,{size:16,className:"mr-2"}),i.jsx("span",{children:e.location})]}),e.salary&&i.jsxs("div",{className:"flex items-center text-gray-600",children:[i.jsx(Wp,{size:16,className:"mr-2"}),i.jsx("span",{children:e.salary})]}),e.applicationDeadline&&i.jsxs("div",{className:"flex items-center text-gray-600",children:[i.jsx(xa,{size:16,className:"mr-2"}),i.jsxs("span",{children:["Fecha límite: ",u(e.applicationDeadline)]})]})]}),i.jsxs("div",{className:"mb-4",children:[i.jsx("h3",{className:"font-semibold mb-2",children:"Descripción"}),i.jsx("p",{className:"whitespace-pre-line",children:e.description})]}),e.requirements&&i.jsxs("div",{className:"mb-4",children:[i.jsx("h3",{className:"font-semibold mb-2",children:"Requisitos"}),i.jsx("p",{className:"whitespace-pre-line",children:e.requirements})]}),e.contactEmail&&i.jsxs("div",{className:"mt-6 p-4 bg-gray-50 rounded-lg",children:[i.jsx("h3",{className:"font-semibold mb-2",children:"Información de contacto"}),i.jsxs("div",{className:"flex items-center",children:[i.jsx(Hp,{size:16,className:"mr-2 text-primary"}),i.jsx("a",{href:`mailto:${e.contactEmail}`,className:"text-primary hover:underline",children:e.contactEmail})]})]}),e.applicationDeadline&&i.jsxs("div",{className:"mt-4 flex items-center text-sm text-gray-500",children:[i.jsx(fl,{size:14,className:"mr-1"}),i.jsx("span",{children:new Date(e.applicationDeadline)>new Date?`Postulaciones abiertas hasta el ${u(e.applicationDeadline)}`:`Fecha límite de postulación pasada (${u(e.applicationDeadline)})`})]})]})})})},uN=()=>{const{data:e}=G({queryKey:["authUser"]}),t=(e==null?void 0:e.role)==="egresado"||(e==null?void 0:e.role)==="administrador",n=(e==null?void 0:e.role)==="administrador",[r,s]=N.useState(!1),[a,l]=N.useState({status:"active",jobType:"all"}),[o,u]=N.useState(""),{data:c,isLoading:h,error:d}=G({queryKey:["jobs",a],queryFn:async()=>{let g=new URLSearchParams;return a.status!=="all"&&g.append("status",a.status),(await L.get(`/jobs?${g}`)).data},enabled:t});if(!t)return i.jsx("div",{className:"flex items-center justify-center h-96",children:i.jsxs("div",{className:"text-center",children:[i.jsx("h2",{className:"text-2xl font-bold text-gray-700 mb-2",children:"Acceso restringido"}),i.jsx("p",{className:"text-gray-600",children:"No tienes acceso a esta sección."})]})});const f=c?c.filter(g=>{const m=!o||g.title.toLowerCase().includes(o.toLowerCase())||g.company.toLowerCase().includes(o.toLowerCase())||g.location.toLowerCase().includes(o.toLowerCase())||g.description.toLowerCase().includes(o.toLowerCase()),v=a.jobType==="all"||g.jobType===a.jobType;return m&&v}):[];return i.jsxs("div",{className:"grid grid-cols-1 lg:grid-cols-4 gap-6",children:[i.jsx("div",{className:"hidden lg:block lg:col-span-1",children:i.jsx(Tn,{user:e})}),i.jsx("div",{className:"col-span-1 lg:col-span-3",children:i.jsxs("div",{className:"bg-white rounded-lg shadow p-6 mb-6",children:[i.jsxs("div",{className:"flex justify-between items-center mb-6",children:[i.jsxs("h1",{className:"text-2xl font-bold flex items-center",children:[i.jsx(wt,{className:"mr-2"})," Bolsa de Trabajos"]}),n&&i.jsxs("button",{onClick:()=>s(!r),className:"bg-primary text-white px-4 py-2 rounded-lg flex items-center gap-2",children:[r?i.jsx(ow,{size:20}):i.jsx(Kp,{size:20}),r?"Cerrar":"Nueva Oferta"]})]}),i.jsx("p",{className:"text-gray-600 mb-6",children:"Explora oportunidades laborales disponibles para egresados del ITTG."}),n&&r&&i.jsx(lN,{user:e,onComplete:()=>s(!1)}),i.jsxs("div",{className:"flex flex-wrap gap-4 mb-6",children:[i.jsxs("div",{className:"flex-grow relative",children:[i.jsx("input",{type:"text",placeholder:"Buscar ofertas de trabajo...",className:"w-full p-3 pl-10 pr-4 border rounded-lg",value:o,onChange:g=>u(g.target.value)}),i.jsx(Yp,{className:"absolute left-3 top-3 text-gray-400",size:18})]}),i.jsxs("div",{className:"flex items-center gap-2",children:[i.jsxs("div",{className:"flex items-center",children:[i.jsx(sw,{size:18,className:"mr-1 text-gray-500"}),i.jsx("span",{className:"text-gray-500 mr-2",children:"Filtros:"})]}),i.jsxs("select",{value:a.status,onChange:g=>l({...a,status:g.target.value}),className:"p-2 border rounded-lg",children:[i.jsx("option",{value:"active",children:"Activas"}),i.jsx("option",{value:"closed",children:"Cerradas"}),i.jsx("option",{value:"expired",children:"Expiradas"}),i.jsx("option",{value:"all",children:"Todas"})]}),i.jsxs("select",{value:a.jobType,onChange:g=>l({...a,jobType:g.target.value}),className:"p-2 border rounded-lg",children:[i.jsx("option",{value:"all",children:"Todos los tipos"}),i.jsx("option",{value:"full-time",children:"Tiempo Completo"}),i.jsx("option",{value:"part-time",children:"Medio Tiempo"}),i.jsx("option",{value:"contract",children:"Contrato"}),i.jsx("option",{value:"internship",children:"Pasantía"}),i.jsx("option",{value:"temporary",children:"Temporal"})]})]})]}),h?i.jsx("div",{className:"flex justify-center py-12",children:i.jsx(Ae,{className:"w-12 h-12 animate-spin text-primary"})}):d?i.jsx("div",{className:"bg-red-50 p-4 rounded-lg text-red-800",children:i.jsxs("p",{children:["Error al cargar las ofertas de trabajo: ",d.message]})}):f.length>0?i.jsx("div",{className:"space-y-6",children:f.map(g=>i.jsx(oN,{jobPost:g},g._id))}):i.jsxs("div",{className:"bg-white rounded-lg shadow p-8 text-center",children:[i.jsx(wt,{size:64,className:"mx-auto text-blue-500"}),i.jsx("h2",{className:"text-2xl font-bold mb-4 text-gray-800",children:"No hay ofertas de trabajo disponibles"}),i.jsx("p",{className:"text-gray-600 mb-6",children:o?"No se encontraron resultados para tu búsqueda. Intenta con otros términos.":n?"Agrega la primera oferta de trabajo usando el botón 'Nueva Oferta'.":"No hay ofertas de trabajo publicadas actualmente."})]})]})})]})},cN=({isOpen:e,onClose:t,user:n})=>{var j;const r=Ne(),[s,a]=N.useState(1),[l,o]=N.useState((n==null?void 0:n.companyInfo)||{}),[u,c]=N.useState(!!((j=n==null?void 0:n.companyInfo)!=null&&j.website)),[h,d]=N.useState(!1),f=()=>s===1?!!l.companyName:!0,{mutate:g}=K({mutationFn:async()=>{const p={...l};return u||(p.website=""),L.put("/users/complete-first-login",{companyInfo:p})},onSuccess:()=>{M.success("¡Información de la empresa guardada exitosamente!"),r.invalidateQueries(["authUser"]),d(!1),t&&t()},onError:p=>{var y,x;M.error(((x=(y=p.response)==null?void 0:y.data)==null?void 0:x.message)||"Error al guardar la información"),d(!1)}}),m=()=>{d(!0),g()},v=()=>{window.confirm("¿Estás seguro de que deseas omitir el cuestionario? La información de tu empresa no estará completa.")&&(d(!0),g())};return e?i.jsx("div",{className:"fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 flex items-center justify-center p-4",children:i.jsxs("div",{className:"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto",children:[i.jsx("div",{className:"bg-primary text-white px-6 py-4 flex justify-between items-center rounded-t-lg",children:i.jsxs("div",{className:"flex items-center",children:[i.jsx(wt,{className:"mr-2"}),i.jsx("h2",{className:"text-xl font-bold",children:"Configuración de Información de Empresa"})]})}),i.jsxs("div",{className:"p-6",children:[i.jsxs("div",{className:"mb-6 flex justify-between items-center",children:[i.jsxs("div",{className:"flex items-center",children:[i.jsx("div",{className:`w-8 h-8 rounded-full flex items-center justify-center ${s>=1?"bg-primary text-white":"bg-gray-200"}`,children:"1"}),i.jsx("div",{className:`h-1 w-12 ${s>=2?"bg-primary":"bg-gray-200"}`}),i.jsx("div",{className:`w-8 h-8 rounded-full flex items-center justify-center ${s>=2?"bg-primary text-white":"bg-gray-200"}`,children:"2"})]}),i.jsxs("div",{children:["Paso ",s," de 2"]})]}),s===1&&i.jsxs("div",{children:[i.jsx("h3",{className:"text-lg font-semibold mb-4",children:"Información Básica de la Empresa"}),i.jsx("p",{className:"text-gray-600 mb-4",children:"Como usuario empresario, necesitamos algunos detalles sobre su negocio para mostrar en su perfil. Esta información ayudará a los egresados a conocer mejor su empresa."}),i.jsxs("div",{className:"space-y-4",children:[i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Nombre de la Empresa *"}),i.jsx("input",{type:"text",value:l.companyName||"",onChange:p=>o({...l,companyName:p.target.value}),className:"mt-1 p-2 w-full border rounded-md",required:!0}),i.jsx("p",{className:"text-xs text-gray-500 mt-1",children:"Campo obligatorio"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Industria"}),i.jsx("input",{type:"text",value:l.industry||"",onChange:p=>o({...l,industry:p.target.value}),className:"mt-1 p-2 w-full border rounded-md"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Año de Fundación"}),i.jsxs("div",{className:"relative",children:[i.jsx("div",{className:"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none",children:i.jsx(xa,{className:"h-5 w-5 text-gray-400"})}),i.jsx("input",{type:"number",min:"1900",max:new Date().getFullYear(),value:l.foundedYear||"",onChange:p=>o({...l,foundedYear:p.target.value}),className:"mt-1 p-2 pl-10 w-full border rounded-md",placeholder:new Date().getFullYear()})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Ubicación"}),i.jsx("input",{type:"text",value:l.location||"",onChange:p=>o({...l,location:p.target.value}),className:"mt-1 p-2 w-full border rounded-md"})]})]})]}),s===2&&i.jsxs("div",{children:[i.jsx("h3",{className:"text-lg font-semibold mb-4",children:"Detalles Adicionales"}),i.jsx("p",{className:"text-gray-600 mb-4",children:"Proporcione información adicional que ayude a presentar mejor su empresa a los egresados."}),i.jsxs("div",{className:"space-y-4",children:[i.jsxs("div",{children:[i.jsxs("div",{className:"flex items-center justify-between mb-2",children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Sitio Web"}),i.jsxs("div",{className:"flex items-center",children:[i.jsx("span",{className:"text-sm text-gray-500 mr-2",children:u?"Activado":"Desactivado"}),i.jsxs("label",{className:"relative inline-flex items-center cursor-pointer",children:[i.jsx("input",{type:"checkbox",checked:u,onChange:p=>c(p.target.checked),className:"sr-only peer"}),i.jsx("div",{className:"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"})]})]})]}),u&&i.jsxs("div",{className:"relative",children:[i.jsx("div",{className:"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none",children:i.jsx(bc,{className:"h-5 w-5 text-gray-400"})}),i.jsx("input",{type:"url",value:l.website||"",onChange:p=>o({...l,website:p.target.value}),className:"mt-1 p-2 pl-10 w-full border rounded-md",placeholder:"https://"})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Cantidad de Empleados"}),i.jsxs("select",{value:l.employees||"",onChange:p=>o({...l,employees:p.target.value}),className:"mt-1 p-2 w-full border rounded-md",children:[i.jsx("option",{value:"",children:"Seleccionar"}),i.jsx("option",{value:"1-10",children:"1-10 empleados"}),i.jsx("option",{value:"11-50",children:"11-50 empleados"}),i.jsx("option",{value:"51-200",children:"51-200 empleados"}),i.jsx("option",{value:"201-500",children:"201-500 empleados"}),i.jsx("option",{value:"501+",children:"501+ empleados"})]})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Descripción"}),i.jsx("textarea",{value:l.description||"",onChange:p=>o({...l,description:p.target.value}),rows:"4",className:"mt-1 p-2 w-full border rounded-md",placeholder:"Describa brevemente su empresa, actividades y misión..."})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Email de Contacto"}),i.jsx("input",{type:"email",value:l.contactEmail||"",onChange:p=>o({...l,contactEmail:p.target.value}),className:"mt-1 p-2 w-full border rounded-md",placeholder:"contacto@empresa.com"})]}),i.jsxs("div",{children:[i.jsx("label",{className:"block text-sm font-medium text-gray-700",children:"Teléfono de Contacto"}),i.jsx("input",{type:"tel",value:l.contactPhone||"",onChange:p=>o({...l,contactPhone:p.target.value}),className:"mt-1 p-2 w-full border rounded-md",placeholder:"+52 (123) 456-7890"})]})]})]})]}),i.jsxs("div",{className:"px-6 py-4 bg-gray-50 flex justify-between items-center rounded-b-lg",children:[s===1?i.jsx("button",{onClick:v,className:"text-gray-500 hover:text-gray-700",disabled:h,children:"Omitir por ahora"}):i.jsxs("button",{onClick:()=>a(s-1),className:"flex items-center text-gray-700 hover:text-gray-900",disabled:h,children:[i.jsx(X1,{size:16,className:"mr-1"}),"Anterior"]}),s<2?i.jsxs("button",{onClick:()=>a(s+1),disabled:!f()||h,className:`flex items-center bg-primary text-white px-4 py-2 rounded-md ${f()?"hover:bg-primary-dark":"opacity-50 cursor-not-allowed"}`,children:["Siguiente",i.jsx(J1,{size:16,className:"ml-1"})]}):i.jsx("button",{onClick:m,disabled:h,className:"flex items-center bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark",children:h?i.jsxs(i.Fragment,{children:[i.jsxs("svg",{className:"animate-spin -ml-1 mr-2 h-4 w-4 text-white",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",children:[i.jsx("circle",{className:"opacity-25",cx:"12",cy:"12",r:"10",stroke:"currentColor",strokeWidth:"4"}),i.jsx("path",{className:"opacity-75",fill:"currentColor",d:"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"})]}),"Guardando..."]}):i.jsxs(i.Fragment,{children:[i.jsx(nw,{size:16,className:"mr-1"}),"Completar Configuración"]})})]})]})}):null};function dN(){const[e,t]=N.useState(!1),{data:n,isLoading:r}=G({queryKey:["authUser"],queryFn:async()=>{var s,a;try{return(await L.get("/auth/me")).data}catch(l){return l.response&&l.response.status===401||M.error(((a=(s=l.response)==null?void 0:s.data)==null?void 0:a.message)||"Something went wrong"),null}},retry:!1,refetchOnWindowFocus:!0});return N.useEffect(()=>{n&&n.role==="empresario"&&n.isFirstLogin?t(!0):t(!1)},[n]),r?i.jsx("div",{className:"min-h-screen flex items-center justify-center",children:i.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-primary"})}):i.jsxs(pw,{children:[e&&i.jsx(cN,{isOpen:e,onClose:()=>t(!1),user:n}),i.jsxs(Rx,{children:[i.jsx(at,{path:"/",element:n?i.jsx(z2,{}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/login",element:n?i.jsx(Ge,{to:"/"}):i.jsx(I2,{})}),i.jsx(at,{path:"/signup",element:n?i.jsx(Ge,{to:"/"}):i.jsx($2,{})}),i.jsx(at,{path:"/notifications",element:n?i.jsx(q2,{}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/network",element:n?i.jsx(Q2,{}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/projects",element:n?i.jsx(rN,{}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/announcements",element:n?n.role==="administrador"||n.role==="egresado"?i.jsx(iN,{}):i.jsx(Ge,{to:"/"}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/jobs",element:n?n.role==="administrador"||n.role==="egresado"?i.jsx(uN,{}):i.jsx(Ge,{to:"/"}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/post/:postId",element:n?i.jsx(H2,{}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/profile/:username",element:n?i.jsx(eN,{}):i.jsx(Ge,{to:"/login"})}),i.jsx(at,{path:"/admin",element:n&&n.role==="administrador"?i.jsx(tN,{}):i.jsx(Ge,{to:"/"})})]}),i.jsx(aj,{position:"top-center",reverseOrder:!1,toastOptions:{duration:3e3,style:{background:"#363636",color:"#fff"}}})]})}const fN=new tv;Vm(document.getElementById("root")).render(i.jsx(N.StrictMode,{children:i.jsx(Lx,{children:i.jsx(iv,{client:fN,children:i.jsx(dN,{})})})}));

================
File: frontend/dist/assets/index-Ddr-0FVO.css
================
*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html,:host{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}:root,[data-theme]{background-color:var(--fallback-b1,oklch(var(--b1)/1));color:var(--fallback-bc,oklch(var(--bc)/1))}@supports not (color: oklch(0% 0 0)){:root{color-scheme:light;--fallback-p: #491eff;--fallback-pc: #d4dbff;--fallback-s: #ff41c7;--fallback-sc: #fff9fc;--fallback-a: #00cfbd;--fallback-ac: #00100d;--fallback-n: #2b3440;--fallback-nc: #d7dde4;--fallback-b1: #ffffff;--fallback-b2: #e5e6e6;--fallback-b3: #e5e6e6;--fallback-bc: #1f2937;--fallback-in: #00b3f0;--fallback-inc: #000000;--fallback-su: #00ca92;--fallback-suc: #000000;--fallback-wa: #ffc22d;--fallback-wac: #000000;--fallback-er: #ff6f70;--fallback-erc: #000000}@media (prefers-color-scheme: dark){:root{color-scheme:dark;--fallback-p: #7582ff;--fallback-pc: #050617;--fallback-s: #ff71cf;--fallback-sc: #190211;--fallback-a: #00c7b5;--fallback-ac: #000e0c;--fallback-n: #2a323c;--fallback-nc: #a6adbb;--fallback-b1: #1d232a;--fallback-b2: #191e24;--fallback-b3: #15191e;--fallback-bc: #a6adbb;--fallback-in: #00b3f0;--fallback-inc: #000000;--fallback-su: #00ca92;--fallback-suc: #000000;--fallback-wa: #ffc22d;--fallback-wac: #000000;--fallback-er: #ff6f70;--fallback-erc: #000000}}}html{-webkit-tap-highlight-color:transparent}*{scrollbar-color:color-mix(in oklch,currentColor 35%,transparent) transparent}*:hover{scrollbar-color:color-mix(in oklch,currentColor 60%,transparent) transparent}:root{--p: 51.5585% .163202 254.728368;--b2: 89.3807% .003842 91.446797;--b3: 82.6531% .003553 91.446797;--bc: 19.2216% .000826 91.446797;--pc: 90.3117% .03264 254.728368;--sc: 20% 0 0;--ac: 14.8827% .029693 136.197249;--nc: 80% 0 0;--inc: 89.6386% 0 0;--suc: 89.9518% .024364 154.826304;--wac: 17.0038% .026735 85.679027;--erc: 90.7157% .042521 27.744493;--rounded-box: 1rem;--rounded-btn: .5rem;--rounded-badge: 1.9rem;--animation-btn: .25s;--animation-input: .2s;--btn-focus-scale: .95;--border-btn: 1px;--tab-border: 1px;--tab-radius: .5rem;--s: 100% 0 0;--a: 74.4135% .148464 136.197249;--n: 0% 0 0;--b1: 96.1082% .004132 91.446797;--in: 48.1931% 0 0;--su: 49.7588% .121822 154.826304;--wa: 85.0191% .133674 85.679027;--er: 53.5786% .212606 27.744493}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }.alert{display:grid;width:100%;grid-auto-flow:row;align-content:flex-start;align-items:center;justify-items:center;gap:1rem;text-align:center;border-radius:var(--rounded-box, 1rem);border-width:1px;--tw-border-opacity: 1;border-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));padding:1rem;--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--alert-bg: var(--fallback-b2,oklch(var(--b2)/1));--alert-bg-mix: var(--fallback-b1,oklch(var(--b1)/1));background-color:var(--alert-bg)}@media (min-width: 640px){.alert{grid-auto-flow:column;grid-template-columns:auto minmax(auto,1fr);justify-items:start;text-align:start}}.avatar{position:relative;display:inline-flex}.avatar>div{display:block;aspect-ratio:1 / 1;overflow:hidden}.avatar img{height:100%;width:100%;-o-object-fit:cover;object-fit:cover}.avatar.placeholder>div{display:flex;align-items:center;justify-content:center}.badge{display:inline-flex;align-items:center;justify-content:center;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(0,0,.2,1);transition-duration:.2s;height:1.25rem;font-size:.875rem;line-height:1.25rem;width:-moz-fit-content;width:fit-content;padding-left:.563rem;padding-right:.563rem;border-radius:var(--rounded-badge, 1.9rem);border-width:1px;--tw-border-opacity: 1;border-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)))}@media (hover:hover){.label a:hover{--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)))}.menu li>*:not(ul,.menu-title,details,.btn):active,.menu li>*:not(ul,.menu-title,details,.btn).active,.menu li>details>summary:active{--tw-bg-opacity: 1;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));--tw-text-opacity: 1;color:var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)))}.tab:hover{--tw-text-opacity: 1}.table tr.hover:hover,.table tr.hover:nth-child(2n):hover{--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))}}.btn{display:inline-flex;height:3rem;min-height:3rem;flex-shrink:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-wrap:wrap;align-items:center;justify-content:center;border-radius:var(--rounded-btn, .5rem);border-color:transparent;border-color:oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));padding-left:1rem;padding-right:1rem;text-align:center;font-size:.875rem;line-height:1em;gap:.5rem;font-weight:600;text-decoration-line:none;transition-duration:.2s;transition-timing-function:cubic-bezier(0,0,.2,1);border-width:var(--border-btn, 1px);transition-property:color,background-color,border-color,opacity,box-shadow,transform;--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);outline-color:var(--fallback-bc,oklch(var(--bc)/1));background-color:oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));--tw-bg-opacity: 1;--tw-border-opacity: 1}.btn-disabled,.btn[disabled],.btn:disabled{pointer-events:none}:where(.btn:is(input[type=checkbox])),:where(.btn:is(input[type=radio])){width:auto;-webkit-appearance:none;-moz-appearance:none;appearance:none}.btn:is(input[type=checkbox]):after,.btn:is(input[type=radio]):after{--tw-content: attr(aria-label);content:var(--tw-content)}.checkbox{flex-shrink:0;--chkbg: var(--fallback-bc,oklch(var(--bc)/1));--chkfg: var(--fallback-b1,oklch(var(--b1)/1));height:1.5rem;width:1.5rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:var(--rounded-btn, .5rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));--tw-border-opacity: .2}@media (hover: hover){.btm-nav>*.disabled:hover,.btm-nav>*[disabled]:hover{pointer-events:none;--tw-border-opacity: 0;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));--tw-bg-opacity: .1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--tw-text-opacity: .2}.btn:hover{--tw-border-opacity: 1;border-color:var(--fallback-b3,oklch(var(--b3)/var(--tw-border-opacity)));--tw-bg-opacity: 1;background-color:var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)))}@supports (color: color-mix(in oklab,black,black)){.btn:hover{background-color:color-mix(in oklab,oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,black);border-color:color-mix(in oklab,oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,black)}}@supports not (color: oklch(0% 0 0)){.btn:hover{background-color:var(--btn-color, var(--fallback-b2));border-color:var(--btn-color, var(--fallback-b2))}}.btn.glass:hover{--glass-opacity: 25%;--glass-border-opacity: 15%}.btn-outline.btn-primary:hover{--tw-text-opacity: 1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)))}@supports (color: color-mix(in oklab,black,black)){.btn-outline.btn-primary:hover{background-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black);border-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black)}}.btn-disabled:hover,.btn[disabled]:hover,.btn:disabled:hover{--tw-border-opacity: 0;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));--tw-bg-opacity: .2;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--tw-text-opacity: .2}@supports (color: color-mix(in oklab,black,black)){.btn:is(input[type=checkbox]:checked):hover,.btn:is(input[type=radio]:checked):hover{background-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black);border-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black)}}.tab[disabled],.tab[disabled]:hover{cursor:not-allowed;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--tw-text-opacity: .2}}.label{display:flex;-webkit-user-select:none;-moz-user-select:none;user-select:none;align-items:center;justify-content:space-between;padding:.5rem .25rem}.indicator{position:relative;display:inline-flex;width:-moz-max-content;width:max-content}.indicator :where(.indicator-item){z-index:1;position:absolute;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));white-space:nowrap}.input{flex-shrink:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:3rem;padding-left:1rem;padding-right:1rem;font-size:1rem;line-height:2;line-height:1.5rem;border-radius:var(--rounded-btn, .5rem);border-width:1px;border-color:transparent;--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))}.input[type=number]::-webkit-inner-spin-button,.input-md[type=number]::-webkit-inner-spin-button{margin-top:-1rem;margin-bottom:-1rem;margin-inline-end:-1rem}.link{cursor:pointer;text-decoration-line:underline}.menu li.disabled{cursor:not-allowed;-webkit-user-select:none;-moz-user-select:none;user-select:none;color:var(--fallback-bc,oklch(var(--bc)/.3))}:where(.menu li) .badge{justify-self:end}.modal{pointer-events:none;position:fixed;top:0;right:0;bottom:0;left:0;margin:0;display:grid;height:100%;max-height:none;width:100%;max-width:none;justify-items:center;padding:0;opacity:0;overscroll-behavior:contain;z-index:999;background-color:transparent;color:inherit;transition-duration:.2s;transition-timing-function:cubic-bezier(0,0,.2,1);transition-property:transform,opacity,visibility;overflow-y:hidden}:where(.modal){align-items:center}.modal-open,.modal:target,.modal-toggle:checked+.modal,.modal[open]{pointer-events:auto;visibility:visible;opacity:1}:root:has(:is(.modal-open,.modal:target,.modal-toggle:checked+.modal,.modal[open])){overflow:hidden;scrollbar-gutter:stable}.select{display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:3rem;min-height:3rem;padding-inline-start:1rem;padding-inline-end:2.5rem;font-size:.875rem;line-height:1.25rem;line-height:2;border-radius:var(--rounded-btn, .5rem);border-width:1px;border-color:transparent;--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)));background-image:linear-gradient(45deg,transparent 50%,currentColor 50%),linear-gradient(135deg,currentColor 50%,transparent 50%);background-position:calc(100% - 20px) calc(1px + 50%),calc(100% - 16.1px) calc(1px + 50%);background-size:4px 4px,4px 4px;background-repeat:no-repeat}.select[multiple]{height:auto}.steps .step{display:grid;grid-template-columns:repeat(1,minmax(0,1fr));grid-template-columns:auto;grid-template-rows:repeat(2,minmax(0,1fr));grid-template-rows:40px 1fr;place-items:center;text-align:center;min-width:4rem}.tabs-lifted:has(.tab-content[class^=rounded-]) .tab:first-child:not(:is(.tab-active,[aria-selected=true])),.tabs-lifted:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(:is(.tab-active,[aria-selected=true])){border-bottom-color:transparent}.tab{position:relative;grid-row-start:1;display:inline-flex;height:2rem;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;flex-wrap:wrap;align-items:center;justify-content:center;text-align:center;font-size:.875rem;line-height:1.25rem;line-height:2;--tab-padding: 1rem;--tw-text-opacity: .5;--tab-color: var(--fallback-bc,oklch(var(--bc)/1));--tab-bg: var(--fallback-b1,oklch(var(--b1)/1));--tab-border-color: var(--fallback-b3,oklch(var(--b3)/1));color:var(--tab-color);padding-inline-start:var(--tab-padding, 1rem);padding-inline-end:var(--tab-padding, 1rem)}.tab:is(input[type=radio]){width:auto;border-bottom-right-radius:0;border-bottom-left-radius:0}.tab:is(input[type=radio]):after{--tw-content: attr(aria-label);content:var(--tw-content)}.tab:not(input):empty{cursor:default;grid-column-start:span 9999}input.tab:checked+.tab-content,:is(.tab-active,[aria-selected=true])+.tab-content{display:block}.table{position:relative;width:100%;border-radius:var(--rounded-box, 1rem);text-align:left;font-size:.875rem;line-height:1.25rem}.table :where(.table-pin-rows thead tr){position:sticky;top:0;z-index:1;--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))}.table :where(.table-pin-rows tfoot tr){position:sticky;bottom:0;z-index:1;--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))}.table :where(.table-pin-cols tr th){position:sticky;left:0;right:0;--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))}.textarea{min-height:3rem;flex-shrink:1;padding:.5rem 1rem;font-size:.875rem;line-height:1.25rem;line-height:2;border-radius:var(--rounded-btn, .5rem);border-width:1px;border-color:transparent;--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))}.toast{position:fixed;display:flex;min-width:-moz-fit-content;min-width:fit-content;flex-direction:column;white-space:nowrap;gap:.5rem;padding:1rem}.toggle{flex-shrink:0;--tglbg: var(--fallback-b1,oklch(var(--b1)/1));--handleoffset: 1.5rem;--handleoffsetcalculator: calc(var(--handleoffset) * -1);--togglehandleborder: 0 0;height:1.5rem;width:3rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:var(--rounded-badge, 1.9rem);border-width:1px;border-color:currentColor;background-color:currentColor;color:var(--fallback-bc,oklch(var(--bc)/.5));transition:background,box-shadow var(--animation-input, .2s) ease-out;box-shadow:var(--handleoffsetcalculator) 0 0 2px var(--tglbg) inset,0 0 0 2px var(--tglbg) inset,var(--togglehandleborder)}.avatar-group :where(.avatar){overflow:hidden;border-radius:9999px;border-width:4px;--tw-border-opacity: 1;border-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity)))}.btm-nav>*:where(.active){border-top-width:2px;--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))}.btm-nav>*.disabled,.btm-nav>*[disabled]{pointer-events:none;--tw-border-opacity: 0;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));--tw-bg-opacity: .1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--tw-text-opacity: .2}.btm-nav>* .label{font-size:1rem;line-height:1.5rem}@media (prefers-reduced-motion: no-preference){.btn{animation:button-pop var(--animation-btn, .25s) ease-out}}.btn:active:hover,.btn:active:focus{animation:button-pop 0s ease-out;transform:scale(var(--btn-focus-scale, .97))}@supports not (color: oklch(0% 0 0)){.btn{background-color:var(--btn-color, var(--fallback-b2));border-color:var(--btn-color, var(--fallback-b2))}.btn-primary{--btn-color: var(--fallback-p)}}@supports (color: color-mix(in oklab,black,black)){.btn-outline.btn-primary.btn-active{background-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black);border-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,black)}}.btn:focus-visible{outline-style:solid;outline-width:2px;outline-offset:2px}.btn-primary{--tw-text-opacity: 1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)));outline-color:var(--fallback-p,oklch(var(--p)/1))}@supports (color: oklch(0% 0 0)){.btn-primary{--btn-color: var(--p)}}.btn.glass{--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);outline-color:currentColor}.btn.glass.btn-active{--glass-opacity: 25%;--glass-border-opacity: 15%}.btn-outline.btn-primary{--tw-text-opacity: 1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)))}.btn-outline.btn-primary.btn-active{--tw-text-opacity: 1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)))}.btn.btn-disabled,.btn[disabled],.btn:disabled{--tw-border-opacity: 0;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));--tw-bg-opacity: .2;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--tw-text-opacity: .2}.btn:is(input[type=checkbox]:checked),.btn:is(input[type=radio]:checked){--tw-border-opacity: 1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)));--tw-bg-opacity: 1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));--tw-text-opacity: 1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity)))}.btn:is(input[type=checkbox]:checked):focus-visible,.btn:is(input[type=radio]:checked):focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/1))}@keyframes button-pop{0%{transform:scale(var(--btn-focus-scale, .98))}40%{transform:scale(1.02)}to{transform:scale(1)}}.checkbox:focus{box-shadow:none}.checkbox:focus-visible{outline-style:solid;outline-width:2px;outline-offset:2px;outline-color:var(--fallback-bc,oklch(var(--bc)/1))}.checkbox:disabled{border-width:0px;cursor:not-allowed;border-color:transparent;--tw-bg-opacity: 1;background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));opacity:.2}.checkbox:checked,.checkbox[aria-checked=true]{background-repeat:no-repeat;animation:checkmark var(--animation-input, .2s) ease-out;background-color:var(--chkbg);background-image:linear-gradient(-45deg,transparent 65%,var(--chkbg) 65.99%),linear-gradient(45deg,transparent 75%,var(--chkbg) 75.99%),linear-gradient(-45deg,var(--chkbg) 40%,transparent 40.99%),linear-gradient(45deg,var(--chkbg) 30%,var(--chkfg) 30.99%,var(--chkfg) 40%,transparent 40.99%),linear-gradient(-45deg,var(--chkfg) 50%,var(--chkbg) 50.99%)}.checkbox:indeterminate{--tw-bg-opacity: 1;background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity)));background-repeat:no-repeat;animation:checkmark var(--animation-input, .2s) ease-out;background-image:linear-gradient(90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(-90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(0deg,var(--chkbg) 43%,var(--chkfg) 43%,var(--chkfg) 57%,var(--chkbg) 57%)}@keyframes checkmark{0%{background-position-y:5px}50%{background-position-y:-2px}to{background-position-y:0}}.input input{--tw-bg-opacity: 1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)));background-color:transparent}.input input:focus{outline:2px solid transparent;outline-offset:2px}.input[list]::-webkit-calendar-picker-indicator{line-height:1em}.input-bordered{border-color:var(--fallback-bc,oklch(var(--bc)/.2))}.input:focus,.input:focus-within{box-shadow:none;border-color:var(--fallback-bc,oklch(var(--bc)/.2));outline-style:solid;outline-width:2px;outline-offset:2px;outline-color:var(--fallback-bc,oklch(var(--bc)/.2))}.input:has(>input[disabled]),.input-disabled,.input:disabled,.input[disabled]{cursor:not-allowed;--tw-border-opacity: 1;border-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));color:var(--fallback-bc,oklch(var(--bc)/.4))}.input:has(>input[disabled])::-moz-placeholder,.input-disabled::-moz-placeholder,.input:disabled::-moz-placeholder,.input[disabled]::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));--tw-placeholder-opacity: .2}.input:has(>input[disabled])::placeholder,.input-disabled::placeholder,.input:disabled::placeholder,.input[disabled]::placeholder{color:var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));--tw-placeholder-opacity: .2}.input:has(>input[disabled])>input[disabled]{cursor:not-allowed}.input::-webkit-date-and-time-value{text-align:inherit}.join>:where(*:not(:first-child)):is(.btn){margin-inline-start:calc(var(--border-btn) * -1)}.link:focus{outline:2px solid transparent;outline-offset:2px}.link:focus-visible{outline:2px solid currentColor;outline-offset:2px}.loading{pointer-events:none;display:inline-block;aspect-ratio:1 / 1;width:1.5rem;background-color:currentColor;-webkit-mask-size:100%;mask-size:100%;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-position:center;mask-position:center;-webkit-mask-image:url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");mask-image:url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E")}.menu li>*:not(ul,.menu-title,details,.btn):active,.menu li>*:not(ul,.menu-title,details,.btn).active,.menu li>details>summary:active{--tw-bg-opacity: 1;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity)));--tw-text-opacity: 1;color:var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity)))}.mockup-phone .display{overflow:hidden;border-radius:40px;margin-top:-25px}.mockup-browser .mockup-browser-toolbar .input{position:relative;margin-left:auto;margin-right:auto;display:block;height:1.75rem;width:24rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));padding-left:2rem;direction:ltr}.mockup-browser .mockup-browser-toolbar .input:before{content:"";position:absolute;left:.5rem;top:50%;aspect-ratio:1 / 1;height:.75rem;--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;border-width:2px;border-color:currentColor;opacity:.6}.mockup-browser .mockup-browser-toolbar .input:after{content:"";position:absolute;left:1.25rem;top:50%;height:.5rem;--tw-translate-y: 25%;--tw-rotate: -45deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;border-width:1px;border-color:currentColor;opacity:.6}.modal:not(dialog:not(.modal-open)),.modal::backdrop{background-color:#0006;animation:modal-pop .2s ease-out}.modal-open .modal-box,.modal-toggle:checked+.modal .modal-box,.modal:target .modal-box,.modal[open] .modal-box{--tw-translate-y: 0px;--tw-scale-x: 1;--tw-scale-y: 1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes modal-pop{0%{opacity:0}}@keyframes progress-loading{50%{background-position-x:-115%}}@keyframes radiomark{0%{box-shadow:0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset,0 0 0 12px var(--fallback-b1,oklch(var(--b1)/1)) inset}50%{box-shadow:0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset,0 0 0 3px var(--fallback-b1,oklch(var(--b1)/1)) inset}to{box-shadow:0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset,0 0 0 4px var(--fallback-b1,oklch(var(--b1)/1)) inset}}@keyframes rating-pop{0%{transform:translateY(-.125em)}40%{transform:translateY(-.125em)}to{transform:translateY(0)}}.select:focus{box-shadow:none;border-color:var(--fallback-bc,oklch(var(--bc)/.2));outline-style:solid;outline-width:2px;outline-offset:2px;outline-color:var(--fallback-bc,oklch(var(--bc)/.2))}.select-disabled,.select:disabled,.select[disabled]{cursor:not-allowed;--tw-border-opacity: 1;border-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));color:var(--fallback-bc,oklch(var(--bc)/.4))}.select-disabled::-moz-placeholder,.select:disabled::-moz-placeholder,.select[disabled]::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));--tw-placeholder-opacity: .2}.select-disabled::placeholder,.select:disabled::placeholder,.select[disabled]::placeholder{color:var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));--tw-placeholder-opacity: .2}.select-multiple,.select[multiple],.select[size].select:not([size="1"]){background-image:none;padding-right:1rem}[dir=rtl] .select{background-position:calc(0% + 12px) calc(1px + 50%),calc(0% + 16px) calc(1px + 50%)}@keyframes skeleton{0%{background-position:150%}to{background-position:-50%}}.steps .step:before{top:0;grid-column-start:1;grid-row-start:1;height:.5rem;width:100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity: 1;background-color:var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));content:"";margin-inline-start:-100%}.steps .step:after{content:counter(step);counter-increment:step;z-index:1;position:relative;grid-column-start:1;grid-row-start:1;display:grid;height:2rem;width:2rem;place-items:center;place-self:center;border-radius:9999px;--tw-bg-opacity: 1;background-color:var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)))}.steps .step:first-child:before{content:none}.steps .step[data-content]:after{content:attr(data-content)}.tabs-lifted>.tab:focus-visible{border-end-end-radius:0;border-end-start-radius:0}.tab:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]),.tab:is(input:checked){border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));--tw-border-opacity: 1;--tw-text-opacity: 1}.tab:focus{outline:2px solid transparent;outline-offset:2px}.tab:focus-visible{outline:2px solid currentColor;outline-offset:-5px}.tab-disabled,.tab[disabled]{cursor:not-allowed;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));--tw-text-opacity: .2}.tabs-bordered>.tab{border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));--tw-border-opacity: .2;border-style:solid;border-bottom-width:calc(var(--tab-border, 1px) + 1px)}.tabs-lifted>.tab{border:var(--tab-border, 1px) solid transparent;border-width:0 0 var(--tab-border, 1px) 0;border-start-start-radius:var(--tab-radius, .5rem);border-start-end-radius:var(--tab-radius, .5rem);border-bottom-color:var(--tab-border-color);padding-inline-start:var(--tab-padding, 1rem);padding-inline-end:var(--tab-padding, 1rem);padding-top:var(--tab-border, 1px)}.tabs-lifted>.tab:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]),.tabs-lifted>.tab:is(input:checked){background-color:var(--tab-bg);border-width:var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);border-inline-start-color:var(--tab-border-color);border-inline-end-color:var(--tab-border-color);border-top-color:var(--tab-border-color);padding-inline-start:calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));padding-inline-end:calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));padding-bottom:var(--tab-border, 1px);padding-top:0}.tabs-lifted>.tab:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]):before,.tabs-lifted>.tab:is(input:checked):before{z-index:1;content:"";display:block;position:absolute;width:calc(100% + var(--tab-radius, .5rem) * 2);height:var(--tab-radius, .5rem);bottom:0;background-size:var(--tab-radius, .5rem);background-position:top left,top right;background-repeat:no-repeat;--tab-grad: calc(69% - var(--tab-border, 1px));--radius-start: radial-gradient( circle at top left, transparent var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad) + .25px), var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)), var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + .25px) );--radius-end: radial-gradient( circle at top right, transparent var(--tab-grad), var(--tab-border-color) calc(var(--tab-grad) + .25px), var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)), var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + .25px) );background-image:var(--radius-start),var(--radius-end)}.tabs-lifted>.tab:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]):first-child:before,.tabs-lifted>.tab:is(input:checked):first-child:before{background-image:var(--radius-end);background-position:top right}[dir=rtl] .tabs-lifted>.tab:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]):first-child:before,[dir=rtl] .tabs-lifted>.tab:is(input:checked):first-child:before{background-image:var(--radius-start);background-position:top left}.tabs-lifted>.tab:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]):last-child:before,.tabs-lifted>.tab:is(input:checked):last-child:before{background-image:var(--radius-start);background-position:top left}[dir=rtl] .tabs-lifted>.tab:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]):last-child:before,[dir=rtl] .tabs-lifted>.tab:is(input:checked):last-child:before{background-image:var(--radius-end);background-position:top right}.tabs-lifted>:is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled])+.tabs-lifted :is(.tab-active,[aria-selected=true]):not(.tab-disabled):not([disabled]):before,.tabs-lifted>.tab:is(input:checked)+.tabs-lifted .tab:is(input:checked):before{background-image:var(--radius-end);background-position:top right}.tabs-boxed .tab{border-radius:var(--rounded-btn, .5rem)}.table:where([dir=rtl],[dir=rtl] *){text-align:right}.table :where(th,td){padding:.75rem 1rem;vertical-align:middle}.table tr.active,.table tr.active:nth-child(2n),.table-zebra tbody tr:nth-child(2n){--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))}.table-zebra tr.active,.table-zebra tr.active:nth-child(2n),.table-zebra-zebra tbody tr:nth-child(2n){--tw-bg-opacity: 1;background-color:var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)))}.table :where(thead tr,tbody tr:not(:last-child),tbody tr:first-child:last-child){border-bottom-width:1px;--tw-border-opacity: 1;border-bottom-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)))}.table :where(thead,tfoot){white-space:nowrap;font-size:.75rem;line-height:1rem;font-weight:700;color:var(--fallback-bc,oklch(var(--bc)/.6))}.table :where(tfoot){border-top-width:1px;--tw-border-opacity: 1;border-top-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)))}.textarea:focus{box-shadow:none;border-color:var(--fallback-bc,oklch(var(--bc)/.2));outline-style:solid;outline-width:2px;outline-offset:2px;outline-color:var(--fallback-bc,oklch(var(--bc)/.2))}.textarea-disabled,.textarea:disabled,.textarea[disabled]{cursor:not-allowed;--tw-border-opacity: 1;border-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity)));--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)));color:var(--fallback-bc,oklch(var(--bc)/.4))}.textarea-disabled::-moz-placeholder,.textarea:disabled::-moz-placeholder,.textarea[disabled]::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));--tw-placeholder-opacity: .2}.textarea-disabled::placeholder,.textarea:disabled::placeholder,.textarea[disabled]::placeholder{color:var(--fallback-bc,oklch(var(--bc)/var(--tw-placeholder-opacity)));--tw-placeholder-opacity: .2}.toast>*{animation:toast-pop .25s ease-out}@keyframes toast-pop{0%{transform:scale(.9);opacity:0}to{transform:scale(1);opacity:1}}[dir=rtl] .toggle{--handleoffsetcalculator: calc(var(--handleoffset) * 1)}.toggle:focus-visible{outline-style:solid;outline-width:2px;outline-offset:2px;outline-color:var(--fallback-bc,oklch(var(--bc)/.2))}.toggle:hover{background-color:currentColor}.toggle:checked,.toggle[aria-checked=true]{background-image:none;--handleoffsetcalculator: var(--handleoffset);--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)))}[dir=rtl] .toggle:checked,[dir=rtl] .toggle[aria-checked=true]{--handleoffsetcalculator: calc(var(--handleoffset) * -1)}.toggle:indeterminate{--tw-text-opacity: 1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity)));box-shadow:calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,0 0 0 2px var(--tglbg) inset}[dir=rtl] .toggle:indeterminate{box-shadow:calc(var(--handleoffset) / 2) 0 0 2px var(--tglbg) inset,calc(var(--handleoffset) / -2) 0 0 2px var(--tglbg) inset,0 0 0 2px var(--tglbg) inset}.toggle:disabled{cursor:not-allowed;--tw-border-opacity: 1;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity)));background-color:transparent;opacity:.3;--togglehandleborder: 0 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset, var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset}.btm-nav-xs>*:where(.active){border-top-width:1px}.btm-nav-sm>*:where(.active){border-top-width:2px}.btm-nav-md>*:where(.active){border-top-width:2px}.btm-nav-lg>*:where(.active){border-top-width:4px}.indicator :where(.indicator-item){bottom:auto;inset-inline-end:0px;inset-inline-start:auto;top:0;--tw-translate-y: -50%;--tw-translate-x: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item):where([dir=rtl],[dir=rtl] *){--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-start){inset-inline-end:auto;inset-inline-start:0px;--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-start):where([dir=rtl],[dir=rtl] *){--tw-translate-x: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-center){inset-inline-end:50%;inset-inline-start:50%;--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-center):where([dir=rtl],[dir=rtl] *){--tw-translate-x: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-end){inset-inline-end:0px;inset-inline-start:auto;--tw-translate-x: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-end):where([dir=rtl],[dir=rtl] *){--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-bottom){bottom:0;top:auto;--tw-translate-y: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-middle){bottom:50%;top:50%;--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.indicator :where(.indicator-item.indicator-top){bottom:auto;top:0;--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.steps-horizontal .step{display:grid;grid-template-columns:repeat(1,minmax(0,1fr));grid-template-rows:repeat(2,minmax(0,1fr));place-items:center;text-align:center}.steps-vertical .step{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));grid-template-rows:repeat(1,minmax(0,1fr))}.tabs-md :where(.tab){height:2rem;font-size:.875rem;line-height:1.25rem;line-height:2;--tab-padding: 1rem}.tabs-lg :where(.tab){height:3rem;font-size:1.125rem;line-height:1.75rem;line-height:2;--tab-padding: 1.25rem}.tabs-sm :where(.tab){height:1.5rem;font-size:.875rem;line-height:.75rem;--tab-padding: .75rem}.tabs-xs :where(.tab){height:1.25rem;font-size:.75rem;line-height:.75rem;--tab-padding: .5rem}:where(.toast){bottom:0;inset-inline-end:0px;inset-inline-start:auto;top:auto;--tw-translate-x: 0px;--tw-translate-y: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.toast:where(.toast-start){inset-inline-end:auto;inset-inline-start:0px;--tw-translate-x: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.toast:where(.toast-center){inset-inline-end:50%;inset-inline-start:50%;--tw-translate-x: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.toast:where(.toast-center):where([dir=rtl],[dir=rtl] *){--tw-translate-x: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.toast:where(.toast-end){inset-inline-end:0px;inset-inline-start:auto;--tw-translate-x: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.toast:where(.toast-bottom){bottom:0;top:auto;--tw-translate-y: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.toast:where(.toast-middle){bottom:auto;top:50%;--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.toast:where(.toast-top){bottom:auto;top:0;--tw-translate-y: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.avatar.online:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity: 1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity)));outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:15%;height:15%;top:7%;right:7%}.avatar.offline:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity: 1;background-color:var(--fallback-b3,oklch(var(--b3)/var(--tw-bg-opacity)));outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:15%;height:15%;top:7%;right:7%}.join.join-vertical>:where(*:not(:first-child)):is(.btn){margin-top:calc(var(--border-btn) * -1)}.join.join-horizontal>:where(*:not(:first-child)):is(.btn){margin-inline-start:calc(var(--border-btn) * -1)}.steps-horizontal .step{grid-template-rows:40px 1fr;grid-template-columns:auto;min-width:4rem}.steps-horizontal .step:before{height:.5rem;width:100%;--tw-translate-x: 0px;--tw-translate-y: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));content:"";margin-inline-start:-100%}.steps-horizontal .step:where([dir=rtl],[dir=rtl] *):before{--tw-translate-x: 0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.steps-vertical .step{gap:.5rem;grid-template-columns:40px 1fr;grid-template-rows:auto;min-height:4rem;justify-items:start}.steps-vertical .step:before{height:100%;width:.5rem;--tw-translate-x: -50%;--tw-translate-y: -50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));margin-inline-start:50%}.steps-vertical .step:where([dir=rtl],[dir=rtl] *):before{--tw-translate-x: 50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.pointer-events-none{pointer-events:none}.visible{visibility:visible}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.inset-0{top:0;right:0;bottom:0;left:0}.inset-y-0{top:0;bottom:0}.-right-1{right:-.25rem}.-top-1{top:-.25rem}.bottom-0{bottom:0}.left-0{left:0}.left-3{left:.75rem}.right-1\/2{right:50%}.right-2{right:.5rem}.top-0{top:0}.top-2{top:.5rem}.top-2\.5{top:.625rem}.top-3{top:.75rem}.z-10{z-index:10}.z-50{z-index:50}.order-first{order:-9999}.col-span-1{grid-column:span 1 / span 1}.mx-1{margin-left:.25rem;margin-right:.25rem}.mx-auto{margin-left:auto;margin-right:auto}.my-3{margin-top:.75rem;margin-bottom:.75rem}.my-4{margin-top:1rem;margin-bottom:1rem}.-ml-1{margin-left:-.25rem}.-mt-20{margin-top:-5rem}.mb-1{margin-bottom:.25rem}.mb-2{margin-bottom:.5rem}.mb-3{margin-bottom:.75rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.ml-1{margin-left:.25rem}.ml-2{margin-left:.5rem}.ml-3{margin-left:.75rem}.ml-auto{margin-left:auto}.mr-1{margin-right:.25rem}.mr-2{margin-right:.5rem}.mr-3{margin-right:.75rem}.mt-1{margin-top:.25rem}.mt-2{margin-top:.5rem}.mt-4{margin-top:1rem}.mt-6{margin-top:1.5rem}.mt-8{margin-top:2rem}.mt-\[-40px\]{margin-top:-40px}.block{display:block}.inline-block{display:inline-block}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.grid{display:grid}.hidden{display:none}.size-10{width:2.5rem;height:2.5rem}.size-12{width:3rem;height:3rem}.size-3{width:.75rem;height:.75rem}.size-5{width:1.25rem;height:1.25rem}.h-1{height:.25rem}.h-10{height:2.5rem}.h-12{height:3rem}.h-16{height:4rem}.h-20{height:5rem}.h-24{height:6rem}.h-32{height:8rem}.h-4{height:1rem}.h-40{height:10rem}.h-48{height:12rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-8{height:2rem}.h-96{height:24rem}.h-auto{height:auto}.max-h-60{max-height:15rem}.max-h-80{max-height:20rem}.max-h-\[90vh\]{max-height:90vh}.min-h-\[100px\]{min-height:100px}.min-h-\[120px\]{min-height:120px}.min-h-\[80px\]{min-height:80px}.min-h-screen{min-height:100vh}.w-10{width:2.5rem}.w-11{width:2.75rem}.w-12{width:3rem}.w-16{width:4rem}.w-20{width:5rem}.w-24{width:6rem}.w-32{width:8rem}.w-4{width:1rem}.w-5{width:1.25rem}.w-64{width:16rem}.w-8{width:2rem}.w-auto{width:auto}.w-full{width:100%}.max-w-2xl{max-width:42rem}.max-w-4xl{max-width:56rem}.max-w-7xl{max-width:80rem}.max-w-md{max-width:28rem}.flex-1{flex:1 1 0%}.flex-shrink-0{flex-shrink:0}.flex-grow{flex-grow:1}.border-collapse{border-collapse:collapse}.translate-x-16{--tw-translate-x: 4rem;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@keyframes spin{to{transform:rotate(360deg)}}.animate-spin{animation:spin 1s linear infinite}.cursor-not-allowed{cursor:not-allowed}.cursor-pointer{cursor:pointer}.resize-none{resize:none}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.items-baseline{align-items:baseline}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.gap-x-8{-moz-column-gap:2rem;column-gap:2rem}.gap-y-2{row-gap:.5rem}.space-x-1>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.25rem * var(--tw-space-x-reverse));margin-left:calc(.25rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-2>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.5rem * var(--tw-space-x-reverse));margin-left:calc(.5rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(.75rem * var(--tw-space-x-reverse));margin-left:calc(.75rem * calc(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1rem * var(--tw-space-x-reverse));margin-left:calc(1rem * calc(1 - var(--tw-space-x-reverse)))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem * var(--tw-space-y-reverse))}.space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(.75rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem * var(--tw-space-y-reverse))}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1rem * var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse: 0;margin-top:calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem * var(--tw-space-y-reverse))}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.overflow-y-auto{overflow-y:auto}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.rounded{border-radius:.25rem}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.rounded-b-lg{border-bottom-right-radius:.5rem;border-bottom-left-radius:.5rem}.rounded-l{border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.rounded-l-full{border-top-left-radius:9999px;border-bottom-left-radius:9999px}.rounded-r{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.rounded-r-full{border-top-right-radius:9999px;border-bottom-right-radius:9999px}.rounded-t-lg{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.border{border-width:1px}.border-2{border-width:2px}.border-b{border-bottom-width:1px}.border-b-2{border-bottom-width:2px}.border-l-4{border-left-width:4px}.border-t{border-top-width:1px}.border-base-100{--tw-border-opacity: 1;border-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity)))}.border-blue-500{--tw-border-opacity: 1;border-color:rgb(59 130 246 / var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity: 1;border-color:rgb(229 231 235 / var(--tw-border-opacity))}.border-gray-300{--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}.border-primary{--tw-border-opacity: 1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity)))}.border-transparent{border-color:transparent}.border-yellow-400{--tw-border-opacity: 1;border-color:rgb(250 204 21 / var(--tw-border-opacity))}.bg-base-100{--tw-bg-opacity: 1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity)))}.bg-black{--tw-bg-opacity: 1;background-color:rgb(0 0 0 / var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity))}.bg-blue-50{--tw-bg-opacity: 1;background-color:rgb(239 246 255 / var(--tw-bg-opacity))}.bg-blue-500{--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity: 1;background-color:rgb(229 231 235 / var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.bg-green-100{--tw-bg-opacity: 1;background-color:rgb(220 252 231 / var(--tw-bg-opacity))}.bg-green-50{--tw-bg-opacity: 1;background-color:rgb(240 253 244 / var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity: 1;background-color:rgb(34 197 94 / var(--tw-bg-opacity))}.bg-orange-100{--tw-bg-opacity: 1;background-color:rgb(255 237 213 / var(--tw-bg-opacity))}.bg-primary{--tw-bg-opacity: 1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)))}.bg-purple-100{--tw-bg-opacity: 1;background-color:rgb(243 232 255 / var(--tw-bg-opacity))}.bg-red-100{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity))}.bg-red-50{--tw-bg-opacity: 1;background-color:rgb(254 242 242 / var(--tw-bg-opacity))}.bg-red-500{--tw-bg-opacity: 1;background-color:rgb(239 68 68 / var(--tw-bg-opacity))}.bg-secondary{--tw-bg-opacity: 1;background-color:var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity)))}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-yellow-100{--tw-bg-opacity: 1;background-color:rgb(254 249 195 / var(--tw-bg-opacity))}.bg-yellow-50{--tw-bg-opacity: 1;background-color:rgb(254 252 232 / var(--tw-bg-opacity))}.bg-yellow-500{--tw-bg-opacity: 1;background-color:rgb(234 179 8 / var(--tw-bg-opacity))}.bg-opacity-30{--tw-bg-opacity: .3}.bg-opacity-50{--tw-bg-opacity: .5}.bg-cover{background-size:cover}.bg-center{background-position:center}.fill-blue-300{fill:#93c5fd}.fill-blue-600{fill:#2563eb}.fill-green-600{fill:#16a34a}.object-cover{-o-object-fit:cover;object-fit:cover}.p-1{padding:.25rem}.p-2{padding:.5rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.px-1{padding-left:.25rem;padding-right:.25rem}.px-2{padding-left:.5rem;padding-right:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-10{padding-top:2.5rem;padding-bottom:2.5rem}.py-12{padding-top:3rem;padding-bottom:3rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.py-4{padding-top:1rem;padding-bottom:1rem}.py-6{padding-top:1.5rem;padding-bottom:1.5rem}.py-8{padding-top:2rem;padding-bottom:2rem}.pb-4{padding-bottom:1rem}.pl-10{padding-left:2.5rem}.pl-3{padding-left:.75rem}.pr-4{padding-right:1rem}.pt-4{padding-top:1rem}.text-left{text-align:left}.text-center{text-align:center}.text-2xl{font-size:1.5rem;line-height:2rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.font-bold{font-weight:700}.font-extrabold{font-weight:800}.font-medium{font-weight:500}.font-semibold{font-weight:600}.text-blue-500{--tw-text-opacity: 1;color:rgb(59 130 246 / var(--tw-text-opacity))}.text-blue-600{--tw-text-opacity: 1;color:rgb(37 99 235 / var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity: 1;color:rgb(30 64 175 / var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity: 1;color:rgb(156 163 175 / var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity: 1;color:rgb(107 114 128 / var(--tw-text-opacity))}.text-gray-600{--tw-text-opacity: 1;color:rgb(75 85 99 / var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity: 1;color:rgb(31 41 55 / var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.text-green-500{--tw-text-opacity: 1;color:rgb(34 197 94 / var(--tw-text-opacity))}.text-green-600{--tw-text-opacity: 1;color:rgb(22 163 74 / var(--tw-text-opacity))}.text-green-800{--tw-text-opacity: 1;color:rgb(22 101 52 / var(--tw-text-opacity))}.text-info{--tw-text-opacity: 1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity)))}.text-orange-500{--tw-text-opacity: 1;color:rgb(249 115 22 / var(--tw-text-opacity))}.text-orange-800{--tw-text-opacity: 1;color:rgb(154 52 18 / var(--tw-text-opacity))}.text-primary{--tw-text-opacity: 1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity)))}.text-purple-500{--tw-text-opacity: 1;color:rgb(168 85 247 / var(--tw-text-opacity))}.text-purple-800{--tw-text-opacity: 1;color:rgb(107 33 168 / var(--tw-text-opacity))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity))}.text-red-800{--tw-text-opacity: 1;color:rgb(153 27 27 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity: 1;color:rgb(250 204 21 / var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity: 1;color:rgb(234 179 8 / var(--tw-text-opacity))}.text-yellow-700{--tw-text-opacity: 1;color:rgb(161 98 7 / var(--tw-text-opacity))}.text-yellow-800{--tw-text-opacity: 1;color:rgb(133 77 14 / var(--tw-text-opacity))}.text-zinc-50{--tw-text-opacity: 1;color:rgb(250 250 250 / var(--tw-text-opacity))}.opacity-0{opacity:0}.opacity-25{opacity:.25}.opacity-50{opacity:.5}.opacity-75{opacity:.75}.shadow{--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / .05);--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-xl{--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / .1), 0 8px 10px -6px rgb(0 0 0 / .1);--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-200{transition-duration:.2s}.duration-300{transition-duration:.3s}.after\:absolute:after{content:var(--tw-content);position:absolute}.after\:left-\[2px\]:after{content:var(--tw-content);left:2px}.after\:top-\[2px\]:after{content:var(--tw-content);top:2px}.after\:h-5:after{content:var(--tw-content);height:1.25rem}.after\:w-5:after{content:var(--tw-content);width:1.25rem}.after\:rounded-full:after{content:var(--tw-content);border-radius:9999px}.after\:border:after{content:var(--tw-content);border-width:1px}.after\:border-gray-300:after{content:var(--tw-content);--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity))}.after\:bg-white:after{content:var(--tw-content);--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.after\:transition-all:after{content:var(--tw-content);transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.after\:content-\[\'\'\]:after{--tw-content: "";content:var(--tw-content)}.hover\:bg-base-200:hover{--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))}.hover\:bg-blue-100:hover{--tw-bg-opacity: 1;background-color:rgb(219 234 254 / var(--tw-bg-opacity))}.hover\:bg-blue-200:hover{--tw-bg-opacity: 1;background-color:rgb(191 219 254 / var(--tw-bg-opacity))}.hover\:bg-blue-600:hover{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity))}.hover\:bg-gray-100:hover{--tw-bg-opacity: 1;background-color:rgb(243 244 246 / var(--tw-bg-opacity))}.hover\:bg-gray-300:hover{--tw-bg-opacity: 1;background-color:rgb(209 213 219 / var(--tw-bg-opacity))}.hover\:bg-gray-50:hover{--tw-bg-opacity: 1;background-color:rgb(249 250 251 / var(--tw-bg-opacity))}.hover\:bg-green-600:hover{--tw-bg-opacity: 1;background-color:rgb(22 163 74 / var(--tw-bg-opacity))}.hover\:bg-orange-100:hover{--tw-bg-opacity: 1;background-color:rgb(255 237 213 / var(--tw-bg-opacity))}.hover\:bg-primary:hover{--tw-bg-opacity: 1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity)))}.hover\:bg-red-100:hover{--tw-bg-opacity: 1;background-color:rgb(254 226 226 / var(--tw-bg-opacity))}.hover\:bg-red-200:hover{--tw-bg-opacity: 1;background-color:rgb(254 202 202 / var(--tw-bg-opacity))}.hover\:bg-red-600:hover{--tw-bg-opacity: 1;background-color:rgb(220 38 38 / var(--tw-bg-opacity))}.hover\:bg-yellow-600:hover{--tw-bg-opacity: 1;background-color:rgb(202 138 4 / var(--tw-bg-opacity))}.hover\:text-gray-700:hover{--tw-text-opacity: 1;color:rgb(55 65 81 / var(--tw-text-opacity))}.hover\:text-gray-900:hover{--tw-text-opacity: 1;color:rgb(17 24 39 / var(--tw-text-opacity))}.hover\:text-red-700:hover{--tw-text-opacity: 1;color:rgb(185 28 28 / var(--tw-text-opacity))}.hover\:text-white:hover{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.hover\:text-zinc-200:hover{--tw-text-opacity: 1;color:rgb(228 228 231 / var(--tw-text-opacity))}.hover\:underline:hover{text-decoration-line:underline}.hover\:opacity-100:hover{opacity:1}.hover\:shadow-md:hover{--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / .1), 0 2px 4px -2px rgb(0 0 0 / .1);--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.focus\:bg-base-200:focus{--tw-bg-opacity: 1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity)))}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:ring-2:focus{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.focus\:ring-primary:focus{--tw-ring-opacity: 1;--tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity)))}.disabled\:opacity-50:disabled{opacity:.5}.peer:checked~.peer-checked\:bg-blue-600{--tw-bg-opacity: 1;background-color:rgb(37 99 235 / var(--tw-bg-opacity))}.peer:checked~.peer-checked\:after\:translate-x-full:after{content:var(--tw-content);--tw-translate-x: 100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.peer:checked~.peer-checked\:after\:border-white:after{content:var(--tw-content);--tw-border-opacity: 1;border-color:rgb(255 255 255 / var(--tw-border-opacity))}.peer:focus~.peer-focus\:outline-none{outline:2px solid transparent;outline-offset:2px}.peer:focus~.peer-focus\:ring-4{--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow, 0 0 #0000)}.peer:focus~.peer-focus\:ring-blue-300{--tw-ring-opacity: 1;--tw-ring-color: rgb(147 197 253 / var(--tw-ring-opacity))}@media (min-width: 640px){.sm\:mx-auto{margin-left:auto;margin-right:auto}.sm\:inline{display:inline}.sm\:w-full{width:100%}.sm\:max-w-md{max-width:28rem}.sm\:rounded-lg{border-radius:.5rem}.sm\:px-10{padding-left:2.5rem;padding-right:2.5rem}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}}@media (min-width: 768px){.md\:right-4{right:1rem}.md\:block{display:block}.md\:inline{display:inline}.md\:size-4{width:1rem;height:1rem}.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\:gap-6{gap:1.5rem}}@media (min-width: 1024px){.lg\:order-none{order:0}.lg\:col-span-1{grid-column:span 1 / span 1}.lg\:col-span-2{grid-column:span 2 / span 2}.lg\:col-span-3{grid-column:span 3 / span 3}.lg\:block{display:block}.lg\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.lg\:px-8{padding-left:2rem;padding-right:2rem}}

================
File: frontend/dist/index.html
================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/small-logo.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Egresados ITTG</title>
    <script type="module" crossorigin src="/assets/index-CszfmkhN.js"></script>
    <link rel="stylesheet" crossorigin href="/assets/index-Ddr-0FVO.css">
  </head>
  <body>
    <div id="root"></div>
  </body>
</html>

================
File: frontend/dist/logo.svg
================
<svg xmlns="http://www.w3.org/2000/svg" height="800" width="1200" viewBox="-40.125525 -16.3118 347.75455 97.8708"><path fill="#0a66c2" d="M263.744 61.1094a1.2 1.2 0 001.21-1.269c0-.9-.543-1.33-1.657-1.33h-1.8v4.712h.677v-2.054h.832l.019.025 1.291 2.029h.724l-1.389-2.1zm-.783-.472h-.785v-1.593h.995c.514 0 1.1.084 1.1.757 0 .774-.593.836-1.314.836M0 9.5874h9.993v36.4h18.5v9.222H0zm32.911 14.689h9.6v30.916h-9.6zm4.8-15.37a5.569 5.569 0 11-5.57 5.569 5.569 5.569 0 015.57-5.569m44.958.674h9.6v27.265l10.88-12.583h11.77l-12.6 14.313 12.335 16.63h-12.066l-10.191-15.282h-.126v15.28h-9.6zm-34.835 14.699h9.219v4.225h.131a10.085 10.085 0 019.09-4.994c9.735 0 11.527 6.405 11.527 14.726v16.954h-9.6v-15.031c0-3.588-.066-8.2-5-8.2-4.99 0-5.76 3.907-5.76 7.939v15.288h-9.6z"/><path fill="#0a66c2" d="M135.136 36.1384a5.756 5.756 0 00-5.894-5.89 6.406 6.406 0 00-6.784 5.89zm8.132 13.7a16.909 16.909 0 01-13.128 6.151c-9.6 0-17.286-6.408-17.286-16.331 0-9.923 7.685-16.328 17.286-16.328 8.973 0 14.6 6.4 14.6 16.328v3.01h-22.282a7.171 7.171 0 007.235 6.019 8.193 8.193 0 006.851-3.778zm21.482-18.089c-4.8 0-7.68 3.205-7.68 7.875s2.879 7.878 7.68 7.878 7.687-3.2 7.687-7.878-2.881-7.875-7.687-7.875m16.525 23.437h-8.838v-4.1h-.131a12.071 12.071 0 01-9.544 4.868c-9.224 0-15.3-6.657-15.3-16.071 0-8.646 5.377-16.585 14.216-16.585 3.973 0 7.684 1.087 9.861 4.1h.126V9.5774h9.609zm64.809.018h-9.6v-15.034c0-3.585-.064-8.2-4.993-8.2-5 0-5.765 3.906-5.765 7.939v15.294h-9.6v-30.916h9.216v4.225h.129a10.1 10.1 0 019.093-4.994c9.73 0 11.524 6.4 11.524 14.726zm-40.79-35.143a5.571 5.571 0 115.57-5.572 5.571 5.571 0 01-5.57 5.572m4.8 35.143h-9.61v-30.917h9.61zm40.776-55.2h-55.21a4.728 4.728 0 00-4.781 4.67v55.439a4.731 4.731 0 004.781 4.675h55.21a4.741 4.741 0 004.8-4.675V4.6704a4.738 4.738 0 00-4.8-4.67m12.173 56.411a4.418 4.418 0 10.085 0h-.085m0 8.33a3.874 3.874 0 113.809-3.938v.065a3.791 3.791 0 01-3.708 3.871h-.1"/></svg>

================
File: frontend/dist/teclogoazul.svg
================
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
 "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000"
 preserveAspectRatio="xMidYMid meet">

<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M759 4935 c-15 -8 -30 -22 -34 -32 -4 -10 -28 -110 -54 -221 l-46
-204 -145 -48 c-80 -27 -160 -54 -178 -61 l-32 -13 0 -267 0 -266 178 -7 c627
-25 1005 -124 1442 -379 84 -49 95 -53 98 -36 7 42 -57 250 -97 315 -26 42
-192 152 -355 234 -208 105 -468 180 -679 197 -43 3 -80 9 -82 13 -7 11 95 28
242 42 273 25 578 -34 836 -163 177 -88 289 -169 438 -318 246 -246 390 -508
459 -836 28 -132 37 -360 20 -503 -11 -96 -62 -327 -74 -340 -3 -3 -33 3 -68
13 -146 41 -278 28 -379 -36 l-46 -29 14 -53 c38 -144 23 -306 -40 -421 -51
-93 -132 -146 -249 -161 -46 -6 -48 -7 -48 -40 0 -53 -34 -147 -74 -208 -83
-125 -219 -212 -415 -265 -84 -22 -116 -26 -256 -26 -141 -1 -166 2 -215 21
-45 17 -81 22 -195 25 -130 4 -147 7 -240 40 -55 19 -126 47 -157 61 l-58 27
0 -104 0 -104 72 -35 c65 -32 187 -75 259 -92 25 -6 27 -15 69 -208 41 -187
47 -204 76 -235 l33 -33 360 3 361 3 25 25 c21 21 32 58 69 233 24 115 47 211
49 214 3 3 58 22 122 44 l117 39 160 -141 c177 -156 200 -167 261 -131 46 26
455 328 490 360 15 14 31 42 37 61 10 36 -2 67 -133 352 l-35 76 59 84 c101
143 76 129 209 114 63 -8 165 -17 225 -20 108 -7 110 -7 133 18 16 17 53 118
118 323 92 293 104 347 84 383 -5 10 -95 67 -200 127 l-190 108 0 127 0 127
192 114 c152 90 195 120 203 142 8 23 -7 77 -94 339 -57 172 -110 322 -118
335 -25 40 -48 42 -269 16 -115 -13 -212 -23 -216 -22 -4 2 -41 48 -82 102
-73 97 -74 100 -62 130 7 17 45 106 85 198 39 92 71 178 71 192 0 14 -12 39
-27 55 -39 41 -520 380 -550 387 -39 10 -71 -11 -232 -159 l-150 -138 -98 31
c-54 18 -109 35 -122 39 -23 7 -28 22 -72 222 -42 188 -51 217 -74 237 -26 22
-28 22 -363 22 -273 -1 -342 -4 -363 -15z"/>
<path d="M264 3726 c-11 -44 10 -76 49 -76 137 0 588 -78 747 -129 l91 -29 14
35 c8 19 24 48 36 64 12 17 20 32 18 33 -2 2 -58 17 -124 34 -218 55 -387 78
-667 89 l-157 6 -7 -27z"/>
<path d="M2010 3591 c36 -93 53 -207 47 -310 -4 -53 -9 -108 -12 -122 -6 -25
-3 -27 72 -54 157 -55 281 -132 323 -199 30 -49 30 -134 0 -174 -22 -30 -20
-52 4 -52 7 0 33 18 58 40 62 54 90 122 96 230 14 288 -184 540 -528 669 -78
30 -81 29 -60 -28z"/>
<path d="M264 3564 c-4 -14 -2 -39 2 -57 l9 -31 175 -32 c222 -41 453 -93 573
-130 16 -5 18 1 15 72 l-3 78 -50 13 c-154 41 -592 113 -682 113 -27 0 -34 -5
-39 -26z"/>
<path d="M1323 3570 c-149 -76 -95 -302 72 -302 119 0 195 117 147 224 -38 87
-134 121 -219 78z m176 -64 c21 -25 9 -69 -21 -80 -50 -17 -89 42 -52 78 19
20 58 21 73 2z"/>
<path d="M1645 3413 c-13 -87 -61 -155 -140 -196 -56 -30 -164 -30 -221 0 -71
37 -134 126 -134 187 0 27 -35 43 -44 19 -30 -77 46 -257 133 -317 l37 -26
100 15 c54 8 134 15 178 15 92 0 267 -24 327 -45 23 -8 47 -15 54 -15 15 0 43
95 54 184 l7 67 -30 19 c-33 20 -257 122 -292 134 -19 6 -22 2 -29 -41z"/>
<path d="M264 3374 c-6 -25 1 -113 11 -122 10 -10 360 -116 525 -158 127 -33
203 -47 278 -51 56 -3 102 -3 102 1 0 4 -19 30 -41 59 -23 29 -50 71 -61 94
-20 46 -11 42 -173 82 -108 26 -598 121 -629 121 -3 0 -9 -12 -12 -26z"/>
<path d="M270 3141 c-18 -34 -9 -246 12 -266 2 -2 91 3 198 10 107 8 253 14
323 15 l128 0 60 42 59 42 -107 18 c-125 21 -299 62 -500 118 -78 22 -147 40
-152 40 -6 0 -15 -9 -21 -19z"/>
<path d="M2005 3012 c-9 -31 -18 -64 -21 -73 -3 -12 -21 -18 -62 -22 -60 -5
-151 -43 -136 -56 15 -13 90 -31 129 -31 32 0 36 -2 25 -15 -7 -8 -21 -15 -32
-15 -10 0 -16 -4 -13 -10 3 -5 1 -18 -5 -29 -10 -19 -12 -19 -58 -5 -81 27
-79 25 -47 39 l30 13 -28 11 c-47 18 -66 13 -113 -35 -110 -109 -139 -295 -67
-427 30 -54 79 -97 144 -127 56 -25 73 -25 127 1 42 21 44 24 39 55 -4 24 -2
34 7 34 20 0 47 35 36 46 -5 5 -6 22 -2 39 8 28 13 30 67 36 40 5 63 13 72 25
28 39 9 132 -60 291 -41 94 -37 105 36 109 53 2 78 33 85 102 5 54 10 49 -85
82 l-52 19 -16 -57z"/>
<path d="M1410 3039 c-138 -15 -303 -68 -373 -121 -16 -12 -5 -14 81 -15 234
-4 353 -54 381 -160 7 -26 7 -26 34 19 34 59 90 117 146 152 50 32 142 66 178
66 35 0 27 16 -14 28 -109 31 -301 45 -433 31z"/>
<path d="M580 2839 c-202 -11 -292 -24 -307 -45 -17 -23 -17 -105 0 -126 10
-13 48 -17 232 -22 121 -3 263 -10 315 -16 102 -11 333 -48 357 -57 10 -4 8 6
-8 36 -30 57 -23 127 18 185 l30 43 -150 6 c-174 8 -298 7 -487 -4z"/>
<path d="M1250 2772 c-57 -58 -45 -153 25 -186 41 -20 68 -20 105 -1 42 21 60
53 60 103 0 37 -6 50 -34 78 -29 29 -41 34 -81 34 -38 0 -52 -5 -75 -28z m120
-42 c40 -40 13 -100 -45 -100 -40 0 -55 16 -55 56 0 56 61 83 100 44z"/>
<path d="M1290 2685 c0 -10 11 -15 35 -15 24 0 35 5 35 15 0 10 -11 15 -35 15
-24 0 -35 -5 -35 -15z"/>
<path d="M289 2583 c-22 -5 -28 -58 -22 -187 5 -82 9 -106 20 -106 8 0 74 36
148 79 73 44 189 108 257 143 l123 62 -55 7 c-60 8 -445 9 -471 2z"/>
<path d="M1450 2560 c-14 -14 -33 -29 -43 -35 -15 -9 -14 -15 11 -64 28 -56
145 -191 156 -180 4 4 -7 28 -23 54 -36 57 -58 121 -69 195 l-7 55 -25 -25z"/>
<path d="M855 2558 c-45 -25 -328 -207 -447 -286 -105 -70 -131 -92 -148 -126
-31 -66 -44 -190 -31 -302 12 -99 39 -195 56 -201 6 -2 51 63 100 144 192 314
353 548 484 698 42 48 56 72 48 77 -17 11 -39 9 -62 -4z"/>
<path d="M946 2469 c-190 -241 -414 -598 -580 -929 -168 -333 -166 -326 -99
-401 76 -84 202 -126 404 -136 l126 -6 7 149 c25 534 104 962 241 1301 19 48
33 88 32 90 -2 1 -17 6 -34 9 -29 6 -35 1 -97 -77z"/>
<path d="M1112 2451 c-70 -182 -122 -481 -143 -816 -14 -219 -6 -662 11 -679
7 -7 70 -12 158 -14 170 -4 275 15 391 70 92 43 190 143 219 221 35 93 31 106
-40 147 -77 44 -196 154 -252 234 -137 192 -199 418 -199 719 l0 167 -36 9
c-86 21 -77 26 -109 -58z"/>
<path d="M1292 2378 c18 -378 229 -752 501 -888 98 -49 139 -58 182 -37 59 28
122 121 161 237 21 63 26 222 8 240 -9 9 -29 6 -79 -9 -156 -48 -329 -3 -491
127 -116 94 -227 261 -255 387 -20 92 -32 66 -27 -57z"/>
<path d="M1344 2463 c3 -16 28 -71 53 -123 107 -214 345 -378 516 -356 53 7
135 44 156 70 12 14 10 16 -16 16 -45 0 -120 26 -163 55 -30 21 -54 28 -99 30
-89 5 -162 30 -228 78 -76 57 -124 113 -162 193 -19 40 -37 64 -47 64 -12 0
-15 -6 -10 -27z"/>
</g>
</svg>

================
File: frontend/dist/vite.svg
================
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>

================
File: frontend/eslint.config.js
================
import js from "@eslint/js";
import globals from "globals";
import react from "eslint-plugin-react";
import reactHooks from "eslint-plugin-react-hooks";
import reactRefresh from "eslint-plugin-react-refresh";

export default [
	{ ignores: ["dist"] },
	{
		files: ["**/*.{js,jsx}"],
		languageOptions: {
			ecmaVersion: 2020,
			globals: globals.browser,
			parserOptions: {
				ecmaVersion: "latest",
				ecmaFeatures: { jsx: true },
				sourceType: "module",
			},
		},
		settings: { react: { version: "18.3" } },
		plugins: {
			react,
			"react-hooks": reactHooks,
			"react-refresh": reactRefresh,
		},
		rules: {
			...js.configs.recommended.rules,
			...react.configs.recommended.rules,
			...react.configs["jsx-runtime"].rules,
			...reactHooks.configs.recommended.rules,
			"react/jsx-no-target-blank": "off",
			"react-refresh/only-export-components": ["warn", { allowConstantExport: true }],
			"react/prop-types": "off",
		},
	},
];

================
File: frontend/index.html
================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/small-logo.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Egresados ITTG</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

================
File: frontend/package.json
================
{
  "name": "frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tanstack/react-query": "^5.55.0",
    "axios": "^1.7.7",
    "date-fns": "^3.6.0",
    "linkedin-clone": "file:..",
    "lucide-react": "^0.439.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hot-toast": "^2.4.1",
    "react-router-dom": "^6.26.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.0",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.20",
    "daisyui": "^4.12.10",
    "eslint": "^9.9.0",
    "eslint-plugin-react": "^7.35.0",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.9",
    "globals": "^15.9.0",
    "postcss": "^8.4.45",
    "tailwindcss": "^3.4.10",
    "vite": "^5.4.1"
  }
}

================
File: frontend/postcss.config.js
================
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

================
File: frontend/public/logo.svg
================
<svg xmlns="http://www.w3.org/2000/svg" height="800" width="1200" viewBox="-40.125525 -16.3118 347.75455 97.8708"><path fill="#0a66c2" d="M263.744 61.1094a1.2 1.2 0 001.21-1.269c0-.9-.543-1.33-1.657-1.33h-1.8v4.712h.677v-2.054h.832l.019.025 1.291 2.029h.724l-1.389-2.1zm-.783-.472h-.785v-1.593h.995c.514 0 1.1.084 1.1.757 0 .774-.593.836-1.314.836M0 9.5874h9.993v36.4h18.5v9.222H0zm32.911 14.689h9.6v30.916h-9.6zm4.8-15.37a5.569 5.569 0 11-5.57 5.569 5.569 5.569 0 015.57-5.569m44.958.674h9.6v27.265l10.88-12.583h11.77l-12.6 14.313 12.335 16.63h-12.066l-10.191-15.282h-.126v15.28h-9.6zm-34.835 14.699h9.219v4.225h.131a10.085 10.085 0 019.09-4.994c9.735 0 11.527 6.405 11.527 14.726v16.954h-9.6v-15.031c0-3.588-.066-8.2-5-8.2-4.99 0-5.76 3.907-5.76 7.939v15.288h-9.6z"/><path fill="#0a66c2" d="M135.136 36.1384a5.756 5.756 0 00-5.894-5.89 6.406 6.406 0 00-6.784 5.89zm8.132 13.7a16.909 16.909 0 01-13.128 6.151c-9.6 0-17.286-6.408-17.286-16.331 0-9.923 7.685-16.328 17.286-16.328 8.973 0 14.6 6.4 14.6 16.328v3.01h-22.282a7.171 7.171 0 007.235 6.019 8.193 8.193 0 006.851-3.778zm21.482-18.089c-4.8 0-7.68 3.205-7.68 7.875s2.879 7.878 7.68 7.878 7.687-3.2 7.687-7.878-2.881-7.875-7.687-7.875m16.525 23.437h-8.838v-4.1h-.131a12.071 12.071 0 01-9.544 4.868c-9.224 0-15.3-6.657-15.3-16.071 0-8.646 5.377-16.585 14.216-16.585 3.973 0 7.684 1.087 9.861 4.1h.126V9.5774h9.609zm64.809.018h-9.6v-15.034c0-3.585-.064-8.2-4.993-8.2-5 0-5.765 3.906-5.765 7.939v15.294h-9.6v-30.916h9.216v4.225h.129a10.1 10.1 0 019.093-4.994c9.73 0 11.524 6.4 11.524 14.726zm-40.79-35.143a5.571 5.571 0 115.57-5.572 5.571 5.571 0 01-5.57 5.572m4.8 35.143h-9.61v-30.917h9.61zm40.776-55.2h-55.21a4.728 4.728 0 00-4.781 4.67v55.439a4.731 4.731 0 004.781 4.675h55.21a4.741 4.741 0 004.8-4.675V4.6704a4.738 4.738 0 00-4.8-4.67m12.173 56.411a4.418 4.418 0 10.085 0h-.085m0 8.33a3.874 3.874 0 113.809-3.938v.065a3.791 3.791 0 01-3.708 3.871h-.1"/></svg>

================
File: frontend/public/teclogoazul.svg
================
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
 "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000"
 preserveAspectRatio="xMidYMid meet">

<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M759 4935 c-15 -8 -30 -22 -34 -32 -4 -10 -28 -110 -54 -221 l-46
-204 -145 -48 c-80 -27 -160 -54 -178 -61 l-32 -13 0 -267 0 -266 178 -7 c627
-25 1005 -124 1442 -379 84 -49 95 -53 98 -36 7 42 -57 250 -97 315 -26 42
-192 152 -355 234 -208 105 -468 180 -679 197 -43 3 -80 9 -82 13 -7 11 95 28
242 42 273 25 578 -34 836 -163 177 -88 289 -169 438 -318 246 -246 390 -508
459 -836 28 -132 37 -360 20 -503 -11 -96 -62 -327 -74 -340 -3 -3 -33 3 -68
13 -146 41 -278 28 -379 -36 l-46 -29 14 -53 c38 -144 23 -306 -40 -421 -51
-93 -132 -146 -249 -161 -46 -6 -48 -7 -48 -40 0 -53 -34 -147 -74 -208 -83
-125 -219 -212 -415 -265 -84 -22 -116 -26 -256 -26 -141 -1 -166 2 -215 21
-45 17 -81 22 -195 25 -130 4 -147 7 -240 40 -55 19 -126 47 -157 61 l-58 27
0 -104 0 -104 72 -35 c65 -32 187 -75 259 -92 25 -6 27 -15 69 -208 41 -187
47 -204 76 -235 l33 -33 360 3 361 3 25 25 c21 21 32 58 69 233 24 115 47 211
49 214 3 3 58 22 122 44 l117 39 160 -141 c177 -156 200 -167 261 -131 46 26
455 328 490 360 15 14 31 42 37 61 10 36 -2 67 -133 352 l-35 76 59 84 c101
143 76 129 209 114 63 -8 165 -17 225 -20 108 -7 110 -7 133 18 16 17 53 118
118 323 92 293 104 347 84 383 -5 10 -95 67 -200 127 l-190 108 0 127 0 127
192 114 c152 90 195 120 203 142 8 23 -7 77 -94 339 -57 172 -110 322 -118
335 -25 40 -48 42 -269 16 -115 -13 -212 -23 -216 -22 -4 2 -41 48 -82 102
-73 97 -74 100 -62 130 7 17 45 106 85 198 39 92 71 178 71 192 0 14 -12 39
-27 55 -39 41 -520 380 -550 387 -39 10 -71 -11 -232 -159 l-150 -138 -98 31
c-54 18 -109 35 -122 39 -23 7 -28 22 -72 222 -42 188 -51 217 -74 237 -26 22
-28 22 -363 22 -273 -1 -342 -4 -363 -15z"/>
<path d="M264 3726 c-11 -44 10 -76 49 -76 137 0 588 -78 747 -129 l91 -29 14
35 c8 19 24 48 36 64 12 17 20 32 18 33 -2 2 -58 17 -124 34 -218 55 -387 78
-667 89 l-157 6 -7 -27z"/>
<path d="M2010 3591 c36 -93 53 -207 47 -310 -4 -53 -9 -108 -12 -122 -6 -25
-3 -27 72 -54 157 -55 281 -132 323 -199 30 -49 30 -134 0 -174 -22 -30 -20
-52 4 -52 7 0 33 18 58 40 62 54 90 122 96 230 14 288 -184 540 -528 669 -78
30 -81 29 -60 -28z"/>
<path d="M264 3564 c-4 -14 -2 -39 2 -57 l9 -31 175 -32 c222 -41 453 -93 573
-130 16 -5 18 1 15 72 l-3 78 -50 13 c-154 41 -592 113 -682 113 -27 0 -34 -5
-39 -26z"/>
<path d="M1323 3570 c-149 -76 -95 -302 72 -302 119 0 195 117 147 224 -38 87
-134 121 -219 78z m176 -64 c21 -25 9 -69 -21 -80 -50 -17 -89 42 -52 78 19
20 58 21 73 2z"/>
<path d="M1645 3413 c-13 -87 -61 -155 -140 -196 -56 -30 -164 -30 -221 0 -71
37 -134 126 -134 187 0 27 -35 43 -44 19 -30 -77 46 -257 133 -317 l37 -26
100 15 c54 8 134 15 178 15 92 0 267 -24 327 -45 23 -8 47 -15 54 -15 15 0 43
95 54 184 l7 67 -30 19 c-33 20 -257 122 -292 134 -19 6 -22 2 -29 -41z"/>
<path d="M264 3374 c-6 -25 1 -113 11 -122 10 -10 360 -116 525 -158 127 -33
203 -47 278 -51 56 -3 102 -3 102 1 0 4 -19 30 -41 59 -23 29 -50 71 -61 94
-20 46 -11 42 -173 82 -108 26 -598 121 -629 121 -3 0 -9 -12 -12 -26z"/>
<path d="M270 3141 c-18 -34 -9 -246 12 -266 2 -2 91 3 198 10 107 8 253 14
323 15 l128 0 60 42 59 42 -107 18 c-125 21 -299 62 -500 118 -78 22 -147 40
-152 40 -6 0 -15 -9 -21 -19z"/>
<path d="M2005 3012 c-9 -31 -18 -64 -21 -73 -3 -12 -21 -18 -62 -22 -60 -5
-151 -43 -136 -56 15 -13 90 -31 129 -31 32 0 36 -2 25 -15 -7 -8 -21 -15 -32
-15 -10 0 -16 -4 -13 -10 3 -5 1 -18 -5 -29 -10 -19 -12 -19 -58 -5 -81 27
-79 25 -47 39 l30 13 -28 11 c-47 18 -66 13 -113 -35 -110 -109 -139 -295 -67
-427 30 -54 79 -97 144 -127 56 -25 73 -25 127 1 42 21 44 24 39 55 -4 24 -2
34 7 34 20 0 47 35 36 46 -5 5 -6 22 -2 39 8 28 13 30 67 36 40 5 63 13 72 25
28 39 9 132 -60 291 -41 94 -37 105 36 109 53 2 78 33 85 102 5 54 10 49 -85
82 l-52 19 -16 -57z"/>
<path d="M1410 3039 c-138 -15 -303 -68 -373 -121 -16 -12 -5 -14 81 -15 234
-4 353 -54 381 -160 7 -26 7 -26 34 19 34 59 90 117 146 152 50 32 142 66 178
66 35 0 27 16 -14 28 -109 31 -301 45 -433 31z"/>
<path d="M580 2839 c-202 -11 -292 -24 -307 -45 -17 -23 -17 -105 0 -126 10
-13 48 -17 232 -22 121 -3 263 -10 315 -16 102 -11 333 -48 357 -57 10 -4 8 6
-8 36 -30 57 -23 127 18 185 l30 43 -150 6 c-174 8 -298 7 -487 -4z"/>
<path d="M1250 2772 c-57 -58 -45 -153 25 -186 41 -20 68 -20 105 -1 42 21 60
53 60 103 0 37 -6 50 -34 78 -29 29 -41 34 -81 34 -38 0 -52 -5 -75 -28z m120
-42 c40 -40 13 -100 -45 -100 -40 0 -55 16 -55 56 0 56 61 83 100 44z"/>
<path d="M1290 2685 c0 -10 11 -15 35 -15 24 0 35 5 35 15 0 10 -11 15 -35 15
-24 0 -35 -5 -35 -15z"/>
<path d="M289 2583 c-22 -5 -28 -58 -22 -187 5 -82 9 -106 20 -106 8 0 74 36
148 79 73 44 189 108 257 143 l123 62 -55 7 c-60 8 -445 9 -471 2z"/>
<path d="M1450 2560 c-14 -14 -33 -29 -43 -35 -15 -9 -14 -15 11 -64 28 -56
145 -191 156 -180 4 4 -7 28 -23 54 -36 57 -58 121 -69 195 l-7 55 -25 -25z"/>
<path d="M855 2558 c-45 -25 -328 -207 -447 -286 -105 -70 -131 -92 -148 -126
-31 -66 -44 -190 -31 -302 12 -99 39 -195 56 -201 6 -2 51 63 100 144 192 314
353 548 484 698 42 48 56 72 48 77 -17 11 -39 9 -62 -4z"/>
<path d="M946 2469 c-190 -241 -414 -598 -580 -929 -168 -333 -166 -326 -99
-401 76 -84 202 -126 404 -136 l126 -6 7 149 c25 534 104 962 241 1301 19 48
33 88 32 90 -2 1 -17 6 -34 9 -29 6 -35 1 -97 -77z"/>
<path d="M1112 2451 c-70 -182 -122 -481 -143 -816 -14 -219 -6 -662 11 -679
7 -7 70 -12 158 -14 170 -4 275 15 391 70 92 43 190 143 219 221 35 93 31 106
-40 147 -77 44 -196 154 -252 234 -137 192 -199 418 -199 719 l0 167 -36 9
c-86 21 -77 26 -109 -58z"/>
<path d="M1292 2378 c18 -378 229 -752 501 -888 98 -49 139 -58 182 -37 59 28
122 121 161 237 21 63 26 222 8 240 -9 9 -29 6 -79 -9 -156 -48 -329 -3 -491
127 -116 94 -227 261 -255 387 -20 92 -32 66 -27 -57z"/>
<path d="M1344 2463 c3 -16 28 -71 53 -123 107 -214 345 -378 516 -356 53 7
135 44 156 70 12 14 10 16 -16 16 -45 0 -120 26 -163 55 -30 21 -54 28 -99 30
-89 5 -162 30 -228 78 -76 57 -124 113 -162 193 -19 40 -37 64 -47 64 -12 0
-15 -6 -10 -27z"/>
</g>
</svg>

================
File: frontend/public/vite.svg
================
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>

================
File: frontend/README.md
================
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

================
File: frontend/src/App.jsx
================
// frontend/src/App.jsx
import React, { useState, useEffect } from 'react';
import { Navigate, Route, Routes } from "react-router-dom";
import Layout from "./components/layout/Layout";

import HomePage from "./pages/HomePage";
import LoginPage from "./pages/auth/LoginPage";
import SignUpPage from "./pages/auth/SignUpPage";
import toast, { Toaster } from "react-hot-toast";
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "./lib/axios";
import NotificationsPage from "./pages/NotificationsPage";
import NetworkPage from "./pages/NetworkPage";
import PostPage from "./pages/PostPage";
import ProfilePage from "./pages/ProfilePage";
import AdminDashboardPage from "./pages/AdminDashboardPage";
import ProjectsPage from "./pages/ProjectsPage";
import AnnouncementsPage from "./pages/AnnouncementsPage";
import JobBoardPage from "./pages/JobBoardPage"; // Import the new page component

// Import the questionnaire modal component
import QuestionnaireModal from "./components/QuestionnaireModal";

function App() {
    // State to control the questionnaire modal visibility
    const [showQuestionnaire, setShowQuestionnaire] = useState(false);
    
    const { data: authUser, isLoading } = useQuery({
        queryKey: ["authUser"],
        queryFn: async () => {
            try {
                const res = await axiosInstance.get("/auth/me");
                return res.data;
            } catch (err) {
                if (err.response && err.response.status === 401) {
                    return null;
                }
                toast.error(err.response?.data?.message || "Something went wrong");
                return null;
            }
        },
        retry: false,
        refetchOnWindowFocus: true,
    });
    
    // Effect to check if the user is an empresario and on their first login
    useEffect(() => {
        if (authUser && authUser.role === 'empresario' && authUser.isFirstLogin) {
            setShowQuestionnaire(true);
        } else {
            setShowQuestionnaire(false);
        }
    }, [authUser]);

    if (isLoading) {
        return (
            <div className="min-h-screen flex items-center justify-center">
                <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
            </div>
        );
    }

    return (
        <Layout>
            {/* Questionnaire Modal for empresario users on first login */}
            {showQuestionnaire && (
                <QuestionnaireModal
                    isOpen={showQuestionnaire}
                    onClose={() => setShowQuestionnaire(false)}
                    user={authUser}
                />
            )}
            
            <Routes>
                <Route 
                    path="/" 
                    element={authUser ? <HomePage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/login" 
                    element={!authUser ? <LoginPage /> : <Navigate to="/" />} 
                />
                <Route 
                    path="/signup" 
                    element={!authUser ? <SignUpPage /> : <Navigate to="/" />} 
                />
                <Route 
                    path="/notifications" 
                    element={authUser ? <NotificationsPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/network" 
                    element={authUser ? <NetworkPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/projects" 
                    element={authUser ? <ProjectsPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/announcements" 
                    element={
                        authUser ? 
                            (authUser.role === 'administrador' || authUser.role === 'egresado') ? 
                                <AnnouncementsPage /> : 
                                <Navigate to="/" /> 
                        : <Navigate to="/login" />
                    } 
                />
                {/* New Job Board Route with the same access restrictions as Announcements */}
                <Route 
                    path="/jobs" 
                    element={
                        authUser ? 
                            (authUser.role === 'administrador' || authUser.role === 'egresado') ? 
                                <JobBoardPage /> : 
                                <Navigate to="/" /> 
                        : <Navigate to="/login" />
                    } 
                />
                <Route 
                    path="/post/:postId" 
                    element={authUser ? <PostPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/profile/:username" 
                    element={authUser ? <ProfilePage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/admin" 
                    element={
                        authUser && authUser.role === 'administrador' 
                            ? <AdminDashboardPage /> 
                            : <Navigate to="/" />
                    } 
                />
            </Routes>
            <Toaster 
                position="top-center"
                reverseOrder={false}
                toastOptions={{
                    duration: 3000,
                    style: {
                        background: '#363636',
                        color: '#fff',
                    },
                }}
            />
        </Layout>
    );
}

export default App;

================
File: frontend/src/components/AboutSection.jsx
================
import { useState } from "react";

const AboutSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [about, setAbout] = useState(userData.about || "");

	const handleSave = () => {
		setIsEditing(false);
		onSave({ about });
	};
	return (
		<div className='bg-white shadow rounded-lg p-6 mb-6'>
			<h2 className='text-xl font-semibold mb-4'>Acerca de mi</h2>
			{isOwnProfile && (
				<>
					{isEditing ? (
						<>
							<textarea
								value={about}
								onChange={(e) => setAbout(e.target.value)}
								className='w-full p-2 border rounded'
								rows='4'
							/>
							<button
								onClick={handleSave}
								className='mt-2 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark 
								transition duration-300'
							>
								Guardar
							</button>
						</>
					) : (
						<>
							<p>{userData.about}</p>
							<button
								onClick={() => setIsEditing(true)}
								className='mt-2 text-primary hover:text-primary-dark transition duration-300'
							>
								Editar
							</button>
						</>
					)}
				</>
			)}
		</div>
	);
};
export default AboutSection;

================
File: frontend/src/components/Announcement.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link } from "react-router-dom";
import { Loader, Trash2 } from "lucide-react";
import { formatDistanceToNow } from "date-fns";

const Announcement = ({ announcement }) => {
  const { data: authUser } = useQuery({ queryKey: ["authUser"] });
  const isAdmin = authUser?.role === 'administrador';
  
  const queryClient = useQueryClient();

  const { mutate: deleteAnnouncement, isPending: isDeletingAnnouncement } = useMutation({
    mutationFn: async () => {
      await axiosInstance.delete(`/announcements/${announcement._id}`);
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["announcements"] });
      toast.success("Anuncio eliminado");
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || "Error al eliminar el anuncio");
    },
  });

  const handleDeleteAnnouncement = () => {
    if (!window.confirm("¿Estás seguro de que quieres eliminar este anuncio?")) return;
    deleteAnnouncement();
  };

  return (
    <div className="bg-white border-l-4 border-primary rounded-lg shadow mb-4">
      <div className="p-4">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center">
            <Link to={`/profile/${announcement?.author?.username}`}>
              <img
                src={announcement.author.profilePicture || "/avatar.png"}
                alt={announcement.author.name}
                className="size-10 rounded-full mr-3"
              />
            </Link>

            <div>
              <Link to={`/profile/${announcement?.author?.username}`}>
                <h3 className="font-semibold">{announcement.author.name}</h3>
              </Link>
              <p className="text-xs text-info">{announcement.author.headline}</p>
              <p className="text-xs text-info">
                {formatDistanceToNow(new Date(announcement.createdAt), { addSuffix: true })}
              </p>
            </div>
          </div>
          {isAdmin && (
            <button onClick={handleDeleteAnnouncement} className="text-red-500 hover:text-red-700">
              {isDeletingAnnouncement ? <Loader size={18} className="animate-spin" /> : <Trash2 size={18} />}
            </button>
          )}
        </div>
        <p className="mb-4">{announcement.content}</p>
        {announcement.image && <img src={announcement.image} alt="Contenido del anuncio" className="rounded-lg w-full mb-4" />}
      </div>
    </div>
  );
};

export default Announcement;

================
File: frontend/src/components/AnnouncementCreation.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Image, Loader } from "lucide-react";

const AnnouncementCreation = ({ user }) => {
  const [content, setContent] = useState("");
  const [image, setImage] = useState(null);
  const [imagePreview, setImagePreview] = useState(null);

  const queryClient = useQueryClient();

  const { mutate: createAnnouncementMutation, isPending } = useMutation({
    mutationFn: async (announcementData) => {
      const res = await axiosInstance.post("/announcements/create", announcementData, {
        headers: { "Content-Type": "application/json" },
      });
      return res.data;
    },
    onSuccess: () => {
      resetForm();
      toast.success("Anuncio creado");
      queryClient.invalidateQueries({ queryKey: ["announcements"] });
    },
    onError: (err) => {
      toast.error(err.response?.data?.message || "Error al crear el anuncio");
    },
  });

  const handleAnnouncementCreation = async () => {
    try {
      if (!content.trim()) {
        toast.error("El contenido es obligatorio");
        return;
      }
      
      const announcementData = { content };
      if (image) announcementData.image = await readFileAsDataURL(image);

      createAnnouncementMutation(announcementData);
    } catch (error) {
      console.error("Error in handleAnnouncementCreation:", error);
      toast.error("Error al crear el anuncio");
    }
  };

  const resetForm = () => {
    setContent("");
    setImage(null);
    setImagePreview(null);
  };

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    setImage(file);
    if (file) {
      readFileAsDataURL(file).then(setImagePreview);
    } else {
      setImagePreview(null);
    }
  };

  const readFileAsDataURL = (file) => {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onloadend = () => resolve(reader.result);
      reader.onerror = reject;
      reader.readAsDataURL(file);
    });
  };

  // Only render for admin users
  if (user.role !== 'administrador') return null;

  return (
    <div className="bg-secondary rounded-lg shadow mb-4 p-4">
      <h2 className="text-xl font-semibold mb-4">Crear nuevo anuncio</h2>
      <div className="flex space-x-3">
        <img src={user.profilePicture || "/avatar.png"} alt={user.name} className="size-12 rounded-full" />
        <textarea
          placeholder="Escribe un anuncio importante para los estudiantes..."
          className="w-full p-3 rounded-lg bg-base-100 hover:bg-base-200 focus:bg-base-200 focus:outline-none resize-none transition-colors duration-200 min-h-[100px]"
          value={content}
          onChange={(e) => setContent(e.target.value)}
        />
      </div>

      {imagePreview && (
        <div className="mt-4">
          <img src={imagePreview} alt="Vista previa del anuncio" className="w-full h-auto rounded-lg" />
        </div>
      )}

      <div className="flex justify-between items-center mt-4">
        <div className="flex space-x-4">
          <label className="flex items-center text-info hover:text-info-dark transition-colors duration-200 cursor-pointer">
            <Image size={20} className="mr-2" />
            <span>Agregar imagen</span>
            <input type="file" accept="image/*" className="hidden" onChange={handleImageChange} />
          </label>
        </div>

        <button
          className="bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200"
          onClick={handleAnnouncementCreation}
          disabled={isPending}
        >
          {isPending ? <Loader className="size-5 animate-spin" /> : "Publicar anuncio"}
        </button>
      </div>
    </div>
  );
};

export default AnnouncementCreation;

================
File: frontend/src/components/auth/LoginForm.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../../lib/axios";
import toast from "react-hot-toast";
import { Loader } from "lucide-react";

const LoginForm = () => {
	const [username, setUsername] = useState("");
	const [password, setPassword] = useState("");
	const queryClient = useQueryClient();

	const { mutate: loginMutation, isLoading } = useMutation({
		mutationFn: (userData) => axiosInstance.post("/auth/login", userData),
		onSuccess: (response) => {
			// Store the isFirstLogin status from the response if it exists
			if (response.data && response.data.isFirstLogin !== undefined) {
				// Pass isFirstLogin to authUser invalidation
				queryClient.invalidateQueries({ 
					queryKey: ["authUser"],
					// When refetching, add the isFirstLogin flag to the result
					updater: (oldData) => {
						if (oldData) {
							return {
								...oldData,
								isFirstLogin: response.data.isFirstLogin
							};
						}
						return oldData;
					}
				});
			} else {
				// Standard invalidation without updater if no isFirstLogin
				queryClient.invalidateQueries({ queryKey: ["authUser"] });
			}
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Something went wrong");
		},
	});

	const handleSubmit = (e) => {
		e.preventDefault();
		loginMutation({ username, password });
	};

	return (
		<form onSubmit={handleSubmit} className='space-y-4 w-full max-w-md'>
			<input
				type='text'
				placeholder='Usuario'
				value={username}
				onChange={(e) => setUsername(e.target.value)}
				className='input input-bordered w-full'
				required
			/>
			<input
				type='password'
				placeholder='Contraseña'
				value={password}
				onChange={(e) => setPassword(e.target.value)}
				className='input input-bordered w-full'
				required
			/>

			<button type='submit' className='btn btn-primary w-full'>
				{isLoading ? <Loader className='size-5 animate-spin' /> : "Entrar"}
			</button>
		</form>
	);
};
export default LoginForm;

================
File: frontend/src/components/auth/SignUpForm.jsx
================
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'react-hot-toast';
import axios from 'axios';

const SignupForm = () => {
    const navigate = useNavigate();
    const [formData, setFormData] = useState({
        name: '',
        username: '',
        email: '',
        studentId: '', // New field
        password: '',
        confirmPassword: ''
    });
    
    const [loading, setLoading] = useState(false);
    
    const handleChange = (e) => {
        const { name, value } = e.target;
        
        if (name === 'studentId') {
            // Auto-generate email based on student ID
            if (/^\d{8}$/.test(value)) {
                const generatedEmail = `L${value}@tuxtla.tecnm.mx`;
                setFormData({
                    ...formData,
                    studentId: value,
                    email: generatedEmail
                });
            } else {
                setFormData({
                    ...formData,
                    studentId: value,
                });
            }
        } else {
            setFormData({
                ...formData,
                [name]: value
            });
        }
    };
    
    const handleSubmit = async (e) => {
        e.preventDefault();
        
        if (formData.password !== formData.confirmPassword) {
            toast.error('Las contraseñas no coinciden');
            return;
        }
        
        // Validate student ID format
        if (!/^\d{8}$/.test(formData.studentId)) {
            toast.error('ID de estudiante inválido. Debe ser un número de 8 dígitos.');
            return;
        }
        
        // Validate institutional email format
        const expectedEmail = `L${formData.studentId}@tuxtla.tecnm.mx`;
        if (formData.email !== expectedEmail) {
            toast.error('El correo institucional debe coincidir con tu ID de estudiante');
            return;
        }
        
        try {
            setLoading(true);
            
            const { confirmPassword, ...dataToSend } = formData;
            
			const response = await axios.post('http://localhost:5000/api/v1/auth/signup', dataToSend);
            
            toast.success(response.data.message || 'Registro exitoso');
            navigate('/login');
        } catch (error) {
            toast.error(error.response?.data?.message || 'Error al registrarse');
        } finally {
            setLoading(false);
        }
    };
    
    return (
        <form onSubmit={handleSubmit} className="space-y-4">
            {/* Existing name and username fields */}
            <div>
                <label className="label">Nombre completo</label>
                <input
                    type="text"
                    name="name"
                    value={formData.name}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                />
            </div>
            
            <div>
                <label className="label">Nombre de usuario</label>
                <input
                    type="text"
                    name="username"
                    value={formData.username}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                />
            </div>
            
            {/* New student ID field */}
            <div>
                <label className="label">ID de Estudiante (8 dígitos)</label>
                <input
                    type="text"
                    name="studentId"
                    value={formData.studentId}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    placeholder="Ejemplo: 20270806"
                    required
                />
            </div>
            
            {/* Auto-generated email field (read-only) */}
            <div>
                <label className="label">Correo Institucional</label>
                <input
                    type="email"
                    name="email"
                    value={formData.email}
                    className="input input-bordered w-full"
                    readOnly
                    required
                />
                <p className="text-xs text-gray-500 mt-1">
                    El correo se genera automáticamente a partir de tu ID de estudiante
                </p>
            </div>
            
            {/* Password fields */}
            <div>
                <label className="label">Contraseña</label>
                <input
                    type="password"
                    name="password"
                    value={formData.password}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                    minLength={6}
                />
            </div>
            
            <div>
                <label className="label">Confirmar Contraseña</label>
                <input
                    type="password"
                    name="confirmPassword"
                    value={formData.confirmPassword}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                    minLength={6}
                />
            </div>
            
            <button 
                type="submit" 
                className="btn btn-primary w-full"
                disabled={loading}
            >
                {loading ? 'Registrando...' : 'Registrarse'}
            </button>
        </form>
    );
};

export default SignupForm;

================
File: frontend/src/components/CompanyInfoSection.jsx
================
// frontend/src/components/CompanyInfoSection.jsx

import { useState } from "react";
import { Globe, Calendar } from "lucide-react";

// Export this form for reuse in the questionnaire modal
export const CompanyInfoForm = ({ companyInfo, setCompanyInfo, hasWebsite, setHasWebsite }) => {
    return (
        <form className="space-y-4">
            <div>
                <label className="block text-sm font-medium text-gray-700">Nombre de la Empresa</label>
                <input
                    type="text"
                    value={companyInfo.companyName || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, companyName: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Industria</label>
                <input
                    type="text"
                    value={companyInfo.industry || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, industry: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Año de Fundación</label>
                <div className="relative">
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <Calendar className="h-5 w-5 text-gray-400" />
                    </div>
                    <input
                        type="number"
                        min="1900"
                        max={new Date().getFullYear()}
                        value={companyInfo.foundedYear || ''}
                        onChange={(e) => setCompanyInfo({...companyInfo, foundedYear: e.target.value})}
                        className="mt-1 p-2 pl-10 w-full border rounded-md"
                        placeholder={new Date().getFullYear()}
                    />
                </div>
            </div>
            
            <div>
                <div className="flex items-center justify-between mb-2">
                    <label className="block text-sm font-medium text-gray-700">Sitio Web</label>
                    <div className="flex items-center">
                        <span className="text-sm text-gray-500 mr-2">
                            {hasWebsite ? "Activado" : "Desactivado"}
                        </span>
                        <label className="relative inline-flex items-center cursor-pointer">
                            <input 
                                type="checkbox" 
                                checked={hasWebsite}
                                onChange={(e) => setHasWebsite(e.target.checked)}
                                className="sr-only peer" 
                            />
                            <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                        </label>
                    </div>
                </div>
                {hasWebsite && (
                    <div className="relative">
                        <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <Globe className="h-5 w-5 text-gray-400" />
                        </div>
                        <input
                            type="url"
                            value={companyInfo.website || ''}
                            onChange={(e) => setCompanyInfo({...companyInfo, website: e.target.value})}
                            className="mt-1 p-2 pl-10 w-full border rounded-md"
                            placeholder="https://"
                        />
                    </div>
                )}
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Cantidad de Empleados</label>
                <select
                    value={companyInfo.employees || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, employees: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                >
                    <option value="">Seleccionar</option>
                    <option value="1-10">1-10 empleados</option>
                    <option value="11-50">11-50 empleados</option>
                    <option value="51-200">51-200 empleados</option>
                    <option value="201-500">201-500 empleados</option>
                    <option value="501+">501+ empleados</option>
                </select>
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Descripción</label>
                <textarea
                    value={companyInfo.description || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, description: e.target.value})}
                    rows="4"
                    className="mt-1 p-2 w-full border rounded-md"
                ></textarea>
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Ubicación</label>
                <input
                    type="text"
                    value={companyInfo.location || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, location: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Email de Contacto</label>
                <input
                    type="email"
                    value={companyInfo.contactEmail || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactEmail: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Teléfono de Contacto</label>
                <input
                    type="tel"
                    value={companyInfo.contactPhone || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactPhone: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
        </form>
    );
};

const CompanyInfoSection = ({ userData, isOwnProfile, onSave }) => {
    const [isEditing, setIsEditing] = useState(false);
    const [companyInfo, setCompanyInfo] = useState(userData.companyInfo || {});
    const [hasWebsite, setHasWebsite] = useState(!!companyInfo.website);

    const handleSave = () => {
        // If they turned off the website switch, remove the website field
        const dataToSave = { ...companyInfo };
        if (!hasWebsite) {
            dataToSave.website = "";
        }
        
        console.log("CompanyInfoSection - Saving data:", dataToSave);
        onSave({ companyInfo: dataToSave });
        setIsEditing(false);
    };

    // Only render for empresario role
    if (userData.role !== 'empresario') return null;

    return (
        <div className='bg-white shadow rounded-lg p-6 mb-6'>
            <h2 className='text-xl font-semibold mb-4'>Información de la Empresa</h2>
            
            {isEditing ? (
                <>
                    <CompanyInfoForm 
                        companyInfo={companyInfo}
                        setCompanyInfo={setCompanyInfo}
                        hasWebsite={hasWebsite}
                        setHasWebsite={setHasWebsite}
                    />
                    
                    <button
                        type="button"
                        onClick={handleSave}
                        className="mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300"
                    >
                        Guardar Información
                    </button>
                </>
            ) : (
                <div className="space-y-4">
                    {companyInfo && companyInfo.companyName ? (
                        <>
                            <div>
                                <h3 className="font-semibold">Nombre:</h3>
                                <p>{companyInfo.companyName}</p>
                            </div>
                            
                            {companyInfo.industry && (
                                <div>
                                    <h3 className="font-semibold">Industria:</h3>
                                    <p>{companyInfo.industry}</p>
                                </div>
                            )}
                            
                            {companyInfo.foundedYear && (
                                <div>
                                    <h3 className="font-semibold">Fundada en:</h3>
                                    <p>{companyInfo.foundedYear}</p>
                                </div>
                            )}
                            
                            {companyInfo.website && (
                                <div>
                                    <h3 className="font-semibold">Sitio Web:</h3>
                                    <div className="flex items-center">
                                        <Globe size={16} className="mr-2 text-primary" />
                                        <a 
                                            href={companyInfo.website.startsWith('http') ? companyInfo.website : `https://${companyInfo.website}`} 
                                            target="_blank" 
                                            rel="noopener noreferrer" 
                                            className="text-primary hover:underline"
                                        >
                                            {companyInfo.website}
                                        </a>
                                    </div>
                                </div>
                            )}
                            
                            {companyInfo.employees && (
                                <div>
                                    <h3 className="font-semibold">Tamaño:</h3>
                                    <p>{companyInfo.employees} empleados</p>
                                </div>
                            )}
                            
                            {companyInfo.description && (
                                <div>
                                    <h3 className="font-semibold">Acerca de la empresa:</h3>
                                    <p>{companyInfo.description}</p>
                                </div>
                            )}
                            
                            {companyInfo.location && (
                                <div>
                                    <h3 className="font-semibold">Ubicación:</h3>
                                    <p>{companyInfo.location}</p>
                                </div>
                            )}
                            
                            {companyInfo.contactEmail && (
                                <div>
                                    <h3 className="font-semibold">Email de contacto:</h3>
                                    <p>{companyInfo.contactEmail}</p>
                                </div>
                            )}
                            
                            {companyInfo.contactPhone && (
                                <div>
                                    <h3 className="font-semibold">Teléfono de contacto:</h3>
                                    <p>{companyInfo.contactPhone}</p>
                                </div>
                            )}
                        </>
                    ) : (
                        <p className="text-gray-500">No hay información de la empresa disponible.</p>
                    )}
                    
                    {isOwnProfile && (
                        <button
                            onClick={() => setIsEditing(true)}
                            className="mt-4 text-primary hover:text-primary-dark transition duration-300"
                        >
                            Editar información de la empresa
                        </button>
                    )}
                </div>
            )}
        </div>
    );
};

export default CompanyInfoSection;

================
File: frontend/src/components/CompanyQuestionnaire.jsx
================
// frontend/src/components/CompanyQuestionnaire.jsx
import React, { useState } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { axiosInstance } from '../lib/axios';
import { CompanyInfoForm } from './CompanyInfoSection';
import toast from 'react-hot-toast';
import { ArrowRight, ArrowLeft, CheckCircle } from 'lucide-react';

// This component handles the multi-step questionnaire logic and can be used
// either directly or within another component like QuestionnaireModal
const CompanyQuestionnaire = ({ 
  initialData = {}, 
  onComplete, 
  onCancel,
  showSkip = true,
  containerClassName = "" 
}) => {
  const queryClient = useQueryClient();
  const [step, setStep] = useState(1);
  const [companyInfo, setCompanyInfo] = useState(initialData || {});
  const [hasWebsite, setHasWebsite] = useState(!!initialData?.website);
  const [isSubmitting, setIsSubmitting] = useState(false);

  // Check if required fields for the current step are filled
  const canProceed = () => {
    if (step === 1) {
      return !!companyInfo.companyName;
    }
    return true;
  };

  // Mutation to save company info and mark first login as completed
  const { mutate: completeSetup } = useMutation({
    mutationFn: async () => {
      // If website toggle is off, remove website field
      const dataToSubmit = { ...companyInfo };
      if (!hasWebsite) {
        dataToSubmit.website = "";
      }
      
      return axiosInstance.put('/users/complete-first-login', {
        companyInfo: dataToSubmit
      });
    },
    onSuccess: (response) => {
      toast.success('¡Información de la empresa guardada exitosamente!');
      
      // Update user data in the cache
      queryClient.invalidateQueries(['authUser']);
      
      // Reset state and call completion handler
      setIsSubmitting(false);
      if (onComplete) {
        onComplete(response.data);
      }
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al guardar la información');
      setIsSubmitting(false);
    }
  });

  const handleSubmit = () => {
    setIsSubmitting(true);
    completeSetup();
  };

  const handleSkip = () => {
    if (window.confirm('¿Estás seguro de que deseas omitir el cuestionario? La información de tu empresa no estará completa.')) {
      setIsSubmitting(true);
      completeSetup();
    }
  };

  return (
    <div className={containerClassName}>
      {/* Progress indicator */}
      <div className="mb-6 flex justify-between items-center">
        <div className="flex items-center">
          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
            step >= 1 ? 'bg-primary text-white' : 'bg-gray-200'
          }`}>
            1
          </div>
          <div className={`h-1 w-12 ${step >= 2 ? 'bg-primary' : 'bg-gray-200'}`}></div>
          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
            step >= 2 ? 'bg-primary text-white' : 'bg-gray-200'
          }`}>
            2
          </div>
        </div>
        <div>
          Paso {step} de 2
        </div>
      </div>
      
      {/* Step content */}
      {step === 1 && (
        <div>
          <h3 className="text-lg font-semibold mb-4">Información Básica de la Empresa</h3>
          <p className="text-gray-600 mb-4">
            Como usuario empresario, necesitamos algunos detalles sobre su negocio para mostrar en su perfil.
            Esta información ayudará a los egresados a conocer mejor su empresa.
          </p>
          
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700">Nombre de la Empresa *</label>
              <input
                type="text"
                value={companyInfo.companyName || ''}
                onChange={(e) => setCompanyInfo({...companyInfo, companyName: e.target.value})}
                className="mt-1 p-2 w-full border rounded-md"
                required
              />
              <p className="text-xs text-gray-500 mt-1">Campo obligatorio</p>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700">Industria</label>
              <input
                type="text"
                value={companyInfo.industry || ''}
                onChange={(e) => setCompanyInfo({...companyInfo, industry: e.target.value})}
                className="mt-1 p-2 w-full border rounded-md"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700">Ubicación</label>
              <input
                type="text"
                value={companyInfo.location || ''}
                onChange={(e) => setCompanyInfo({...companyInfo, location: e.target.value})}
                className="mt-1 p-2 w-full border rounded-md"
              />
            </div>
          </div>
        </div>
      )}
      
      {step === 2 && (
        <div>
          <h3 className="text-lg font-semibold mb-4">Detalles Adicionales</h3>
          <p className="text-gray-600 mb-4">
            Proporcione información adicional que ayude a presentar mejor su empresa a los egresados.
          </p>
          
          {/* Reuse the company info form for the rest of the fields */}
          <CompanyInfoForm 
            companyInfo={companyInfo}
            setCompanyInfo={setCompanyInfo}
            hasWebsite={hasWebsite}
            setHasWebsite={setHasWebsite}
          />
        </div>
      )}
      
      {/* Action buttons */}
      <div className="mt-6 pt-4 border-t flex justify-between items-center">
        {step === 1 ? (
          <button
            onClick={showSkip ? handleSkip : onCancel}
            className="text-gray-500 hover:text-gray-700"
            disabled={isSubmitting}
          >
            {showSkip ? "Omitir por ahora" : "Cancelar"}
          </button>
        ) : (
          <button
            onClick={() => setStep(step - 1)}
            className="flex items-center text-gray-700 hover:text-gray-900"
            disabled={isSubmitting}
          >
            <ArrowLeft size={16} className="mr-1" />
            Anterior
          </button>
        )}
        
        {step < 2 ? (
          <button
            onClick={() => setStep(step + 1)}
            disabled={!canProceed() || isSubmitting}
            className={`flex items-center bg-primary text-white px-4 py-2 rounded-md ${
              !canProceed() ? 'opacity-50 cursor-not-allowed' : 'hover:bg-primary-dark'
            }`}
          >
            Siguiente
            <ArrowRight size={16} className="ml-1" />
          </button>
        ) : (
          <button
            onClick={handleSubmit}
            disabled={isSubmitting}
            className="flex items-center bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark"
          >
            {isSubmitting ? (
              <>
                <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Guardando...
              </>
            ) : (
              <>
                <CheckCircle size={16} className="mr-1" />
                Completar Configuración
              </>
            )}
          </button>
        )}
      </div>
    </div>
  );
};

export default CompanyQuestionnaire;

================
File: frontend/src/components/EducationSection.jsx
================
import { School, X } from "lucide-react";
import { useState } from "react";

const EducationSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [educations, setEducations] = useState(userData.education || []);
	const [newEducation, setNewEducation] = useState({
		school: "",
		fieldOfStudy: "",
		startYear: "",
		endYear: "",
	});

	const handleAddEducation = () => {
		if (newEducation.school && newEducation.fieldOfStudy && newEducation.startYear) {
			setEducations([...educations, newEducation]);
			setNewEducation({
				school: "",
				fieldOfStudy: "",
				startYear: "",
				endYear: "",
			});
		}
	};

	const handleDeleteEducation = (id) => {
		setEducations(educations.filter((edu) => edu._id !== id));
	};

	const handleSave = () => {
		onSave({ education: educations });
		setIsEditing(false);
	};

	return (
		<div className='bg-white shadow rounded-lg p-6 mb-6'>
			<h2 className='text-xl font-semibold mb-4'>Educación</h2>
			{educations.map((edu) => (
				<div key={edu._id} className='mb-4 flex justify-between items-start'>
					<div className='flex items-start'>
						<School size={20} className='mr-2 mt-1' />
						<div>
							<h3 className='font-semibold'>{edu.fieldOfStudy}</h3>
							<p className='text-gray-600'>{edu.school}</p>
							<p className='text-gray-500 text-sm'>
								{edu.startYear} - {edu.endYear || "Present"}
							</p>
						</div>
					</div>
					{isEditing && (
						<button onClick={() => handleDeleteEducation(edu._id)} className='text-red-500'>
							<X size={20} />
						</button>
					)}
				</div>
			))}
			{isEditing && (
				<div className='mt-4'>
					<input
						type='text'
						placeholder='Escuela'
						value={newEducation.school}
						onChange={(e) => setNewEducation({ ...newEducation, school: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='text'
						placeholder='Especialidad'
						value={newEducation.fieldOfStudy}
						onChange={(e) => setNewEducation({ ...newEducation, fieldOfStudy: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='number'
						placeholder='Año de ingreso.'
						value={newEducation.startYear}
						onChange={(e) => setNewEducation({ ...newEducation, startYear: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='number'
						placeholder='Fin del año.'
						value={newEducation.endYear}
						onChange={(e) => setNewEducation({ ...newEducation, endYear: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<button
						onClick={handleAddEducation}
						className='bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
					>
						Añadir educación
					</button>
				</div>
			)}

			{isOwnProfile && (
				<>
					{isEditing ? (
						<button
							onClick={handleSave}
							className='mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark
							 transition duration-300'
						>
							Guardar cambios
						</button>
					) : (
						<button
							onClick={() => setIsEditing(true)}
							className='mt-4 text-primary hover:text-primary-dark transition duration-300'
						>
							Editar educación
						</button>
					)}
				</>
			)}
		</div>
	);
};
export default EducationSection;

================
File: frontend/src/components/ExperienceSection.jsx
================
import { Briefcase, X } from "lucide-react";
import { useState } from "react";
import { formatDate } from "../utils/dateUtils";

const ExperienceSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [experiences, setExperiences] = useState(userData.experience || []);
	const [newExperience, setNewExperience] = useState({
		title: "",
		company: "",
		startDate: "",
		endDate: "",
		description: "",
		currentlyWorking: false,
	});

	const handleAddExperience = () => {
		if (newExperience.title && newExperience.company && newExperience.startDate) {
			setExperiences([...experiences, newExperience]);

			setNewExperience({
				title: "",
				company: "",
				startDate: "",
				endDate: "",
				description: "",
				currentlyWorking: false,
			});
		}
	};

	const handleDeleteExperience = (id) => {
		setExperiences(experiences.filter((exp) => exp._id !== id));
	};

	const handleSave = () => {
		onSave({ experience: experiences });
		setIsEditing(false);
	};

	const handleCurrentlyWorkingChange = (e) => {
		setNewExperience({
			...newExperience,
			currentlyWorking: e.target.checked,
			endDate: e.target.checked ? "" : newExperience.endDate,
		});
	};

	return (
		<div className='bg-white shadow rounded-lg p-6 mb-6'>
			<h2 className='text-xl font-semibold mb-4'>Experiencia</h2>
			{experiences.map((exp) => (
				<div key={exp._id} className='mb-4 flex justify-between items-start'>
					<div className='flex items-start'>
						<Briefcase size={20} className='mr-2 mt-1' />
						<div>
							<h3 className='font-semibold'>{exp.title}</h3>
							<p className='text-gray-600'>{exp.company}</p>
							<p className='text-gray-500 text-sm'>
								{formatDate(exp.startDate)} - {exp.endDate ? formatDate(exp.endDate) : "presente"}
							</p>
							<p className='text-gray-700'>{exp.description}</p>
						</div>
					</div>
					{isEditing && (
						<button onClick={() => handleDeleteExperience(exp._id)} className='text-red-500'>
							<X size={20} />
						</button>
					)}
				</div>
			))}

			{isEditing && (
				<div className='mt-4'>
					<input
						type='text'
						placeholder='Titulo'
						value={newExperience.title}
						onChange={(e) => setNewExperience({ ...newExperience, title: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='text'
						placeholder='Compañia'
						value={newExperience.company}
						onChange={(e) => setNewExperience({ ...newExperience, company: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='date'
						placeholder='Fecha de inicio'
						value={newExperience.startDate}
						onChange={(e) => setNewExperience({ ...newExperience, startDate: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<div className='flex items-center mb-2'>
						<input
							type='checkbox'
							id='currentlyWorking'
							checked={newExperience.currentlyWorking}
							onChange={handleCurrentlyWorkingChange}
							className='mr-2'
						/>
						<label htmlFor='currentlyWorking'>Sigo trabajando aquí</label>
					</div>
					{!newExperience.currentlyWorking && (
						<input
							type='date'
							placeholder='Fecha de terminación'
							value={newExperience.endDate}
							onChange={(e) => setNewExperience({ ...newExperience, endDate: e.target.value })}
							className='w-full p-2 border rounded mb-2'
						/>
					)}
					<textarea
						placeholder='Descripción'
						value={newExperience.description}
						onChange={(e) => setNewExperience({ ...newExperience, description: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<button
						onClick={handleAddExperience}
						className='bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
					>
						Añadir experiencia
					</button>
				</div>
			)}

			{isOwnProfile && (
				<>
					{isEditing ? (
						<button
							onClick={handleSave}
							className='mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
						>
							Guardar cambios
						</button>
					) : (
						<button
							onClick={() => setIsEditing(true)}
							className='mt-4 text-primary hover:text-primary-dark transition duration-300'
						>
							Editar experiencias
						</button>
					)}
				</>
			)}
		</div>
	);
};
export default ExperienceSection;

================
File: frontend/src/components/FriendRequest.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link } from "react-router-dom";

const FriendRequest = ({ request }) => {
	const queryClient = useQueryClient();

	const { mutate: acceptConnectionRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/accept/${requestId}`),
		onSuccess: () => {
			toast.success("solicitud de conexión aceptada");
			queryClient.invalidateQueries({ queryKey: ["connectionRequests"] });
		},
		onError: (error) => {
			toast.error(error.response.data.error);
		},
	});

	const { mutate: rejectConnectionRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/reject/${requestId}`),
		onSuccess: () => {
			toast.success("Solicitud de conexión rechazada");
			queryClient.invalidateQueries({ queryKey: ["connectionRequests"] });
		},
		onError: (error) => {
			toast.error(error.response.data.error);
		},
	});

	return (
		<div className='bg-white rounded-lg shadow p-4 flex items-center justify-between transition-all hover:shadow-md'>
			<div className='flex items-center gap-4'>
				<Link to={`/profile/${request.sender.username}`}>
					<img
						src={request.sender.profilePicture || "/avatar.png"}
						alt={request.name}
						className='w-16 h-16 rounded-full object-cover'
					/>
				</Link>

				<div>
					<Link to={`/profile/${request.sender.username}`} className='font-semibold text-lg'>
						{request.sender.name}
					</Link>
					<p className='text-gray-600'>{request.sender.headline}</p>
				</div>
			</div>

			<div className='space-x-2'>
				<button
					className='bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors'
					onClick={() => acceptConnectionRequest(request._id)}
				>
					Aceptar
				</button>
				<button
					className='bg-gray-200 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-300 transition-colors'
					onClick={() => rejectConnectionRequest(request._id)}
				>
					Rechazar
				</button>
			</div>
		</div>
	);
};
export default FriendRequest;

================
File: frontend/src/components/JobPost.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link } from "react-router-dom";
import { Loader, Calendar, MapPin, Briefcase, Building, Trash2, DollarSign, Mail, Clock } from "lucide-react";
import { formatDistanceToNow } from "date-fns";

const JobPost = ({ jobPost }) => {
  const { data: authUser } = useQuery({ queryKey: ["authUser"] });
  const isAdmin = authUser?.role === 'administrador';
  const isAuthor = authUser?._id === jobPost.author._id;
  
  const queryClient = useQueryClient();

  const { mutate: deleteJobPost, isPending: isDeletingJob } = useMutation({
    mutationFn: async () => {
      await axiosInstance.delete(`/jobs/${jobPost._id}`);
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["jobs"] });
      toast.success("Oferta de trabajo eliminada");
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || "Error al eliminar la oferta de trabajo");
    },
  });

  const handleDeleteJobPost = () => {
    if (!window.confirm("¿Estás seguro de que quieres eliminar esta oferta de trabajo?")) return;
    deleteJobPost();
  };

  // Format deadline date
  const formatDeadline = (deadline) => {
    if (!deadline) return "No especificada";
    
    const deadlineDate = new Date(deadline);
    return deadlineDate.toLocaleDateString("es-ES", {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  // Get badge color for job status
  const getStatusBadgeClass = (status) => {
    switch(status) {
      case 'active':
        return 'bg-green-100 text-green-800';
      case 'closed':
        return 'bg-gray-100 text-gray-800';
      case 'expired':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-blue-100 text-blue-800';
    }
  };

  // Get badge color for job type
  const getJobTypeBadgeClass = (jobType) => {
    switch(jobType) {
      case 'full-time':
        return 'bg-blue-100 text-blue-800';
      case 'part-time':
        return 'bg-purple-100 text-purple-800';
      case 'contract':
        return 'bg-yellow-100 text-yellow-800';
      case 'internship':
        return 'bg-green-100 text-green-800';
      case 'temporary':
        return 'bg-orange-100 text-orange-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  // Get job type label in Spanish
  const getJobTypeLabel = (jobType) => {
    switch(jobType) {
      case 'full-time': return 'Tiempo completo';
      case 'part-time': return 'Medio tiempo';
      case 'contract': return 'Contrato';
      case 'internship': return 'Pasantía';
      case 'temporary': return 'Temporal';
      default: return jobType;
    }
  };

  return (
    <div className="bg-white rounded-lg shadow mb-4 overflow-hidden">
      <div className="border-l-4 border-primary">
        <div className="p-6">
          {/* Header with author info and actions */}
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center">
              <Link to={`/profile/${jobPost?.author?.username}`}>
                <img
                  src={jobPost.author.profilePicture || "/avatar.png"}
                  alt={jobPost.author.name}
                  className="size-10 rounded-full mr-3"
                />
              </Link>

              <div>
                <Link to={`/profile/${jobPost?.author?.username}`}>
                  <h3 className="font-semibold">{jobPost.author.name}</h3>
                </Link>
                <p className="text-xs text-info">{jobPost.author.headline}</p>
                <p className="text-xs text-info">
                  {formatDistanceToNow(new Date(jobPost.createdAt), { addSuffix: true })}
                </p>
              </div>
            </div>
            
            {/* Delete button if admin and author */}
            {isAdmin && isAuthor && (
              <button onClick={handleDeleteJobPost} className="text-red-500 hover:text-red-700">
                {isDeletingJob ? <Loader size={18} className="animate-spin" /> : <Trash2 size={18} />}
              </button>
            )}
          </div>
          
          {/* Job status badge and type badge */}
          <div className="flex flex-wrap gap-2 mb-4">
            <span className={`px-2 py-1 text-xs rounded-full ${getStatusBadgeClass(jobPost.status)}`}>
              {jobPost.status === 'active' ? 'Activa' : 
               jobPost.status === 'closed' ? 'Cerrada' : 'Expirada'}
            </span>
            
            <span className={`px-2 py-1 text-xs rounded-full ${getJobTypeBadgeClass(jobPost.jobType)}`}>
              {getJobTypeLabel(jobPost.jobType)}
            </span>
          </div>

          {/* Job title */}
          <h2 className="text-xl font-bold mb-3">{jobPost.title}</h2>
          
          {/* Company and location info */}
          <div className="flex flex-wrap gap-x-8 gap-y-2 mb-4">
            <div className="flex items-center text-gray-600">
              <Building size={16} className="mr-2" />
              <span>{jobPost.company}</span>
            </div>
            
            <div className="flex items-center text-gray-600">
              <MapPin size={16} className="mr-2" />
              <span>{jobPost.location}</span>
            </div>
            
            {jobPost.salary && (
              <div className="flex items-center text-gray-600">
                <DollarSign size={16} className="mr-2" />
                <span>{jobPost.salary}</span>
              </div>
            )}
            
            {jobPost.applicationDeadline && (
              <div className="flex items-center text-gray-600">
                <Calendar size={16} className="mr-2" />
                <span>Fecha límite: {formatDeadline(jobPost.applicationDeadline)}</span>
              </div>
            )}
          </div>

          {/* Description */}
          <div className="mb-4">
            <h3 className="font-semibold mb-2">Descripción</h3>
            <p className="whitespace-pre-line">{jobPost.description}</p>
          </div>
          
          {/* Requirements if available */}
          {jobPost.requirements && (
            <div className="mb-4">
              <h3 className="font-semibold mb-2">Requisitos</h3>
              <p className="whitespace-pre-line">{jobPost.requirements}</p>
            </div>
          )}
          
          {/* Contact information */}
          {jobPost.contactEmail && (
            <div className="mt-6 p-4 bg-gray-50 rounded-lg">
              <h3 className="font-semibold mb-2">Información de contacto</h3>
              <div className="flex items-center">
                <Mail size={16} className="mr-2 text-primary" />
                <a href={`mailto:${jobPost.contactEmail}`} className="text-primary hover:underline">
                  {jobPost.contactEmail}
                </a>
              </div>
            </div>
          )}
          
          {/* Application deadline notice */}
          {jobPost.applicationDeadline && (
            <div className="mt-4 flex items-center text-sm text-gray-500">
              <Clock size={14} className="mr-1" />
              <span>
                {new Date(jobPost.applicationDeadline) > new Date() 
                  ? `Postulaciones abiertas hasta el ${formatDeadline(jobPost.applicationDeadline)}`
                  : `Fecha límite de postulación pasada (${formatDeadline(jobPost.applicationDeadline)})`
                }
              </span>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default JobPost;

================
File: frontend/src/components/JobPostCreation.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { 
  Briefcase, 
  Building, 
  MapPin, 
  FileText, 
  Calendar, 
  DollarSign, 
  Mail, 
  Loader, 
  X 
} from "lucide-react";

const JobPostCreation = ({ user, onComplete }) => {
  const [jobData, setJobData] = useState({
    title: "",
    company: "",
    location: "",
    description: "",
    requirements: "",
    salary: "",
    contactEmail: "",
    applicationDeadline: "",
    jobType: "full-time"
  });
  const [showDeadline, setShowDeadline] = useState(false);

  const queryClient = useQueryClient();

  const { mutate: createJobPostMutation, isPending } = useMutation({
    mutationFn: async (data) => {
      const res = await axiosInstance.post("/jobs/create", data, {
        headers: { "Content-Type": "application/json" },
      });
      return res.data;
    },
    onSuccess: () => {
      resetForm();
      toast.success("Oferta de trabajo creada exitosamente");
      queryClient.invalidateQueries({ queryKey: ["jobs"] });
      if (onComplete) onComplete();
    },
    onError: (err) => {
      toast.error(err.response?.data?.message || "Error al crear la oferta de trabajo");
    },
  });

  const handleJobCreation = async () => {
    try {
      if (!jobData.title || !jobData.company || !jobData.location || !jobData.description || !jobData.jobType) {
        return toast.error("Por favor complete los campos obligatorios");
      }

      // Create a copy of job data
      const dataToSubmit = { ...jobData };
      
      // If deadline checkbox is unchecked, remove the deadline field
      if (!showDeadline) {
        dataToSubmit.applicationDeadline = null;
      }

      createJobPostMutation(dataToSubmit);
    } catch (error) {
      console.error("Error in handleJobCreation:", error);
      toast.error("Error al crear la oferta de trabajo");
    }
  };

  const resetForm = () => {
    setJobData({
      title: "",
      company: "",
      location: "",
      description: "",
      requirements: "",
      salary: "",
      contactEmail: "",
      applicationDeadline: "",
      jobType: "full-time"
    });
    setShowDeadline(false);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setJobData({ ...jobData, [name]: value });
  };

  // Only render for admin users
  if (user.role !== 'administrador') return null;

  return (
    <div className="bg-white rounded-lg shadow p-6 border-2 border-primary mb-6">
      <div className="flex justify-between items-center mb-4">
        <h2 className="text-xl font-bold flex items-center">
          <Briefcase className="mr-2" /> Publicar Nueva Oferta de Trabajo
        </h2>
      </div>

      <div className="space-y-4">
        {/* Job Title */}
        <div>
          <label className="block text-sm font-medium mb-1">Título del Puesto*</label>
          <div className="relative">
            <input
              type="text"
              name="title"
              value={jobData.title}
              onChange={handleInputChange}
              placeholder="Ej: Desarrollador Full Stack"
              className="w-full p-3 pl-10 border rounded-lg"
              required
            />
            <Briefcase className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Company */}
        <div>
          <label className="block text-sm font-medium mb-1">Empresa*</label>
          <div className="relative">
            <input
              type="text"
              name="company"
              value={jobData.company}
              onChange={handleInputChange}
              placeholder="Ej: Tech Innovations S.A."
              className="w-full p-3 pl-10 border rounded-lg"
              required
            />
            <Building className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Location */}
        <div>
          <label className="block text-sm font-medium mb-1">Ubicación*</label>
          <div className="relative">
            <input
              type="text"
              name="location"
              value={jobData.location}
              onChange={handleInputChange}
              placeholder="Ej: Tuxtla Gutiérrez, Chiapas"
              className="w-full p-3 pl-10 border rounded-lg"
              required
            />
            <MapPin className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Job Type */}
        <div>
          <label className="block text-sm font-medium mb-1">Tipo de Empleo*</label>
          <div className="relative">
            <select
              name="jobType"
              value={jobData.jobType}
              onChange={handleInputChange}
              className="w-full p-3 pl-10 border rounded-lg appearance-none"
              required
            >
              <option value="full-time">Tiempo Completo</option>
              <option value="part-time">Medio Tiempo</option>
              <option value="contract">Contrato</option>
              <option value="internship">Pasantía</option>
              <option value="temporary">Temporal</option>
            </select>
            <Briefcase className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Description */}
        <div>
          <label className="block text-sm font-medium mb-1">Descripción del Puesto*</label>
          <div className="relative">
            <textarea
              name="description"
              value={jobData.description}
              onChange={handleInputChange}
              placeholder="Describe las responsabilidades y detalles del puesto..."
              className="w-full p-3 pl-10 border rounded-lg min-h-[120px]"
              required
            />
            <FileText className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Requirements */}
        <div>
          <label className="block text-sm font-medium mb-1">Requisitos</label>
          <div className="relative">
            <textarea
              name="requirements"
              value={jobData.requirements}
              onChange={handleInputChange}
              placeholder="Requisitos, habilidades o experiencia necesaria..."
              className="w-full p-3 pl-10 border rounded-lg min-h-[100px]"
            />
            <FileText className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Salary */}
        <div>
          <label className="block text-sm font-medium mb-1">Salario (opcional)</label>
          <div className="relative">
            <input
              type="text"
              name="salary"
              value={jobData.salary}
              onChange={handleInputChange}
              placeholder="Ej: $15,000 - $20,000 MXN mensual"
              className="w-full p-3 pl-10 border rounded-lg"
            />
            <DollarSign className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Contact Email */}
        <div>
          <label className="block text-sm font-medium mb-1">Email de Contacto</label>
          <div className="relative">
            <input
              type="email"
              name="contactEmail"
              value={jobData.contactEmail}
              onChange={handleInputChange}
              placeholder="Ej: reclutamiento@empresa.com"
              className="w-full p-3 pl-10 border rounded-lg"
            />
            <Mail className="absolute left-3 top-3 text-gray-400" size={18} />
          </div>
        </div>

        {/* Application Deadline */}
        <div>
          <div className="flex items-center mb-2">
            <input
              type="checkbox"
              id="enableDeadline"
              checked={showDeadline}
              onChange={(e) => setShowDeadline(e.target.checked)}
              className="mr-2"
            />
            <label htmlFor="enableDeadline" className="block text-sm font-medium">
              Establecer Fecha Límite de Aplicación
            </label>
          </div>
          
          {showDeadline && (
            <div className="relative">
              <input
                type="date"
                name="applicationDeadline"
                value={jobData.applicationDeadline}
                onChange={handleInputChange}
                className="w-full p-3 pl-10 border rounded-lg"
                min={new Date().toISOString().split('T')[0]} // Set min date to today
              />
              <Calendar className="absolute left-3 top-3 text-gray-400" size={18} />
            </div>
          )}
        </div>

        {/* Action Buttons */}
        <div className="flex justify-end items-center mt-6 pt-4 border-t">
          <button
            onClick={resetForm}
            className="mr-3 flex items-center gap-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-100"
          >
            <X size={18} />
            Cancelar
          </button>
          
          <button
            onClick={handleJobCreation}
            disabled={isPending}
            className="flex items-center gap-1 bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary-dark transition-colors"
          >
            {isPending ? (
              <>
                <Loader className="animate-spin" size={18} />
                Publicando...
              </>
            ) : (
              <>
                <Briefcase size={18} />
                Publicar Oferta
              </>
            )}
          </button>
        </div>
      </div>
    </div>
  );
};

export default JobPostCreation;

================
File: frontend/src/components/layout/Layout.jsx
================
import Navbar from "./Navbar";

const Layout = ({ children }) => {
	return (
		<div className='min-h-screen bg-base-100'>
			<Navbar />
			<main className='max-w-7xl mx-auto px-4 py-6'>{children}</main>
		</div>
	);
};
export default Layout;

================
File: frontend/src/components/layout/Navbar.jsx
================
// frontend/src/components/layout/Navbar.jsx
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../../lib/axios";
import { Link } from "react-router-dom";
import { Bell, Home, LogOut, User, Users, Settings, Briefcase, Megaphone, Bookmark } from "lucide-react";

const Navbar = () => {
    const { data: authUser } = useQuery({ queryKey: ["authUser"] });
    const queryClient = useQueryClient();

    const { data: notifications } = useQuery({
        queryKey: ["notifications"],
        queryFn: async () => axiosInstance.get("/notifications"),
        enabled: !!authUser,
    });

    const { data: connectionRequests } = useQuery({
        queryKey: ["connectionRequests"],
        queryFn: async () => axiosInstance.get("/connections/requests"),
        enabled: !!authUser,
    });

    const { mutate: logout } = useMutation({
        mutationFn: () => axiosInstance.post("/auth/logout"),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ["authUser"] });
        },
    });

    const unreadNotificationCount = notifications?.data.filter((notif) => !notif.read).length;
    const unreadConnectionRequestsCount = connectionRequests?.data?.length;

    return (
        <nav className='shadow-md sticky top-0 z-10' style={{ backgroundColor: '#1b386a' }}>
    <div className='maindigox-w-7xl mx-auto px-4'>
        <div className='flex justify-between items-center py-3'>
            {/* Rest of the code remains the same */}
                    <div className='flex items-center space-x-4'>
                        <Link to='/'>
                            <img className='h-8 rounded' src='/small-logo.png' alt='LinkedIn' />
                        </Link>
                    </div>
                    <div className='flex items-center gap-2 md:gap-6'>
                        {authUser ? (
                            <>
                                <Link to={"/"} className='text-zinc-50 flex flex-col items-center'>
                                    <Home size={20} />
                                    <span className='text-xs hidden md:block'>Inicio</span>
                                </Link>
                                
                                <Link to='/projects' className='text-zinc-50 flex flex-col items-center'>
                                    <Briefcase size={20} />
                                    <span className='text-xs hidden md:block'>Proyectos</span>
                                </Link>

                                <Link to='/network' className='text-zinc-50 flex flex-col items-center relative'>
                                    <Users size={20} />
                                    <span className='text-xs hidden md:block'>Contactos</span>
                                    {unreadConnectionRequestsCount > 0 && (
                                        <span
                                            className='absolute -top-1 -right-1 md:right-4 bg-blue-500 text-white text-xs 
                                            rounded-full size-3 md:size-4 flex items-center justify-center'
                                        >
                                            {unreadConnectionRequestsCount}
                                        </span>
                                    )}
                                </Link>

                                <Link to='/notifications' className='text-zinc-50 flex flex-col items-center relative'>
                                    <Bell size={20} />
                                    <span className='text-xs hidden md:block'>Notificaciones</span>
                                    {unreadNotificationCount > 0 && (
                                        <span
                                            className='absolute -top-1 -right-1 md:right-4 bg-blue-500 text-white text-xs 
                                            rounded-full size-3 md:size-4 flex items-center justify-center'
                                        >
                                            {unreadNotificationCount}
                                        </span>
                                    )}
                                </Link>

                                {/* Announcements Tab - Only visible to students and admins */}
                                {(authUser.role === 'egresado' || authUser.role === 'administrador') && (
                                    <Link to='/announcements' className='text-zinc-50 flex flex-col items-center'>
                                        <Megaphone size={20} />
                                        <span className='text-xs hidden md:block'>Anuncios</span>
                                    </Link>
                                )}
                                
                                {/* Job Board Tab - Only visible to students and admins */}
                                {(authUser.role === 'egresado' || authUser.role === 'administrador') && (
                                    <Link to='/jobs' className='text-zinc-50 flex flex-col items-center'>
                                        <Bookmark size={20} />
                                        <span className='text-xs hidden md:block'>Bolsa de Trabajos</span>
                                    </Link>
                                )}

                                <Link
                                    to={`/profile/${authUser.username}`}
                                    className='text-zinc-50 flex flex-col items-center'
                                >
                                    <User size={20} />
                                    <span className='text-xs hidden md:block'>Acerca de mi</span>
                                </Link>
                                
                                {authUser.role === 'administrador' && (
                                    <Link to='/admin' className='text-zinc-50 flex flex-col items-center'>
                                        <Settings size={20} />
                                        <span className='text-xs hidden md:block'>Admin</span>
                                    </Link>
                                )}
                                
                                <button
                                    className='flex items-center space-x-1 text-sm text-gray-400 hover:text-zinc-200'
                                    onClick={() => logout()}
                                >
                                    <LogOut size={20} />
                                    <span className='hidden md:inline'>cerrar sesión</span>
                                </button>
                            </>
                        ) : (
                            <>
                                <Link to='/login' className='btn btn-primary'>
                                    Iniciar sesión
                                </Link>
                                <Link to='/signup' className='btn btn-primary'>
                                    Registrarse
                                </Link>
                            </>
                        )}
                    </div>
                </div>
            </div>
        </nav>
    );
};

export default Navbar;

================
File: frontend/src/components/Post.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link, useParams } from "react-router-dom";
import { Loader, MessageCircle, Send, Share2, ThumbsUp, Trash2, SquareChevronUp, } from "lucide-react";
import { formatDistanceToNow } from "date-fns";

import PostAction from "./PostAction";

const Post = ({ post }) => {
	const { postId } = useParams();

	const { data: authUser } = useQuery({ queryKey: ["authUser"] });
	const [showComments, setShowComments] = useState(false);
	const [newComment, setNewComment] = useState("");
	const [comments, setComments] = useState(post.comments || []);
	const isOwner = authUser._id === post.author._id;
	const isLiked = post.likes.includes(authUser._id);

	const queryClient = useQueryClient();

	const { mutate: deletePost, isPending: isDeletingPost } = useMutation({
		mutationFn: async () => {
			await axiosInstance.delete(`/posts/delete/${post._id}`);
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			toast.success("Post borrado");
		},
		onError: (error) => {
			toast.error(error.message);
		},
	});

	const { mutate: createComment, isPending: isAddingComment } = useMutation({
		mutationFn: async (newComment) => {
			await axiosInstance.post(`/posts/${post._id}/comment`, { content: newComment });
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			toast.success("Comentario añadido");
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Fallo al añadir el comentario");
		},
	});

	const { mutate: likePost, isPending: isLikingPost } = useMutation({
		mutationFn: async () => {
			await axiosInstance.post(`/posts/${post._id}/like`);
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			queryClient.invalidateQueries({ queryKey: ["post", postId] });
		},
	});

	const handleDeletePost = () => {
		if (!window.confirm("¿Estas seguro de que quieres borrar este post?")) return;
		deletePost();
	};

	const handleLikePost = async () => {
		if (isLikingPost) return;
		likePost();
	};

	const handleAddComment = async (e) => {
		e.preventDefault();
		if (newComment.trim()) {
			createComment(newComment);
			setNewComment("");
			setComments([
				...comments,
				{
					content: newComment,
					user: {
						_id: authUser._id,
						name: authUser.name,
						profilePicture: authUser.profilePicture,
					},
					createdAt: new Date(),
				},
			]);
		}
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4'>
			<div className='p-4'>
				<div className='flex items-center justify-between mb-4'>
					<div className='flex items-center'>
						<Link to={`/profile/${post?.author?.username}`}>
							<img
								src={post.author.profilePicture || "/avatar.png"}
								alt={post.author.name}
								className='size-10 rounded-full mr-3'
							/>
						</Link>

						<div>
							<Link to={`/profile/${post?.author?.username}`}>
								<h3 className='font-semibold'>{post.author.name}</h3>
							</Link>
							<p className='text-xs text-info'>{post.author.headline}</p>
							<p className='text-xs text-info'>
								{formatDistanceToNow(new Date(post.createdAt), { addSuffix: true })}
							</p>
						</div>
					</div>
					{isOwner && (
						<button onClick={handleDeletePost} className='text-red-500 hover:text-red-700'>
							{isDeletingPost ? <Loader size={18} className='animate-spin' /> : <Trash2 size={18} />}
						</button>
					)}
				</div>
				<p className='mb-4'>{post.content}</p>
				{post.image && <img src={post.image} alt='Post content' className='rounded-lg w-full mb-4' />}

				<div className='flex justify-between text-info'>
					<PostAction
						icon={<SquareChevronUp size={18} className={isLiked ? "text-blue-500  fill-blue-300" : ""} />}
						text={`Votos positivos (${post.likes.length})`}
						onClick={handleLikePost}
					/>
					<PostAction
						icon={<MessageCircle size={18} />}
						text={`Comentarios (${comments.length})`}
						onClick={() => setShowComments(!showComments)}
					/>
					{/*<PostAction icon={<Share2 size={18} />} text='compartir' /> */}
				</div>
			</div>

			{showComments && (
				<div className='px-4 pb-4'>
					<div className='mb-4 max-h-60 overflow-y-auto'>
						{comments.map((comment) => (
							<div key={comment._id} className='mb-2 bg-base-100 p-2 rounded flex items-start'>
								<img
									src={comment.user.profilePicture || "/avatar.png"}
									alt={comment.user.name}
									className='w-8 h-8 rounded-full mr-2 flex-shrink-0'
								/>
								<div className='flex-grow'>
									<div className='flex items-center mb-1'>
										<span className='font-semibold mr-2'>{comment.user.name}</span>
										<span className='text-xs text-info'>
											{formatDistanceToNow(new Date(comment.createdAt))}
										</span>
									</div>
									<p>{comment.content}</p>
								</div>
							</div>
						))}
					</div>

					<form onSubmit={handleAddComment} className='flex items-center'>
						<input
							type='text'
							value={newComment}
							onChange={(e) => setNewComment(e.target.value)}
							placeholder='Add a comment...'
							className='flex-grow p-2 rounded-l-full bg-base-100 focus:outline-none focus:ring-2 focus:ring-primary'
						/>

						<button
							type='submit'
							className='bg-primary text-white p-2 rounded-r-full hover:bg-primary-dark transition duration-300'
							disabled={isAddingComment}
						>
							{isAddingComment ? <Loader size={18} className='animate-spin' /> : <Send size={18} />}
						</button>
					</form>
				</div>
			)}
		</div>
	);
};
export default Post;

================
File: frontend/src/components/PostAction.jsx
================
export default function PostAction({ icon, text, onClick }) {
	return (
		<button className='flex items-center' onClick={onClick}>
			<span className='mr-1'>{icon}</span>
			<span className='hidden sm:inline'>{text}</span>
		</button>
	);
}

================
File: frontend/src/components/PostCreation.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Image, Loader } from "lucide-react";

const PostCreation = ({ user }) => {
	const [content, setContent] = useState("");
	const [image, setImage] = useState(null);
	const [imagePreview, setImagePreview] = useState(null);

	const queryClient = useQueryClient();

	const { mutate: createPostMutation, isPending } = useMutation({
		mutationFn: async (postData) => {
			const res = await axiosInstance.post("/posts/create", postData, {
				headers: { "Content-Type": "application/json" },
			});
			return res.data;
		},
		onSuccess: () => {
			resetForm();
			toast.success("Post creado");
			queryClient.invalidateQueries({ queryKey: ["posts"] });
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Failed to create post");
		},
	});

	const handlePostCreation = async () => {
		try {
			const postData = { content };
			if (image) postData.image = await readFileAsDataURL(image);

			createPostMutation(postData);
		} catch (error) {
			console.error("Error in handlePostCreation:", error);
		}
	};

	const resetForm = () => {
		setContent("");
		setImage(null);
		setImagePreview(null);
	};

	const handleImageChange = (e) => {
		const file = e.target.files[0];
		setImage(file);
		if (file) {
			readFileAsDataURL(file).then(setImagePreview);
		} else {
			setImagePreview(null);
		}
	};

	const readFileAsDataURL = (file) => {
		return new Promise((resolve, reject) => {
			const reader = new FileReader();
			reader.onloadend = () => resolve(reader.result);
			reader.onerror = reject;
			reader.readAsDataURL(file);
		});
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4 p-4'>
			<div className='flex space-x-3'>
				<img src={user.profilePicture || "/avatar.png"} alt={user.name} className='size-12 rounded-full' />
				<textarea
					placeholder="Escribe tu post aquí."
					className='w-full p-3 rounded-lg bg-base-100 hover:bg-base-200 focus:bg-base-200 focus:outline-none resize-none transition-colors duration-200 min-h-[100px]'
					value={content}
					onChange={(e) => setContent(e.target.value)}
				/>
			</div>

			{imagePreview && (
				<div className='mt-4'>
					<img src={imagePreview} alt='Selected' className='w-full h-auto rounded-lg' />
				</div>
			)}

			<div className='flex justify-between items-center mt-4'>
				<div className='flex space-x-4'>
					<label className='flex items-center text-info hover:text-info-dark transition-colors duration-200 cursor-pointer'>
						<Image size={20} className='mr-2' />
						<span>Aregar imagen</span>
						<input type='file' accept='image/*' className='hidden' onChange={handleImageChange} />
					</label>
				</div>

				<button
					className='bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200'
					onClick={handlePostCreation}
					disabled={isPending}
				>
					{isPending ? <Loader className='size-5 animate-spin' /> : "Publicar"}
				</button>
			</div>
		</div>
	);
};


export default PostCreation;

================
File: frontend/src/components/PostPefil.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Image, Loader } from "lucide-react";

const PostPerfil = ({ user }) => {
	const [content, setContent] = useState("");
	const [image, setImage] = useState(null);
	const [imagePreview, setImagePreview] = useState(null);

	const queryClient = useQueryClient();

	const { mutate: createPostMutation, isPending } = useMutation({
		mutationFn: async (postData) => {
			const res = await axiosInstance.post("/posts/create", postData, {
				headers: { "Content-Type": "application/json" },
			});
			return res.data;
		},
		onSuccess: () => {
			resetForm();
			toast.success("Post creado");
			queryClient.invalidateQueries({ queryKey: ["posts"] });
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Error al crear el post");
		},
	});

	const handlePostCreation = async () => {
		try {
			const postData = { content };
			if (image) postData.image = await readFileAsDataURL(image);

			createPostMutation(postData);
		} catch (error) {
			console.error("Error in handlePostCreation:", error);
		}
	};

	const resetForm = () => {
		setContent("");
		setImage(null);
		setImagePreview(null);
	};

	const handleImageChange = (e) => {
		const file = e.target.files[0];
		setImage(file);
		if (file) {
			readFileAsDataURL(file).then(setImagePreview);
		} else {
			setImagePreview(null);
		}
	};

	const readFileAsDataURL = (file) => {
		return new Promise((resolve, reject) => {
			const reader = new FileReader();
			reader.onloadend = () => resolve(reader.result);
			reader.onerror = reject;
			reader.readAsDataURL(file);
		});
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4 p-4'>
			<div className='flex space-x-3'>
				<img src={user.profilePicture || "/avatar.png"} alt={user.name} className='size-12 rounded-full' />
				<textarea
					placeholder="Escribe tu post aquí."
					className='w-full p-3 rounded-lg bg-base-100 hover:bg-base-200 focus:bg-base-200 focus:outline-none resize-none transition-colors duration-200 min-h-[100px]'
					value={content}
					onChange={(e) => setContent(e.target.value)}
				/>
			</div>

			{imagePreview && (
				<div className='mt-4'>
					<img src={imagePreview} alt='Selected' className='w-full h-auto rounded-lg' />
				</div>
			)}

			<div className='flex justify-between items-center mt-4'>
				<div className='flex space-x-4'>
					<label className='flex items-center text-info hover:text-info-dark transition-colors duration-200 cursor-pointer'>
						<Image size={20} className='mr-2' />
						<span>Aregar imagen</span>
						<input type='file' accept='image/*' className='hidden' onChange={handleImageChange} />
					</label>
				</div>

				<button
					className='bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200'
					onClick={handlePostCreation}
					disabled={isPending}
				>
					{isPending ? <Loader className='size-5 animate-spin' /> : "Publicar"}
				</button>
			</div>
		</div>
	);
};


export default PostPerfil;

================
File: frontend/src/components/PostPerfil.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link, useParams } from "react-router-dom";
import { Loader, MessageCircle, Send, Share2, ThumbsUp, Trash2, SquareChevronUp, } from "lucide-react";
import { formatDistanceToNow } from "date-fns";

import PostAction from "./PostAction";

const Post = ({ post }) => {
	const { postId } = useParams();

	const { data: authUser } = useQuery({ queryKey: ["authUser"] });
	const [showComments, setShowComments] = useState(false);
	const [newComment, setNewComment] = useState("");
	const [comments, setComments] = useState(post.comments || []);
	const isOwner = authUser._id === post.author._id;
	const isLiked = post.likes.includes(authUser._id);

	const queryClient = useQueryClient();

	const { mutate: deletePost, isPending: isDeletingPost } = useMutation({
		mutationFn: async () => {
			await axiosInstance.delete(`/posts/delete/${post._id}`);
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			toast.success("Post borrado");
		},
		onError: (error) => {
			toast.error(error.message);
		},
	});

	const handleDeletePost = () => {
		if (!window.confirm("¿Estas seguro de que quieres borrar este post?")) return;
		deletePost();
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4'>
			<div className='p-4'>
				<div className='flex items-center justify-between mb-4'>
					<div className='flex items-center'>
						<Link to={`/profile/${post?.author?.username}`}>
							<img
								src={post.author.profilePicture || "/avatar.png"}
								alt={post.author.name}
								className='size-10 rounded-full mr-3'
							/>
						</Link>

						<div>
							<Link to={`/profile/${post?.author?.username}`}>
								<h3 className='font-semibold'>{post.author.name}</h3>
							</Link>
							<p className='text-xs text-info'>{post.author.headline}</p>
							<p className='text-xs text-info'>
								{formatDistanceToNow(new Date(post.createdAt), { addSuffix: true })}
							</p>
						</div>
					</div>
					{isOwner && (
						<button onClick={handleDeletePost} className='text-red-500 hover:text-red-700'>
							{isDeletingPost ? <Loader size={18} className='animate-spin' /> : <Trash2 size={18} />}
						</button>
					)}
				</div>
				<p className='mb-4'>{post.content}</p>
				{post.image && <img src={post.image} alt='Post content' className='rounded-lg w-full mb-4' />}

				<div className='flex justify-between text-info'>
					<PostAction
						icon={<SquareChevronUp size={18} className={isLiked ? "text-blue-500  fill-blue-300" : ""} />}
						text={`Votos positivos (${post.likes.length})`}
						onClick={handleLikePost}
					/>
					<PostAction
						icon={<MessageCircle size={18} />}
						text={`Comentarios (${comments.length})`}
						onClick={() => setShowComments(!showComments)}
					/>
					{/*<PostAction icon={<Share2 size={18} />} text='compartir' /> */}
				</div>
			</div>

			
		</div>
	);
};
export default Post;

================
File: frontend/src/components/ProfileHeader.jsx
================
// frontend/src/components/ProfileHeader.jsx
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { useMemo, useState } from "react";
import { axiosInstance } from "../lib/axios";
import { toast } from "react-hot-toast";
import { Camera, Clock, MapPin, UserCheck, UserPlus, X, FileText } from "lucide-react";

const ProfileHeader = ({ userData, onSave, isOwnProfile }) => {
 const [isEditing, setIsEditing] = useState(false);
 const [editedData, setEditedData] = useState({});
 const queryClient = useQueryClient();

 const { data: authUser } = useQuery({ queryKey: ["authUser"] });

 const { data: connectionStatus, refetch: refetchConnectionStatus } = useQuery({
   queryKey: ["connectionStatus", userData._id],
   queryFn: () => axiosInstance.get(`/connections/status/${userData._id}`),
   enabled: !isOwnProfile,
 });

 const isConnected = userData.connections.some((connection) => connection === authUser._id);

 const { mutate: sendConnectionRequest } = useMutation({
   mutationFn: (userId) => axiosInstance.post(`/connections/request/${userId}`),
   onSuccess: () => {
     toast.success("Connection request sent");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const { mutate: acceptRequest } = useMutation({
   mutationFn: (requestId) => axiosInstance.put(`/connections/accept/${requestId}`),
   onSuccess: () => {
     toast.success("Connection request accepted");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const { mutate: rejectRequest } = useMutation({
   mutationFn: (requestId) => axiosInstance.put(`/connections/reject/${requestId}`),
   onSuccess: () => {
     toast.success("Connection request rejected");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const { mutate: removeConnection } = useMutation({
   mutationFn: (userId) => axiosInstance.delete(`/connections/${userId}`),
   onSuccess: () => {
     toast.success("Connection removed");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const getConnectionStatus = useMemo(() => {
   if (isConnected) return "connected";
   if (!isConnected) return "not_connected";
   return connectionStatus?.data?.status;
 }, [isConnected, connectionStatus]);

 const renderConnectionButton = () => {
   const baseClass = "text-white py-2 px-4 rounded-full transition duration-300 flex items-center justify-center";
   switch (getConnectionStatus) {
     case "connected":
       return (
         <div className='flex gap-2 justify-center'>
           <div className={`${baseClass} bg-green-500 hover:bg-green-600`}>
             <UserCheck size={20} className='mr-2' />
             Conectado
           </div>
           <button
             className={`${baseClass} bg-red-500 hover:bg-red-600 text-sm`}
             onClick={() => removeConnection(userData._id)}
           >
             <X size={20} className='mr-2' />
             Cancelar conexión
           </button>
         </div>
       );

     case "pending":
       return (
         <button className={`${baseClass} bg-yellow-500 hover:bg-yellow-600`}>
           <Clock size={20} className='mr-2' />
           Pendiente
         </button>
       );

     case "received":
       return (
         <div className='flex gap-2 justify-center'>
           <button
             onClick={() => acceptRequest(connectionStatus.data.requestId)}
             className={`${baseClass} bg-green-500 hover:bg-green-600`}
           >
             Aceptar
           </button>
           <button
             onClick={() => rejectRequest(connectionStatus.data.requestId)}
             className={`${baseClass} bg-red-500 hover:bg-red-600`}
           >
             Rechazar
           </button>
         </div>
       );
     default:
       return (
         <button
           onClick={() => sendConnectionRequest(userData._id)}
           className='bg-primary hover:bg-primary-dark text-white py-2 px-4 rounded-full transition duration-300 flex items-center justify-center'
         >
           <UserPlus size={20} className='mr-2' />
           Conectar
         </button>
       );
   }
 };

 const handleFileChange = (event) => {
   const file = event.target.files[0];
   if (file) {
     const reader = new FileReader();
     reader.onloadend = () => {
       const fieldName = event.target.name;
       
       if (fieldName === 'curriculumImg' && file.type !== 'application/pdf') {
         toast.error('Por favor sube un archivo PDF');
         return;
       }
       
       setEditedData(prev => ({ ...prev, [fieldName]: reader.result }));
     };
     reader.readAsDataURL(file);
   }
 };

 const handleSave = () => {
   console.log('Saving data:', editedData);
   onSave(editedData);
   setIsEditing(false);
 };

 // Get role badge styling
 const getRoleBadgeClasses = () => {
   switch(userData.role) {
     case 'empresario':
       return 'bg-green-100 text-green-800';
     case 'administrador':
       return 'bg-purple-100 text-purple-800';
     default:
       return 'bg-blue-100 text-blue-800';
   }
 };

 // Get role display name
 const getRoleDisplayName = () => {
   switch(userData.role) {
     case 'empresario':
       return 'Empresario';
     case 'administrador':
       return 'Administrador';
     default:
       return 'Egresado';
   }
 };

 return (
   <div className="bg-white shadow rounded-lg mb-6">
     <div
       className="relative h-48 rounded-t-lg bg-cover bg-center"
       style={{
         backgroundImage: `url('${editedData.bannerImg || userData.bannerImg || "/banner.png"}')`,
       }}
     >
       {isEditing && (
         <label className="absolute top-2 right-2 bg-white p-2 rounded-full shadow cursor-pointer">
           <Camera size={20} />
           <input
             type="file"
             className="hidden"
             name="bannerImg"
             onChange={handleFileChange}
             accept="image/*"
           />
         </label>
       )}
     </div>

     <div className="p-4">
       <div className="relative -mt-20 mb-4">
         <div className="relative">
           <img
             className="w-32 h-32 rounded-full mx-auto object-cover"
             src={editedData.profilePicture || userData.profilePicture || "/avatar.png"}
             alt={userData.name}
           />
           {isEditing && (
             <label className="absolute bottom-0 right-1/2 transform translate-x-16 bg-white p-2 rounded-full shadow cursor-pointer">
               <Camera size={20} />
               <input
                 type="file"
                 className="hidden"
                 name="profilePicture"
                 onChange={handleFileChange}
                 accept="image/*"
               />
             </label>
           )}
         </div>
       </div>

       <div className="text-center mb-4">
         {isEditing ? (
           <input
             type="text"
             value={editedData.name ?? userData.name}
             onChange={(e) => setEditedData({ ...editedData, name: e.target.value })}
             className="text-2xl font-bold mb-2 text-center w-full"
           />
         ) : (
           <h1 className="text-2xl font-bold mb-2">{userData.name}</h1>
         )}

         {/* Role Badge */}
         <div className="mt-1 mb-2">
           <span className={`inline-block px-3 py-1 text-xs rounded-full ${getRoleBadgeClasses()}`}>
             {getRoleDisplayName()}
           </span>
         </div>

         {isEditing ? (
           <input
             type="text"
             value={editedData.headline ?? userData.headline}
             onChange={(e) => setEditedData({ ...editedData, headline: e.target.value })}
             className="text-gray-600 text-center w-full"
           />
         ) : (
           <p className="text-gray-600">
             {userData.role === 'empresario' && userData.companyInfo?.companyName
               ? `${userData.companyInfo.companyName} · ${userData.headline}`
               : userData.headline}
           </p>
         )}

         <div className="flex justify-center items-center mt-2">
           <MapPin size={16} className="text-gray-500 mr-1" />
           {isEditing ? (
             <input
               type="text"
               value={editedData.location ?? userData.location}
               onChange={(e) => setEditedData({ ...editedData, location: e.target.value })}
               className="text-gray-600 text-center"
             />
           ) : (
             <span className="text-gray-600">{userData.location}</span>
           )}
         </div>
       </div>

       {isOwnProfile ? (
         isEditing ? (
           <button
             className="w-full bg-primary text-white py-2 px-4 rounded-full hover:bg-primary-dark transition duration-300"
             onClick={handleSave}
           >
             Guardar cambios
           </button>
         ) : (
           <button
             onClick={() => setIsEditing(true)}
             className="w-full bg-primary text-white py-2 px-4 rounded-full hover:bg-primary-dark transition duration-300"
           >
             Editar perfil
           </button>
         )
       ) : (
         <div className="flex justify-center">{renderConnectionButton()}</div>
       )}
     </div>

     <div className="p-4 border-t">
       <h2 className="text-xl font-semibold mb-4 text-center">Curriculum</h2>
       <div className="max-w-md mx-auto">
         <div className="relative w-full h-32 rounded-lg border-2 border-gray-200 flex items-center justify-center bg-gray-50">
           {(editedData.curriculumImg || userData.curriculumImg) ? (
             <div className="text-center">
               <FileText size={32} className="mx-auto mb-2 text-gray-600" />
               <a 
                 href={editedData.curriculumImg || userData.curriculumImg}
                 target="_blank" 
                 rel="noopener noreferrer"
                 className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full inline-flex items-center gap-2 transition-colors duration-200"
               >
                 <span>Ver Curriculum</span>
                 <FileText size={16} />
               </a>
             </div>
           ) : (
             <div className="text-center text-gray-500">
               <FileText size={32} className="mx-auto mb-2" />
               <p className="text-sm">{isEditing ? "Haz clic para subir PDF" : "No hay curriculum"}</p>
             </div>
           )}
           
           {isEditing && (
             <label className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 opacity-0 hover:opacity-100 transition-opacity duration-300 cursor-pointer rounded-lg">
               <div className="bg-white p-2 rounded-full shadow">
                 <FileText size={20} />
               </div>
               <input
                 type="file"
                 className="hidden"
                 name="curriculumImg"
                 onChange={handleFileChange}
                 accept="application/pdf"
               />
             </label>
           )}
         </div>
         {isEditing && (
           <p className="text-center text-xs text-gray-500 mt-1">
             Solo archivos PDF
           </p>
         )}
       </div>
     </div>
   </div>
 );
};

export default ProfileHeader;

================
File: frontend/src/components/ProjectCreation.jsx
================
// frontend/src/components/ProjectCreation.jsx
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Calendar, Image, Loader } from "lucide-react";

const ProjectCreation = ({ user, onComplete }) => {
    const [projectData, setProjectData] = useState({
        title: "",
        content: "",
        image: null,
        projectRequirements: "",
        projectGoals: "",
        expirationDays: "30" // Default to 30 days
    });
    const [imagePreview, setImagePreview] = useState(null);

    const queryClient = useQueryClient();

    const { mutate: createProjectMutation, isPending } = useMutation({
        mutationFn: async (data) => {
            const res = await axiosInstance.post("/projects/create", data, {
                headers: { "Content-Type": "application/json" },
            });
            return res.data;
        },
        onSuccess: () => {
            resetForm();
            toast.success("Proyecto creado exitosamente");
            queryClient.invalidateQueries({ queryKey: ["projects"] });
            if (onComplete) onComplete();
        },
        onError: (err) => {
            toast.error(err.response?.data?.message || "Error al crear el proyecto");
        },
    });

    const handleProjectCreation = async () => {
        try {
            if (!projectData.title || !projectData.content) {
                return toast.error("El título y la descripción son obligatorios");
            }

            const data = { ...projectData };
            
            if (projectData.image) {
                data.image = await readFileAsDataURL(projectData.image);
            }

            createProjectMutation(data);
        } catch (error) {
            console.error("Error in handleProjectCreation:", error);
            toast.error("Error al crear el proyecto");
        }
    };

    const resetForm = () => {
        setProjectData({
            title: "",
            content: "",
            image: null,
            projectRequirements: "",
            projectGoals: "",
            expirationDays: "30"
        });
        setImagePreview(null);
    };

    const handleImageChange = (e) => {
        const file = e.target.files[0];
        setProjectData({ ...projectData, image: file });
        
        if (file) {
            readFileAsDataURL(file).then(setImagePreview);
        } else {
            setImagePreview(null);
        }
    };

    const readFileAsDataURL = (file) => {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.onloadend = () => resolve(reader.result);
            reader.onerror = reject;
            reader.readAsDataURL(file);
        });
    };

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setProjectData({ ...projectData, [name]: value });
    };

    return (
        <div className="bg-white rounded-lg shadow p-6 border-2 border-primary">
            <h2 className="text-xl font-bold mb-4">Crear Nuevo Proyecto</h2>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Título del Proyecto*</label>
                <input
                    type="text"
                    name="title"
                    value={projectData.title}
                    onChange={handleInputChange}
                    placeholder="Escribe un título llamativo para tu proyecto"
                    className="w-full p-3 border rounded-lg"
                    required
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Descripción*</label>
                <textarea
                    name="content"
                    value={projectData.content}
                    onChange={handleInputChange}
                    placeholder="Describe tu proyecto, sus objetivos y lo que buscas"
                    className="w-full p-3 border rounded-lg min-h-[120px]"
                    required
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Requisitos</label>
                <textarea
                    name="projectRequirements"
                    value={projectData.projectRequirements}
                    onChange={handleInputChange}
                    placeholder="Detalla los requisitos o habilidades necesarias para participar"
                    className="w-full p-3 border rounded-lg min-h-[80px]"
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Metas</label>
                <textarea
                    name="projectGoals"
                    value={projectData.projectGoals}
                    onChange={handleInputChange}
                    placeholder="¿Cuáles son las metas a corto y largo plazo del proyecto?"
                    className="w-full p-3 border rounded-lg min-h-[80px]"
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Tiempo de Expiración</label>
                <div className="flex items-center">
                    <Calendar size={20} className="mr-2 text-gray-500" />
                    <select
                        name="expirationDays"
                        value={projectData.expirationDays}
                        onChange={handleInputChange}
                        className="p-2 border rounded-lg"
                    >
                        <option value="7">7 días</option>
                        <option value="14">14 días</option>
                        <option value="30">30 días</option>
                        <option value="60">60 días</option>
                        <option value="90">90 días</option>
                    </select>
                </div>
            </div>

            {imagePreview && (
                <div className="mt-4 mb-4">
                    <img src={imagePreview} alt="Vista previa" className="w-full h-auto rounded-lg" />
                </div>
            )}

            <div className="flex justify-between items-center mt-6">
                <div className="flex items-center">
                    <label className="flex items-center text-primary hover:text-primary-dark transition-colors duration-200 cursor-pointer">
                        <Image size={20} className="mr-2" />
                        <span>Añadir imagen</span>
                        <input type="file" accept="image/*" className="hidden" onChange={handleImageChange} />
                    </label>
                </div>

                <div className="flex space-x-3">
                    <button
                        onClick={resetForm}
                        className="px-4 py-2 border border-gray-300 rounded-lg"
                    >
                        Cancelar
                    </button>
                    <button
                        className="bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200 flex items-center"
                        onClick={handleProjectCreation}
                        disabled={isPending}
                    >
                        {isPending ? (
                            <>
                                <Loader className="size-5 animate-spin mr-2" />
                                Creando...
                            </>
                        ) : (
                            "Publicar Proyecto"
                        )}
                    </button>
                </div>
            </div>
        </div>
    );
};

export default ProjectCreation;

================
File: frontend/src/components/ProjectPost.jsx
================
// backend/models/projectPost.model.js
import mongoose from "mongoose";

const projectPostSchema = new mongoose.Schema(
    {
        author: { 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User", 
            required: true 
        },
        title: { 
            type: String, 
            required: true 
        },
        content: { 
            type: String, 
            required: true 
        },
        image: { 
            type: String 
        },
        likes: [{ 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User" 
        }],
        comments: [
            {
                content: { type: String },
                user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
                createdAt: { type: Date, default: Date.now },
            },
        ],
        interestedUsers: [
            {
                user: { 
                    type: mongoose.Schema.Types.ObjectId, 
                    ref: "User" 
                },
                createdAt: { 
                    type: Date, 
                    default: Date.now 
                },
            },
        ],
        expirationDate: {
            type: Date,
            default: function() {
                // Default to 30 days from creation
                const date = new Date();
                date.setDate(date.getDate() + 30);
                return date;
            },
            required: true
        },
        status: {
            type: String,
            enum: ["active", "completed", "expired"],
            default: "active"
        },
        projectRequirements: { 
            type: String 
        },
        projectGoals: { 
            type: String 
        }
    },
    { timestamps: true }
);

// Index to help with finding expired projects
projectPostSchema.index({ expirationDate: 1 });
projectPostSchema.index({ status: 1 });
projectPostSchema.index({ author: 1 });

// Virtual field to check if project is expired
projectPostSchema.virtual('isExpired').get(function() {
    return new Date() > this.expirationDate;
});

// Middleware to automatically mark projects as expired
projectPostSchema.pre(['find', 'findOne'], async function(next) {
    try {
        // Only update if we're not specifically querying expired projects
        if (!this._conditions.status || this._conditions.status !== 'expired') {
            await mongoose.model('ProjectPost').updateMany(
                { 
                    status: 'active',
                    expirationDate: { $lt: new Date() }
                },
                { 
                    $set: { status: 'expired' }
                }
            );
        }
        next();
    } catch (error) {
        next(error);
    }
});

const ProjectPost = mongoose.model("ProjectPost", projectPostSchema);

export default ProjectPost;

================
File: frontend/src/components/QuestionnaireModal.jsx
================
// frontend/src/components/QuestionnaireModal.jsx
import React, { useState } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { axiosInstance } from '../lib/axios';
import toast from 'react-hot-toast';
import { Briefcase, CheckCircle, ArrowRight, ArrowLeft, Globe, Calendar } from 'lucide-react';

const QuestionnaireModal = ({ isOpen, onClose, user }) => {
  const queryClient = useQueryClient();
  const [step, setStep] = useState(1);
  const [companyInfo, setCompanyInfo] = useState(user?.companyInfo || {});
  const [hasWebsite, setHasWebsite] = useState(!!user?.companyInfo?.website);
  const [isSubmitting, setIsSubmitting] = useState(false);

  // Check if required fields for the current step are filled
  const canProceed = () => {
    if (step === 1) {
      return !!companyInfo.companyName;
    }
    return true;
  };

  // Mutation to save company info and mark first login as completed
  const { mutate: completeSetup } = useMutation({
    mutationFn: async () => {
      // If website toggle is off, remove website field
      const dataToSubmit = { ...companyInfo };
      if (!hasWebsite) {
        dataToSubmit.website = "";
      }
      
      return axiosInstance.put('/users/complete-first-login', {
        companyInfo: dataToSubmit
      });
    },
    onSuccess: () => {
      toast.success('¡Información de la empresa guardada exitosamente!');
      
      // Update user data in the cache
      queryClient.invalidateQueries(['authUser']);
      
      // Close modal and reset state
      setIsSubmitting(false);
      if (onClose) onClose();
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al guardar la información');
      setIsSubmitting(false);
    }
  });

  const handleSubmit = () => {
    setIsSubmitting(true);
    completeSetup();
  };

  const handleSkip = () => {
    if (window.confirm('¿Estás seguro de que deseas omitir el cuestionario? La información de tu empresa no estará completa.')) {
      setIsSubmitting(true);
      completeSetup();
    }
  };

  // Don't render anything if the modal isn't open
  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="bg-primary text-white px-6 py-4 flex justify-between items-center rounded-t-lg">
          <div className="flex items-center">
            <Briefcase className="mr-2" />
            <h2 className="text-xl font-bold">Configuración de Información de Empresa</h2>
          </div>
        </div>
        
        {/* Body */}
        <div className="p-6">
          {/* Progress indicator */}
          <div className="mb-6 flex justify-between items-center">
            <div className="flex items-center">
              <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                step >= 1 ? 'bg-primary text-white' : 'bg-gray-200'
              }`}>
                1
              </div>
              <div className={`h-1 w-12 ${step >= 2 ? 'bg-primary' : 'bg-gray-200'}`}></div>
              <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                step >= 2 ? 'bg-primary text-white' : 'bg-gray-200'
              }`}>
                2
              </div>
            </div>
            <div>
              Paso {step} de 2
            </div>
          </div>
          
          {/* Step content */}
          {step === 1 && (
            <div>
              <h3 className="text-lg font-semibold mb-4">Información Básica de la Empresa</h3>
              <p className="text-gray-600 mb-4">
                Como usuario empresario, necesitamos algunos detalles sobre su negocio para mostrar en su perfil.
                Esta información ayudará a los egresados a conocer mejor su empresa.
              </p>
              
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700">Nombre de la Empresa *</label>
                  <input
                    type="text"
                    value={companyInfo.companyName || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, companyName: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                    required
                  />
                  <p className="text-xs text-gray-500 mt-1">Campo obligatorio</p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Industria</label>
                  <input
                    type="text"
                    value={companyInfo.industry || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, industry: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Año de Fundación</label>
                  <div className="relative">
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <Calendar className="h-5 w-5 text-gray-400" />
                    </div>
                    <input
                      type="number"
                      min="1900"
                      max={new Date().getFullYear()}
                      value={companyInfo.foundedYear || ''}
                      onChange={(e) => setCompanyInfo({...companyInfo, foundedYear: e.target.value})}
                      className="mt-1 p-2 pl-10 w-full border rounded-md"
                      placeholder={new Date().getFullYear()}
                    />
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Ubicación</label>
                  <input
                    type="text"
                    value={companyInfo.location || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, location: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                  />
                </div>
              </div>
            </div>
          )}
          
          {step === 2 && (
            <div>
              <h3 className="text-lg font-semibold mb-4">Detalles Adicionales</h3>
              <p className="text-gray-600 mb-4">
                Proporcione información adicional que ayude a presentar mejor su empresa a los egresados.
              </p>
              
              <div className="space-y-4">
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <label className="block text-sm font-medium text-gray-700">Sitio Web</label>
                    <div className="flex items-center">
                      <span className="text-sm text-gray-500 mr-2">
                        {hasWebsite ? "Activado" : "Desactivado"}
                      </span>
                      <label className="relative inline-flex items-center cursor-pointer">
                        <input 
                          type="checkbox" 
                          checked={hasWebsite}
                          onChange={(e) => setHasWebsite(e.target.checked)}
                          className="sr-only peer" 
                        />
                        <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                      </label>
                    </div>
                  </div>
                  {hasWebsite && (
                    <div className="relative">
                      <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <Globe className="h-5 w-5 text-gray-400" />
                      </div>
                      <input
                        type="url"
                        value={companyInfo.website || ''}
                        onChange={(e) => setCompanyInfo({...companyInfo, website: e.target.value})}
                        className="mt-1 p-2 pl-10 w-full border rounded-md"
                        placeholder="https://"
                      />
                    </div>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Cantidad de Empleados</label>
                  <select
                    value={companyInfo.employees || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, employees: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                  >
                    <option value="">Seleccionar</option>
                    <option value="1-10">1-10 empleados</option>
                    <option value="11-50">11-50 empleados</option>
                    <option value="51-200">51-200 empleados</option>
                    <option value="201-500">201-500 empleados</option>
                    <option value="501+">501+ empleados</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Descripción</label>
                  <textarea
                    value={companyInfo.description || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, description: e.target.value})}
                    rows="4"
                    className="mt-1 p-2 w-full border rounded-md"
                    placeholder="Describa brevemente su empresa, actividades y misión..."
                  ></textarea>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Email de Contacto</label>
                  <input
                    type="email"
                    value={companyInfo.contactEmail || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactEmail: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                    placeholder="contacto@empresa.com"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Teléfono de Contacto</label>
                  <input
                    type="tel"
                    value={companyInfo.contactPhone || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactPhone: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                    placeholder="+52 (123) 456-7890"
                  />
                </div>
              </div>
            </div>
          )}
        </div>
        
        {/* Footer */}
        <div className="px-6 py-4 bg-gray-50 flex justify-between items-center rounded-b-lg">
          {step === 1 ? (
            <button
              onClick={handleSkip}
              className="text-gray-500 hover:text-gray-700"
              disabled={isSubmitting}
            >
              Omitir por ahora
            </button>
          ) : (
            <button
              onClick={() => setStep(step - 1)}
              className="flex items-center text-gray-700 hover:text-gray-900"
              disabled={isSubmitting}
            >
              <ArrowLeft size={16} className="mr-1" />
              Anterior
            </button>
          )}
          
          {step < 2 ? (
            <button
              onClick={() => setStep(step + 1)}
              disabled={!canProceed() || isSubmitting}
              className={`flex items-center bg-primary text-white px-4 py-2 rounded-md ${
                !canProceed() ? 'opacity-50 cursor-not-allowed' : 'hover:bg-primary-dark'
              }`}
            >
              Siguiente
              <ArrowRight size={16} className="ml-1" />
            </button>
          ) : (
            <button
              onClick={handleSubmit}
              disabled={isSubmitting}
              className="flex items-center bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark"
            >
              {isSubmitting ? (
                <>
                  <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Guardando...
                </>
              ) : (
                <>
                  <CheckCircle size={16} className="mr-1" />
                  Completar Configuración
                </>
              )}
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default QuestionnaireModal;

================
File: frontend/src/components/RecommendedUser.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link } from "react-router-dom";
import { Check, Clock, UserCheck, UserPlus, X } from "lucide-react";


import { useState } from 'react';
import { Search } from "lucide-react";

const RecommendedUser = ({ user }) => {
	const queryClient = useQueryClient();

	const { data: connectionStatus, isLoading } = useQuery({
		queryKey: ["connectionStatus", user._id],
		queryFn: () => axiosInstance.get(`/connections/status/${user._id}`),
	});

	const { mutate: sendConnectionRequest } = useMutation({
		mutationFn: (userId) => axiosInstance.post(`/connections/request/${userId}`),
		onSuccess: () => {
			toast.success("Solicitud enviada");
			queryClient.invalidateQueries({ queryKey: ["connectionStatus", user._id] });
		},
		onError: (error) => {
			toast.error(error.response?.data?.error || "Ocurrio un problema");
		},
	});

	const { mutate: acceptRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/accept/${requestId}`),
		onSuccess: () => {
			toast.success("Conexión aceptada");
			queryClient.invalidateQueries({ queryKey: ["connectionStatus", user._id] });
		},
		onError: (error) => {
			toast.error(error.response?.data?.error || "Ocurrio un problema");
		},
	});

	const { mutate: rejectRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/reject/${requestId}`),
		onSuccess: () => {
			toast.success("Conexión rechazada");
			queryClient.invalidateQueries({ queryKey: ["connectionStatus", user._id] });
		},
		onError: (error) => {
			toast.error(error.response?.data?.error || "ocurrio un problema");
		},
	});

	const renderButton = () => {
		if (isLoading) {
			return (
				<button className='px-3 py-1 rounded-full text-sm bg-gray-200 text-gray-500' disabled>
					Loading...
				</button>
			);
		}

		switch (connectionStatus?.data?.status) {
			case "pending":
				return (
					<button
						className='px-3 py-1 rounded-full text-xs bg-yellow-500 text-white flex items-center'
						disabled
					>
						<Clock size={14} className='mr-1' />
						Pendiente
					</button>
				);
			case "received":
				return (
					<div className='flex gap-2 justify-center'>
						<button
							onClick={() => acceptRequest(connectionStatus.data.requestId)}
							className={`rounded-full p-1 flex items-center justify-center bg-green-500 hover:bg-green-600 text-white`}
						>
							<Check size={16} />
						</button>
						<button
							onClick={() => rejectRequest(connectionStatus.data.requestId)}
							className={`rounded-full p-1 flex items-center justify-center bg-red-500 hover:bg-red-600 text-white`}
						>
							<X size={16} />
						</button>
					</div>
				);
			case "connected":
				return (
					<button
						className='px-3 py-1 rounded-full text-sm bg-green-500 text-white flex items-center'
						disabled
					>
						<UserCheck size={15} className='mr-1' />
						conectado
					</button>
				);
			default:
				return (
					<button
						className='px-1 py-1 rounded-full text-sm border border-primary text-xs hover:bg-primary hover:text-white transition-colors duration-200 flex items-center'
						onClick={handleConnect}
					>
						<UserPlus size={14} className='mr-1' />
						Hacer conexión
					</button>
				);
		}
	};

	const handleConnect = () => {
		if (connectionStatus?.data?.status === "not_connected") {
			sendConnectionRequest(user._id);
		}
	};

	return (
		<div className='flex items-center justify-between mb-4'>
			<Link to={`/profile/${user.username}`} className='flex items-center flex-grow'>
				<img
					src={user.profilePicture || "/avatar.png"}
					alt={user.name}
					className='w-12 h-12 rounded-full mr-3'
				/>
				<div>
					<h3 className='font-semibold text-sm'>{user.name}</h3>
					<p className='text-xs text-info'>{user.headline}</p>
				</div>
			</Link>
			{renderButton()}
		</div>
	);
};



export default RecommendedUser;

================
File: frontend/src/components/Sidebar.jsx
================
import { Link } from "react-router-dom";
import { Home, UserPlus, Bell } from "lucide-react";

export default function Sidebar({ user }) {
	return (
		<div className='bg-secondary rounded-lg shadow'>
			<div className='p-4 text-center'>
				<div
					className='h-16 rounded-t-lg bg-cover bg-center'
					style={{
						backgroundImage: `url("${user.bannerImg || "/banner.png"}")`,
					}}
				/>
				<Link to={`/profile/${user.username}`}>
					<img
						src={user.profilePicture || "/avatar.png"}
						alt={user.name}
						className='w-20 h-20 rounded-full mx-auto mt-[-40px]'
					/>
					<h2 className='text-xl font-semibold mt-2'>{user.name}</h2>
				</Link>
				<p className='text-info'>{user.headline}</p>
				<p className='text-info text-xs'>{user.connections.length} contactos</p>
			</div>
			<div className='border-t border-base-100 p-4'>
				<nav>
					<ul className='space-y-2'>
						<li>
							<Link
								to='/'
								className='flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors'
							>
								<Home className='mr-2' size={20} /> Inicio
							</Link>
						</li>
						<li>
							<Link
								to='/network'
								className='flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors'
							>
								<UserPlus className='mr-2' size={20} /> Mis contactos
							</Link>
						</li>
						<li>
							<Link
								to='/notifications'
								className='flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors'
							>
								<Bell className='mr-2' size={20} /> Notificaciones
							</Link>
						</li>
					</ul>
				</nav>
			</div>
			<div className='border-t border-base-100 p-4'>
				<Link to={`/profile/${user.username}`} className='text-sm font-semibold'>
					Mi perfil
				</Link>
			</div>
		</div>
	);
}

================
File: frontend/src/components/SkillsSection.jsx
================
import { X } from "lucide-react";
import { useState } from "react";

const SkillsSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [skills, setSkills] = useState(userData.skills || []);
	const [newSkill, setNewSkill] = useState("");

	const handleAddSkill = () => {
		if (newSkill && !skills.includes(newSkill)) {
			setSkills([...skills, newSkill]);
			setNewSkill("");
		}
	};

	const handleDeleteSkill = (skill) => {
		setSkills(skills.filter((s) => s !== skill));
	};

	const handleSave = () => {
		onSave({ skills });
		setIsEditing(false);
	};

	return (
		<div className='bg-white shadow rounded-lg p-6'>
			<h2 className='text-xl font-semibold mb-4'>Habilidades</h2>
			<div className='flex flex-wrap'>
				{skills.map((skill, index) => (
					<span
						key={index}
						className='bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm mr-2 mb-2 flex items-center'
					>
						{skill}
						{isEditing && (
							<button onClick={() => handleDeleteSkill(skill)} className='ml-2 text-red-500'>
								<X size={14} />
							</button>
						)}
					</span>
				))}
			</div>

			{isEditing && (
				<div className='mt-4 flex'>
					<input
						type='text'
						placeholder='Nueva habilidad'
						value={newSkill}
						onChange={(e) => setNewSkill(e.target.value)}
						className='flex-grow p-2 border rounded-l'
					/>
					<button
						onClick={handleAddSkill}
						className='bg-primary text-white py-2 px-4 rounded-r hover:bg-primary-dark transition duration-300'
					>
						Añadir habilidad
					</button>
				</div>
			)}

			{isOwnProfile && (
				<>
					{isEditing ? (
						<button
							onClick={handleSave}
							className='mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
						>
							Guardar cambios
						</button>
					) : (
						<button
							onClick={() => setIsEditing(true)}
							className='mt-4 text-primary hover:text-primary-dark transition duration-300'
						>
							Editar habilidades
						</button>
					)}
				</>
			)}
		</div>
	);
};
export default SkillsSection;

================
File: frontend/src/components/UserCard.jsx
================
import { Link } from "react-router-dom";

function UserCard({ user, isConnection }) {
	return (
		<div className='bg-white rounded-lg shadow p-4 flex flex-col items-center transition-all hover:shadow-md'>
			<Link to={`/profile/${user.username}`} className='flex flex-col items-center'>
				<img
					src={user.profilePicture || "/avatar.png"}
					alt={user.name}
					className='w-24 h-24 rounded-full object-cover mb-4'
				/>
				<h3 className='font-semibold text-lg text-center'>{user.name}</h3>
			</Link>
			<p className='text-gray-600 text-center'>{user.headline}</p>
			<p className='text-sm text-gray-500 mt-2'>{user.connections?.length} conexiones</p>
			<button className='mt-4 bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors w-full'>
				{isConnection ? "Conectados" : "Connect"}
			</button>
		</div>
	);
}

export default UserCard;

================
File: frontend/src/index.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

================
File: frontend/src/lib/axios.js
================
import axios from "axios";

export const axiosInstance = axios.create({
	baseURL: import.meta.env.MODE === "development" ? "http://localhost:5000/api/v1" : "/api/v1",
	//en /api/v1 vamos a poner el link donde va a estar nuestro servidor, en este caso nos lo tienen que dar en el tec 
	withCredentials: true,
});

================
File: frontend/src/main.jsx
================
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import App from "./App.jsx";
import "./index.css";
import { BrowserRouter } from "react-router-dom";

import { QueryClient, QueryClientProvider } from "@tanstack/react-query";

const queryClient = new QueryClient();

createRoot(document.getElementById("root")).render(
	<StrictMode>
		<BrowserRouter>
			<QueryClientProvider client={queryClient}>
				<App />
			</QueryClientProvider>
		</BrowserRouter>
	</StrictMode>
);

================
File: frontend/src/pages/AdminDashboardPage.jsx
================
import { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { axiosInstance } from '../lib/axios';
import toast from 'react-hot-toast';
import { Loader, Trash2, UserPlus, Edit, Search, AlertCircle, Key as KeyIcon } from 'lucide-react';

const AdminDashboardPage = () => {
  const [isAddingUser, setIsAddingUser] = useState(false);
  const [newUser, setNewUser] = useState({
    name: '',
    username: '',
    email: '',
    password: '',
    studentId: '', // Added the studentId field
    role: 'egresado',
  });
  const [search, setSearch] = useState('');
  const [activeTab, setActiveTab] = useState('users'); // 'users' or 'banned'
  
  const queryClient = useQueryClient();
  
  const { data: users, isLoading } = useQuery({
    queryKey: ['admin-users'],
    queryFn: async () => {
      const res = await axiosInstance.get('/admin/users');
      return res.data;
    },
  });
  
  const { data: bannedUsers, isLoading: isLoadingBanned } = useQuery({
    queryKey: ['admin-banned-users'],
    queryFn: async () => {
      const res = await axiosInstance.get('/admin/banned-users');
      return res.data;
    },
    enabled: activeTab === 'banned', // Only fetch when the tab is active
  });
  
  const { mutate: createUser, isPending: isCreatingUser } = useMutation({
    mutationFn: async (userData) => {
      return axiosInstance.post('/admin/users', userData);
    },
    onSuccess: () => {
      toast.success('Usuario creado exitosamente');
      setIsAddingUser(false);
      setNewUser({
        name: '',
        username: '',
        email: '',
        password: '',
        studentId: '', // Reset studentId field
        role: 'egresado',
      });
      queryClient.invalidateQueries(['admin-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al crear usuario');
    },
  });
  
  const { mutate: deleteUser } = useMutation({
    mutationFn: async (userId) => {
      return axiosInstance.delete(`/admin/users/${userId}`);
    },
    onSuccess: () => {
      toast.success('Usuario eliminado exitosamente');
      queryClient.invalidateQueries(['admin-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al eliminar usuario');
    },
  });
  
  const { mutate: updateUserRole } = useMutation({
    mutationFn: async ({ userId, role }) => {
      return axiosInstance.put(`/admin/users/${userId}/role`, { role });
    },
    onSuccess: () => {
      toast.success('Rol actualizado exitosamente');
      queryClient.invalidateQueries(['admin-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al actualizar rol');
    },
  });
  
  const { mutate: banUser } = useMutation({
    mutationFn: async ({ userId, reason }) => {
      return axiosInstance.post(`/admin/users/${userId}/ban`, { reason });
    },
    onSuccess: () => {
      toast.success('Usuario baneado exitosamente');
      queryClient.invalidateQueries(['admin-users']);
      queryClient.invalidateQueries(['admin-banned-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al banear usuario');
    },
  });
  
  const { mutate: unbanUser } = useMutation({
    mutationFn: async (studentId) => {
      return axiosInstance.delete(`/admin/banned-users/${studentId}`);
    },
    onSuccess: () => {
      toast.success('Usuario desbaneado exitosamente');
      queryClient.invalidateQueries(['admin-banned-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al desbanear usuario');
    },
  });
  
  const { mutate: resetPassword } = useMutation({
    mutationFn: async ({ userId, newPassword }) => {
      return axiosInstance.post(`/admin/users/${userId}/reset-password`, { newPassword });
    },
    onSuccess: () => {
      toast.success('Contraseña restablecida exitosamente');
      queryClient.invalidateQueries(['admin-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al restablecer la contraseña');
    },
  });
  
  const handleCreateUser = (e) => {
    e.preventDefault();
    createUser(newUser);
  };
  
  const handleDeleteUser = (userId) => {
    if (window.confirm('¿Estás seguro de eliminar este usuario?')) {
      deleteUser(userId);
    }
  };
  
  const handleRoleChange = (userId, role) => {
    updateUserRole({ userId, role });
  };
  
  const handleBanUser = (userId, name) => {
    const reason = prompt(`Ingrese la razón para banear a ${name}:`);
    
    if (reason !== null) { // If user didn't cancel the prompt
      if (window.confirm(`¿Estás seguro de banear a ${name}? Esta acción no se puede deshacer y el usuario no podrá crear una nueva cuenta con el mismo ID.`)) {
        banUser({ userId, reason });
      }
    }
  };
  
  // Replace the existing handleResetPassword function with this version:

const handleResetPassword = (userId, name) => {
  // Ask admin to enter a new password
  const newPassword = prompt(`Ingrese la nueva contraseña para ${name}:\n\n(Debe tener al menos 6 caracteres)`);
  
  // Validate the password
  if (newPassword) {
    if (newPassword.length < 6) {
      toast.error('La contraseña debe tener al menos 6 caracteres');
      return;
    }
    
    if (window.confirm(`¿Estás seguro de restablecer la contraseña de ${name} a "${newPassword}"?`)) {
      resetPassword({ userId, newPassword });
      
      // Optionally show a confirmation alert with the password in case admin needs to note it
      toast.success(`Contraseña para ${name} actualizada exitosamente`);
    }
  }
};
  
  // Handle studentId change with automatic email generation for egresados
  const handleStudentIdChange = (e) => {
    const studentId = e.target.value;
    setNewUser({
      ...newUser, 
      studentId: studentId,
      // Auto-generate institutional email if it's a valid 8-digit ID and role is egresado
      email: newUser.role === 'egresado' && /^\d{8}$/.test(studentId) 
        ? `L${studentId}@tuxtla.tecnm.mx`
        : newUser.email
    });
  };
  
  // Handle role change and manage studentId/email accordingly
  const handleRoleInputChange = (e) => {
    const role = e.target.value;
    setNewUser({
      ...newUser,
      role: role,
      // If changing to egresado and we have a valid studentId, update the email
      email: role === 'egresado' && /^\d{8}$/.test(newUser.studentId)
        ? `L${newUser.studentId}@tuxtla.tecnm.mx`
        : newUser.email
    });
  };
  
  // Fixed filter function with proper null checks
  const filteredUsers = users?.filter(user => 
    (user && user.name && user.name.toLowerCase().includes(search.toLowerCase())) ||
    (user && user.email && user.email.toLowerCase().includes(search.toLowerCase())) ||
    (user && user.username && user.username.toLowerCase().includes(search.toLowerCase()))
  );
  
  const getRoleBadge = (role) => {
    switch(role) {
      case 'empresario':
        return (
          <span className="px-2 py-1 text-xs rounded-full bg-green-100 text-green-800">
            Empresario
          </span>
        );
      case 'administrador':
        return (
          <span className="px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800">
            Administrador
          </span>
        );
      default:
        return (
          <span className="px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800">
            Egresado
          </span>
        );
    }
  };
  
  return (
    <div className="bg-white rounded-lg shadow p-6">
      <h1 className="text-2xl font-bold mb-6">Panel de Administración</h1>
      
      <div className="mb-6">
        <div className="flex border-b">
          <button
            className={`py-2 px-4 ${activeTab === 'users' 
              ? 'border-b-2 border-primary font-semibold' 
              : 'text-gray-500'}`}
            onClick={() => setActiveTab('users')}
          >
            Usuarios
          </button>
          <button
            className={`py-2 px-4 ${activeTab === 'banned' 
              ? 'border-b-2 border-primary font-semibold' 
              : 'text-gray-500'}`}
            onClick={() => setActiveTab('banned')}
          >
            Usuarios Baneados
          </button>
        </div>
      </div>
      
      {activeTab === 'users' && (
        <>
          <div className="mb-6 flex justify-between items-center">
            <div className="relative w-64">
              <input
                type="text"
                placeholder="Buscar usuarios..."
                value={search}
                onChange={(e) => setSearch(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border rounded-lg"
              />
              <Search className="absolute left-3 top-2.5 text-gray-400" size={18} />
            </div>
            
            <button 
              onClick={() => setIsAddingUser(true)}
              className="bg-primary text-white px-4 py-2 rounded-lg flex items-center"
            >
              <UserPlus size={18} className="mr-2" />
              Crear Usuario
            </button>
          </div>
          
          {isLoading ? (
            <div className="flex justify-center py-8">
              <Loader className="animate-spin" size={32} />
            </div>
          ) : (
            <div className="overflow-x-auto">
              <table className="w-full border-collapse">
                <thead>
                  <tr className="bg-gray-100">
                    <th className="border p-2 text-left">Nombre</th>
                    <th className="border p-2 text-left">Usuario</th>
                    <th className="border p-2 text-left">Correo</th>
                    <th className="border p-2 text-left">Rol</th>
                    <th className="border p-2 text-center">Acciones</th>
                  </tr>
                </thead>
                <tbody>
                  {filteredUsers?.map(user => (
                    <tr key={user._id} className="hover:bg-gray-50">
                      <td className="border p-2">
                        <div className="flex items-center">
                          <span>{user.name}</span>
                        </div>
                      </td>
                      <td className="border p-2">{user.username}</td>
                      <td className="border p-2">{user.email}</td>
                      <td className="border p-2">
                        <div className="flex items-center space-x-2">
                          {getRoleBadge(user.role)}
                          <select
                            value={user.role}
                            onChange={(e) => handleRoleChange(user._id, e.target.value)}
                            className="ml-2 p-1 border rounded"
                          >
                            <option value="egresado">Egresado</option>
                            <option value="empresario">Empresario</option>
                            <option value="administrador">Administrador</option>
                          </select>
                        </div>
                      </td>
                      <td className="border p-2 text-center">
                        <div className="flex justify-center space-x-2">
                          <button 
                            onClick={() => handleDeleteUser(user._id)}
                            className="text-red-500 hover:bg-red-100 p-1 rounded"
                            title="Eliminar Usuario"
                          >
                            <Trash2 size={18} />
                          </button>
                          
                          {/* Only show ban button for egresados */}
                          {user.role === 'egresado' && (
                            <button 
                              onClick={() => handleBanUser(user._id, user.name)}
                              className="text-orange-500 hover:bg-orange-100 p-1 rounded"
                              title="Banear Usuario"
                            >
                              <AlertCircle size={18} />
                            </button>
                          )}
                          
                          {/* Reset Password button */}
                          <button 
                            onClick={() => handleResetPassword(user._id, user.name)}
                            className="text-blue-500 hover:bg-blue-100 p-1 rounded"
                            title="Restablecer Contraseña"
                          >
                            <KeyIcon size={18} />
                          </button>
                        </div>
                      </td>
                    </tr>
                  ))}
                  
                  {filteredUsers?.length === 0 && (
                    <tr>
                      <td colSpan="5" className="text-center py-4">
                        No se encontraron usuarios
                      </td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
          )}
        </>
      )}
      
      {activeTab === 'banned' && (
        <div className="overflow-x-auto">
          {isLoadingBanned ? (
            <div className="flex justify-center py-8">
              <Loader className="animate-spin" size={32} />
            </div>
          ) : (
            <table className="w-full border-collapse">
              <thead>
                <tr className="bg-gray-100">
                  <th className="border p-2 text-left">ID Estudiante</th>
                  <th className="border p-2 text-left">Correo</th>
                  <th className="border p-2 text-left">Razón</th>
                  <th className="border p-2 text-left">Baneado Por</th>
                  <th className="border p-2 text-left">Fecha</th>
                  <th className="border p-2 text-center">Acciones</th>
                </tr>
              </thead>
              <tbody>
                {bannedUsers?.map(banned => (
                  <tr key={banned._id} className="hover:bg-gray-50">
                    <td className="border p-2">{banned.studentId}</td>
                    <td className="border p-2">{banned.email}</td>
                    <td className="border p-2">{banned.reason}</td>
                    <td className="border p-2">{banned.bannedBy?.name || 'N/A'}</td>
                    <td className="border p-2">
                      {new Date(banned.bannedAt).toLocaleString()}
                    </td>
                    <td className="border p-2 text-center">
                      <button 
                        onClick={() => {
                          if (window.confirm('¿Estás seguro de desbanear a este usuario?')) {
                            unbanUser(banned.studentId);
                          }
                        }}
                        className="text-blue-500 hover:bg-blue-100 p-1 rounded"
                      >
                        Desbanear
                      </button>
                    </td>
                  </tr>
                ))}
                
                {(!bannedUsers || bannedUsers.length === 0) && (
                  <tr>
                    <td colSpan="6" className="text-center py-4">
                      No hay usuarios baneados
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          )}
        </div>
      )}
      
      {isAddingUser && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 w-full max-w-md">
            <h2 className="text-xl font-semibold mb-4">Crear Nuevo Usuario</h2>
            <form onSubmit={handleCreateUser}>
              <div className="mb-4">
                <label className="block mb-1">Nombre completo</label>
                <input
                  type="text"
                  value={newUser.name}
                  onChange={(e) => setNewUser({...newUser, name: e.target.value})}
                  className="w-full p-2 border rounded"
                  required
                />
              </div>
              
              <div className="mb-4">
                <label className="block mb-1">Nombre de usuario</label>
                <input
                  type="text"
                  value={newUser.username}
                  onChange={(e) => setNewUser({...newUser, username: e.target.value})}
                  className="w-full p-2 border rounded"
                  required
                />
              </div>
              
              <div className="mb-4">
                <label className="block mb-1">Rol</label>
                <select
                  value={newUser.role}
                  onChange={handleRoleInputChange}
                  className="w-full p-2 border rounded"
                >
                  <option value="egresado">Egresado</option>
                  <option value="empresario">Empresario</option>
                  <option value="administrador">Administrador</option>
                </select>
              </div>
              
              {/* Student ID field - only displayed for 'egresado' role */}
              {newUser.role === 'egresado' && (
                <div className="mb-4">
                  <label className="block mb-1">ID de Estudiante (8 dígitos)</label>
                  <input
                    type="text"
                    value={newUser.studentId}
                    onChange={handleStudentIdChange}
                    className="w-full p-2 border rounded"
                    placeholder="Ejemplo: 20270806"
                    required={newUser.role === 'egresado'}
                  />
                </div>
              )}
              
              <div className="mb-4">
                <label className="block mb-1">Correo electrónico</label>
                <input
                  type="email"
                  value={newUser.email}
                  onChange={(e) => setNewUser({...newUser, email: e.target.value})}
                  className="w-full p-2 border rounded"
                  readOnly={newUser.role === 'egresado' && /^\d{8}$/.test(newUser.studentId)}
                  required
                />
                {newUser.role === 'egresado' && /^\d{8}$/.test(newUser.studentId) && (
                  <p className="text-xs text-gray-500 mt-1">
                    El correo se genera automáticamente a partir del ID de estudiante
                  </p>
                )}
              </div>
              
              <div className="mb-4">
                <label className="block mb-1">Contraseña</label>
                <input
                  type="password"
                  value={newUser.password}
                  onChange={(e) => setNewUser({...newUser, password: e.target.value})}
                  className="w-full p-2 border rounded"
                  required
                />
              </div>
              
              <div className="flex justify-end gap-2">
                <button
                  type="button"
                  onClick={() => setIsAddingUser(false)}
                  className="px-4 py-2 border rounded-lg"
                >
                  Cancelar
                </button>
                <button
                  type="submit"
                  className="bg-primary text-white px-4 py-2 rounded-lg flex items-center"
                  disabled={isCreatingUser}
                >
                  {isCreatingUser ? <Loader className="animate-spin mr-2" size={18} /> : <UserPlus size={18} className="mr-2" />}
                  Crear Usuario
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default AdminDashboardPage;

================
File: frontend/src/pages/AnnouncementsPage.jsx
================
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import AnnouncementCreation from "../components/AnnouncementCreation";
import Announcement from "../components/Announcement";
import { Megaphone, Loader } from "lucide-react";

const AnnouncementsPage = () => {
  const { data: authUser } = useQuery({ queryKey: ["authUser"] });
  
  // Only students (egresados) and admins can access
  const canAccess = authUser?.role === 'egresado' || authUser?.role === 'administrador';

  const { data: announcements, isLoading, error } = useQuery({
    queryKey: ["announcements"],
    queryFn: async () => {
      const res = await axiosInstance.get("/announcements");
      return res.data;
    },
    enabled: canAccess,
  });

  if (!canAccess) {
    return (
      <div className="flex items-center justify-center h-96">
        <div className="text-center">
          <h2 className="text-2xl font-bold text-gray-700 mb-2">Acceso restringido</h2>
          <p className="text-gray-600">No tienes acceso a esta sección.</p>
        </div>
      </div>
    );
  }

  return (
    <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
      <div className="hidden lg:block lg:col-span-1">
        <Sidebar user={authUser} />
      </div>

      <div className="col-span-1 lg:col-span-2 order-first lg:order-none">
        <div className="bg-white rounded-lg shadow p-6 mb-6">
          <h1 className="text-2xl font-bold mb-6 flex items-center">
            <Megaphone className="mr-2" /> Anuncios
          </h1>
          
          <p className="text-gray-600 mb-6">
            Esta sección contiene anuncios y comunicaciones importantes publicados por los administradores.
          </p>
        </div>

        {/* Only admins can create announcements */}
        {authUser?.role === 'administrador' && (
          <AnnouncementCreation user={authUser} />
        )}

        {isLoading ? (
          <div className="flex justify-center py-12">
            <Loader className="w-12 h-12 animate-spin text-primary" />
          </div>
        ) : error ? (
          <div className="bg-red-50 p-4 rounded-lg text-red-800">
            <p>Error al cargar los anuncios: {error.message}</p>
          </div>
        ) : announcements?.length > 0 ? (
          announcements.map((announcement) => (
            <Announcement key={announcement._id} announcement={announcement} />
          ))
        ) : (
          <div className="bg-white rounded-lg shadow p-8 text-center">
            <Megaphone size={64} className="mx-auto text-blue-500" />
            <h2 className="text-2xl font-bold mb-4 text-gray-800">No hay anuncios todavía</h2>
            <p className="text-gray-600 mb-6">
              {authUser?.role === 'administrador' 
                ? "Crea el primer anuncio usando el formulario de arriba." 
                : "No se han publicado anuncios todavía."}
            </p>
          </div>
        )}
      </div>

      <div className="col-span-1 lg:col-span-1 hidden lg:block">
        <div className="bg-secondary rounded-lg shadow p-4">
          <h2 className="font-semibold mb-4">¿Qué son los anuncios?</h2>
          <p className="text-sm text-gray-600">
            Los anuncios son comunicaciones oficiales publicadas por los administradores. 
            Aquí encontrarás información importante sobre eventos, actualizaciones y 
            noticias relevantes para los egresados.
          </p>
        </div>
      </div>
    </div>
  );
};

export default AnnouncementsPage;

================
File: frontend/src/pages/auth/LoginPage.jsx
================
import { Link } from "react-router-dom";
import LoginForm from "../../components/auth/LoginForm";

const LoginPage = () => {
	return (
		<div className='min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8'>
			<div className='sm:mx-auto sm:w-full sm:max-w-md'>
				<img className='mx-auto h-40 w-auto' src='/logo redondo.png' alt='LinkedIn' />
				<h2 className=' text-center text-3xl font-extrabold text-gray-900'>Iniciar sesión</h2>
			</div>

			<div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md shadow-md'>
				<div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>
					<LoginForm />
					<div className='mt-6'>
						<div className='relative'>
							<div className='absolute inset-0 flex items-center'>
								<div className='w-full border-t border-gray-300'></div>
							</div>
							<div className='relative flex justify-center text-sm'>
								<span className='px-2 bg-white text-gray-500'>¿Aun no tienes una cuenta?</span>
							</div>
						</div>
						<div className='mt-6'>
							<Link
								to='/signup'
								className='w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-blue-600 bg-white hover:bg-gray-50'
							>
								Registrate
							</Link>
						</div>
					</div>
				</div>
			</div>
		</div>
	);
};
export default LoginPage;

================
File: frontend/src/pages/auth/SignUpPage.jsx
================
import { Link } from "react-router-dom";
import SignUpForm from "../../components/auth/SignUpForm";

const SignUpPage = () => {
	return (
		<div className='min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8'>
			<div className='sm:mx-auto sm:w-full sm:max-w-md'>
				<img className='mx-auto h-40 w-auto' src='/logo redondo.png' alt='ITTG' />
				<h2 className='text-center text-3xl font-extrabold text-gray-900'>
					Crea conexiones para tu vida profesional
				</h2>
			</div>
			<div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md shadow-md'>
				<div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>
					<SignUpForm />

					<div className='mt-6'>
						<div className='relative'>
							<div className='absolute inset-0 flex items-center'>
								<div className='w-full border-t border-gray-300'></div>
							</div>
							<div className='relative flex justify-center text-sm'>
								<span className='px-2 bg-white text-gray-500'>¿Ya tienes una cuenta?</span>
							</div>
						</div>
						<div className='mt-6'>
							<Link
								to='/login'
								className='w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-blue-600 bg-white hover:bg-gray-50'
							>
								Iniciar sesion
							</Link>
						</div>
					</div>
				</div>
			</div>
		</div>
	);
};
export default SignUpPage;

================
File: frontend/src/pages/HomePage.jsx
================
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import PostCreation from "../components/PostCreation";
import Post from "../components/Post";
import { Users, Newspaper, FileText,  } from "lucide-react";
import RecommendedUser from "../components/RecommendedUser";

const HomePage = () => {
	const { data: authUser } = useQuery({ queryKey: ["authUser"] });

	const { data: recommendedUsers } = useQuery({
		queryKey: ["recommendedUsers"],
		queryFn: async () => {
			const res = await axiosInstance.get("/users/suggestions?limit=5");
			return res.data;
		},
	});

	const { data: posts } = useQuery({
		queryKey: ["posts"],
		queryFn: async () => {
			const res = await axiosInstance.get("/posts");
			return res.data;
		},
	});

	console.log("posts", posts);

	return (
		<div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
			<div className='hidden lg:block lg:col-span-1'>
				<Sidebar user={authUser} />
			</div>

			<div className='col-span-1 lg:col-span-2 order-first lg:order-none'>
				<PostCreation user={authUser} />

				{posts?.map((post) => (
					<Post key={post._id} post={post} />
				))}

				{posts?.length === 0 && (
					<div className='bg-white rounded-lg shadow p-8 text-center'>
						<div className='mb-6'>
							<FileText    size={64} className='mx-auto text-blue-500' />
						</div>
						<h2 className='text-2xl font-bold mb-4 text-gray-800'>No hay publicaciones todavía</h2>
						<p className='text-gray-600 mb-6'>Añade personas a tus contactos para porder ver sus posts</p>
					</div>
				)}
			</div>

			{recommendedUsers?.length > 0 && (
				<div className='col-span-1 lg:col-span-1 hidden lg:block'>
					<div className='bg-secondary rounded-lg shadow p-4'>
						<h2 className='font-semibold mb-4'>Personas que quiza conozcas</h2>
						{recommendedUsers?.map((user) => (
							<RecommendedUser key={user._id} user={user} />
						))}
					</div>
				</div>
			)}
		</div>
	);
};
export default HomePage;

================
File: frontend/src/pages/JobBoardPage.jsx
================
import { useState } from 'react';
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import JobPostCreation from "../components/JobPostCreation";
import JobPost from "../components/JobPost";
import { Briefcase, Loader, Search, Filter, Plus, Minus } from "lucide-react";

const JobBoardPage = () => {
  const { data: authUser } = useQuery({ queryKey: ["authUser"] });
  
  // Only students (egresados) and admins can access
  const canAccess = authUser?.role === 'egresado' || authUser?.role === 'administrador';
  const isAdmin = authUser?.role === 'administrador';

  const [showJobForm, setShowJobForm] = useState(false);
  const [filters, setFilters] = useState({
    status: "active",
    jobType: "all"
  });
  const [searchTerm, setSearchTerm] = useState('');

  const { data: jobPosts, isLoading, error } = useQuery({
    queryKey: ["jobs", filters],
    queryFn: async () => {
      let queryParams = new URLSearchParams();
      if (filters.status !== "all") {
        queryParams.append("status", filters.status);
      }
      const res = await axiosInstance.get(`/jobs?${queryParams}`);
      return res.data;
    },
    enabled: canAccess,
  });

  if (!canAccess) {
    return (
      <div className="flex items-center justify-center h-96">
        <div className="text-center">
          <h2 className="text-2xl font-bold text-gray-700 mb-2">Acceso restringido</h2>
          <p className="text-gray-600">No tienes acceso a esta sección.</p>
        </div>
      </div>
    );
  }

  // Filter job posts based on search term and job type
  const filteredJobs = jobPosts
    ? jobPosts.filter(job => {
        const matchesSearch = !searchTerm || 
          job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
          job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||
          job.location.toLowerCase().includes(searchTerm.toLowerCase()) ||
          job.description.toLowerCase().includes(searchTerm.toLowerCase());
        
        const matchesType = filters.jobType === "all" || job.jobType === filters.jobType;
        
        return matchesSearch && matchesType;
      })
    : [];

  return (
    <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
      <div className="hidden lg:block lg:col-span-1">
        <Sidebar user={authUser} />
      </div>

      <div className="col-span-1 lg:col-span-3">
        <div className="bg-white rounded-lg shadow p-6 mb-6">
          <div className="flex justify-between items-center mb-6">
            <h1 className="text-2xl font-bold flex items-center">
              <Briefcase className="mr-2" /> Bolsa de Trabajos
            </h1>
            
            {isAdmin && (
              <button 
                onClick={() => setShowJobForm(!showJobForm)}
                className="bg-primary text-white px-4 py-2 rounded-lg flex items-center gap-2"
              >
                {showJobForm ? <Minus size={20} /> : <Plus size={20} />}
                {showJobForm ? "Cerrar" : "Nueva Oferta"}
              </button>
            )}
          </div>

          <p className="text-gray-600 mb-6">
            Explora oportunidades laborales disponibles para egresados del ITTG.
          </p>

          {isAdmin && showJobForm && (
            <JobPostCreation 
              user={authUser} 
              onComplete={() => setShowJobForm(false)} 
            />
          )}

          <div className="flex flex-wrap gap-4 mb-6">
            {/* Search Bar */}
            <div className="flex-grow relative">
              <input
                type="text"
                placeholder="Buscar ofertas de trabajo..."
                className="w-full p-3 pl-10 pr-4 border rounded-lg"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
              <Search className="absolute left-3 top-3 text-gray-400" size={18} />
            </div>

            {/* Filters */}
            <div className="flex items-center gap-2">
              <div className="flex items-center">
                <Filter size={18} className="mr-1 text-gray-500" />
                <span className="text-gray-500 mr-2">Filtros:</span>
              </div>
              
              {/* Status Filter */}
              <select
                value={filters.status}
                onChange={(e) => setFilters({...filters, status: e.target.value})}
                className="p-2 border rounded-lg"
              >
                <option value="active">Activas</option>
                <option value="closed">Cerradas</option>
                <option value="expired">Expiradas</option>
                <option value="all">Todas</option>
              </select>
              
              {/* Job Type Filter */}
              <select
                value={filters.jobType}
                onChange={(e) => setFilters({...filters, jobType: e.target.value})}
                className="p-2 border rounded-lg"
              >
                <option value="all">Todos los tipos</option>
                <option value="full-time">Tiempo Completo</option>
                <option value="part-time">Medio Tiempo</option>
                <option value="contract">Contrato</option>
                <option value="internship">Pasantía</option>
                <option value="temporary">Temporal</option>
              </select>
            </div>
          </div>

          {isLoading ? (
            <div className="flex justify-center py-12">
              <Loader className="w-12 h-12 animate-spin text-primary" />
            </div>
          ) : error ? (
            <div className="bg-red-50 p-4 rounded-lg text-red-800">
              <p>Error al cargar las ofertas de trabajo: {error.message}</p>
            </div>
          ) : filteredJobs.length > 0 ? (
            <div className="space-y-6">
              {filteredJobs.map((jobPost) => (
                <JobPost key={jobPost._id} jobPost={jobPost} />
              ))}
            </div>
          ) : (
            <div className="bg-white rounded-lg shadow p-8 text-center">
              <Briefcase size={64} className="mx-auto text-blue-500" />
              <h2 className="text-2xl font-bold mb-4 text-gray-800">No hay ofertas de trabajo disponibles</h2>
              <p className="text-gray-600 mb-6">
                {searchTerm 
                  ? "No se encontraron resultados para tu búsqueda. Intenta con otros términos."
                  : isAdmin 
                    ? "Agrega la primera oferta de trabajo usando el botón 'Nueva Oferta'."
                    : "No hay ofertas de trabajo publicadas actualmente."}
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default JobBoardPage;

================
File: frontend/src/pages/NetworkPage.jsx
================
import { useState } from 'react';
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import { UserPlus, Search  } from "lucide-react";
import FriendRequest from "../components/FriendRequest";
import UserCard from "../components/UserCard";
import RecommendedUser from "../components/RecommendedUser";
  
const NetworkPage = () => {
	const { data: user } = useQuery({ queryKey: ["authUser"] });

	const { data: connectionRequests } = useQuery({
		queryKey: ["connectionRequests"],
		queryFn: () => axiosInstance.get("/connections/requests"),
	});

	const { data: connections } = useQuery({
		queryKey: ["connections"],
		queryFn: () => axiosInstance.get("/connections"),
	});
 
    const { data: recommendedUsers } = useQuery({
        queryKey: ["recommendedUsersBig"],
        queryFn: async () => {
            const res = await axiosInstance.get("/users/suggestions?limit=50");  // Change limit to 3 or any desired number // aca cambiamos el máximo de usaurios recomendados
            return res.data;
        },
    });

	 // State to manage search input
	 const [searchTerm, setSearchTerm] = useState('');

	 // Filter recommended users based on search term with null checks
	 const filteredUsers = recommendedUsers
		 ? recommendedUsers.filter(user =>
			 (user && user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||
			 (user && user.username && user.username.toLowerCase().includes(searchTerm.toLowerCase()))
		   )
		 : [];
	
	return (
		<div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
			<div className='col-span-1 lg:col-span-1'>
				<Sidebar user={user} />
			</div>
			<div className='col-span-1 lg:col-span-3'>
				<div className='bg-secondary rounded-lg shadow p-6 mb-6'>
					<h1 className='text-2xl font-bold mb-6'>Mis contactos</h1>

					{connectionRequests?.data?.length > 0 ? (
						<div className='mb-8'>
							<h2 className='text-xl font-semibold mb-2'>Solicitudes de conexión.</h2>
							<div className='space-y-4'>
								{connectionRequests.data.map((request) => (
									<FriendRequest key={request.id} request={request} />
								))}
							</div>
						</div>
					) : (
						<div className='bg-white rounded-lg shadow p-6 text-center mb-6'>
							<UserPlus size={48} className='mx-auto text-gray-400 mb-4' />
							<h3 className='text-xl font-semibold mb-2'>No hay solicitudes de conexión</h3>
							<p className='text-gray-600'>
								No tienes solicitudes de conexión por el momento.
							</p>
							<p className='text-gray-600 mt-2'>
								Explora sugerencias de conexión abajo para expandir tus contactos!
							</p>
						</div>
					)}
					
					{connections?.data?.length > 0 && (
						<div className='mb-8'>
							<h2 className='text-xl font-semibold mb-4'>Mis conexiones</h2>
							<div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>
								{connections.data.map((connection) => (
									<UserCard key={connection._id} user={connection} isConnection={true} />
								))}
							</div>
						</div>
					)}

					{recommendedUsers?.length > 0 && (
                        <div className='mb-8'>
                            <h2 className='text-xl font-semibold mb-4'>Sugerencias de Conexión</h2>
                            <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>
                                {recommendedUsers.map((suggestedUser) => (
                                    <RecommendedUser key={suggestedUser._id} user={suggestedUser} />
                                ))}
                            </div>
                        </div>
                    )}
				</div>
			</div>
		</div>
	);
};

export default NetworkPage;

================
File: frontend/src/pages/NotificationsPage.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import { toast } from "react-hot-toast";
import { 
  ExternalLink, 
  Eye, 
  MessageSquare, 
  ThumbsUp, 
  Trash2, 
  UserPlus, 
  Users, 
  Briefcase, 
  Clock 
} from "lucide-react";
import { Link } from "react-router-dom";
import Sidebar from "../components/Sidebar";
import { formatDistanceToNow } from "date-fns";

const NotificationsPage = () => {
  const { data: authUser } = useQuery({ queryKey: ["authUser"] });

  const queryClient = useQueryClient();

  const { data: notifications, isLoading } = useQuery({
    queryKey: ["notifications"],
    queryFn: () => axiosInstance.get("/notifications"),
  });

  const { mutate: markAsReadMutation } = useMutation({
    mutationFn: (id) => axiosInstance.put(`/notifications/${id}/read`),
    onSuccess: () => {
      queryClient.invalidateQueries(["notifications"]);
    },
  });

  const { mutate: deleteNotificationMutation } = useMutation({
    mutationFn: (id) => axiosInstance.delete(`/notifications/${id}`),
    onSuccess: () => {
      queryClient.invalidateQueries(["notifications"]);
      toast.success("Notificación eliminada");
    },
  });

  const renderNotificationIcon = (type) => {
    switch (type) {
      case "like":
      case "projectLike":
        return <ThumbsUp className='text-blue-500' />;
      case "comment":
      case "projectComment":
        return <MessageSquare className='text-green-500' />;
      case "connectionAccepted":
        return <UserPlus className='text-purple-500' />;
      case "projectInterest":
        return <Users className='text-yellow-500' />;
      case "projectExpired":
        return <Clock className='text-red-500' />;
      default:
        return null;
    }
  };

  const renderNotificationContent = (notification) => {
    switch (notification.type) {
      case "like":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            dio me gusta a tu post
          </span>
        );
      case "comment":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            comentó en tu post
          </span>
        );
      case "connectionAccepted":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            aceptó tu solicitud de conexión
          </span>
        );
      case "projectInterest":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            mostró interés en tu proyecto
          </span>
        );
      case "projectComment":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            comentó en tu proyecto
          </span>
        );
      case "projectLike":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            le dio me gusta a tu proyecto
          </span>
        );
      case "projectExpired":
        return (
          <span>
            Tu proyecto ha expirado
          </span>
        );
      default:
        return null;
    }
  };

  const renderRelatedContent = (notification) => {
    // Handle project-related notifications
    if (notification.relatedProject) {
      return (
        <Link
          to={`/projects`} // Link to projects page since there's no single project view
          className='mt-2 p-2 bg-gray-50 rounded-md flex items-center space-x-2 hover:bg-gray-100 transition-colors'
        >
          <Briefcase size={16} className='text-gray-500' />
          <div className='flex-1 overflow-hidden'>
            <p className='text-sm text-gray-600 truncate'>Ver proyecto</p>
          </div>
          <ExternalLink size={14} className='text-gray-400' />
        </Link>
      );
    }
    
    // Handle post-related notifications
    if (!notification.relatedPost) return null;

    return (
      <Link
        to={`/post/${notification.relatedPost._id}`}
        className='mt-2 p-2 bg-gray-50 rounded-md flex items-center space-x-2 hover:bg-gray-100 transition-colors'
      >
        {notification.relatedPost.image && (
          <img src={notification.relatedPost.image} alt='Post preview' className='w-10 h-10 object-cover rounded' />
        )}
        <div className='flex-1 overflow-hidden'>
          <p className='text-sm text-gray-600 truncate'>{notification.relatedPost.content}</p>
        </div>
        <ExternalLink size={14} className='text-gray-400' />
      </Link>
    );
  };

  return (
    <div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
      <div className='col-span-1 lg:col-span-1'>
        <Sidebar user={authUser} />
      </div>
      <div className='col-span-1 lg:col-span-3'>
        <div className='bg-white rounded-lg shadow p-6'>
          <h1 className='text-2xl font-bold mb-6'>Notificaciones</h1>

          {isLoading ? (
            <p>Cargando notificaciones...</p>
          ) : notifications && notifications.data.length > 0 ? (
            <ul>
              {notifications.data.map((notification) => (
                <li
                  key={notification._id}
                  className={`bg-white border rounded-lg p-4 my-4 transition-all hover:shadow-md ${
                    !notification.read ? "border-blue-500" : "border-gray-200"
                  }`}
                >
                  <div className='flex items-start justify-between'>
                    <div className='flex items-center space-x-4'>
                      {notification.relatedUser && (
                        <Link to={`/profile/${notification.relatedUser.username}`}>
                          <img
                            src={notification.relatedUser.profilePicture || "/avatar.png"}
                            alt={notification.relatedUser.name}
                            className='w-12 h-12 rounded-full object-cover'
                          />
                        </Link>
                      )}

                      <div>
                        <div className='flex items-center gap-2'>
                          <div className='p-1 bg-gray-100 rounded-full'>
                            {renderNotificationIcon(notification.type)}
                          </div>
                          <p className='text-sm'>{renderNotificationContent(notification)}</p>
                        </div>
                        <p className='text-xs text-gray-500 mt-1'>
                          {formatDistanceToNow(new Date(notification.createdAt), {
                            addSuffix: true,
                          })}
                        </p>
                        {renderRelatedContent(notification)}
                      </div>
                    </div>

                    <div className='flex gap-2'>
                      {!notification.read && (
                        <button
                          onClick={() => markAsReadMutation(notification._id)}
                          className='p-1 bg-blue-100 text-blue-600 rounded hover:bg-blue-200 transition-colors'
                          aria-label='Mark as read'
                        >
                          <Eye size={16} />
                        </button>
                      )}

                      <button
                        onClick={() => deleteNotificationMutation(notification._id)}
                        className='p-1 bg-red-100 text-red-600 rounded hover:bg-red-200 transition-colors'
                        aria-label='Delete notification'
                      >
                        <Trash2 size={16} />
                      </button>
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          ) : (
            <p>No hay notificaciones por el momento</p>
          )}
        </div>
      </div>
    </div>
  );
};
export default NotificationsPage;

================
File: frontend/src/pages/PostPage.jsx
================
import { useQuery } from "@tanstack/react-query";
import { useParams } from "react-router-dom";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import Post from "../components/Post";

const PostPage = () => {
	const { postId } = useParams();
	const { data: authUser } = useQuery({ queryKey: ["authUser"] });

	const { data: post, isLoading } = useQuery({
		queryKey: ["post", postId],
		queryFn: () => axiosInstance.get(`/posts/${postId}`),
	});

	if (isLoading) return <div>Cargando Post...</div>;
	if (!post?.data) return <div>Post not foundno encontrado</div>;

	return (
		<div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
			<div className='hidden lg:block lg:col-span-1'>
				<Sidebar user={authUser} />
			</div>

			<div className='col-span-1 lg:col-span-3'>
				<Post post={post.data} />
			</div>
		</div>
	);
};
export default PostPage;

================
File: frontend/src/pages/ProfilePage.jsx
================
// frontend/src/pages/ProfilePage.jsx
import { useParams } from "react-router-dom";
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import ProfileHeader from "../components/ProfileHeader";
import AboutSection from "../components/AboutSection";
import ExperienceSection from "../components/ExperienceSection";
import EducationSection from "../components/EducationSection";
import SkillsSection from "../components/SkillsSection";
import CompanyInfoSection from "../components/CompanyInfoSection";
import toast from "react-hot-toast";

const ProfilePage = () => {
  const { username } = useParams();
  const queryClient = useQueryClient();

  const { data: authUser, isLoading } = useQuery({
    queryKey: ["authUser"],
  });

  const { data: userProfile, isLoading: isUserProfileLoading } = useQuery({
    queryKey: ["userProfile", username],
    queryFn: () => axiosInstance.get(`/users/${username}`),
  });

  const { mutate: updateProfile } = useMutation({
    mutationFn: async (updatedData) => {
      await axiosInstance.put("/users/profile", updatedData);
    },
    onSuccess: () => {
      toast.success("Perfil actualizado");
      // Invalidate both user profile and auth user to ensure data is fresh
      queryClient.invalidateQueries(["userProfile", username]);
      queryClient.invalidateQueries(["authUser"]);
    },
  });

  if (isLoading || isUserProfileLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
      </div>
    );
  }

  const isOwnProfile = authUser.username === userProfile?.data?.username;
  const userData = isOwnProfile ? authUser : userProfile?.data;

  const handleSave = (updatedData) => {
    console.log('ProfilePage receiving:', updatedData); // Debug log
    updateProfile(updatedData);
  };

  return (
    <div className="max-w-4xl mx-auto p-4">
      <ProfileHeader userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      
      {/* Company Info Section only for empresarios, show message if first login */}
      {userData.role === 'empresario' && (
        <>
          {userData.isFirstLogin ? (
            <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
              <div className="flex">
                <div className="flex-shrink-0">
                  <svg className="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                  </svg>
                </div>
                <div className="ml-3">
                  <p className="text-sm text-yellow-700">
                    Por favor complete el cuestionario inicial para configurar la información de su empresa.
                  </p>
                </div>
              </div>
            </div>
          ) : (
            <CompanyInfoSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
          )}
        </>
      )}
      
      <AboutSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      <ExperienceSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      <EducationSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      <SkillsSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
    </div>
  );
};

export default ProfilePage;

================
File: frontend/src/pages/ProjectsPage.jsx
================
// frontend/src/pages/ProjectsPage.jsx
import React, { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import ProjectCreation from "../components/ProjectCreation";
import { Briefcase, Plus, Loader, ThumbsUp, MessageSquare, UserPlus, Users, X } from "lucide-react";
import toast from 'react-hot-toast';
import { Link } from "react-router-dom";
import { formatDistanceToNow } from "date-fns";

const ProjectsPage = () => {
    const queryClient = useQueryClient();
    
    const { data: authUser } = useQuery({ 
        queryKey: ["authUser"],
        suspense: false,
    });

    const [showProjectForm, setShowProjectForm] = useState(false);
    const [filters, setFilters] = useState({
        status: "active",
        view: "all"
    });

    const { data: projects = [], isLoading, error } = useQuery({
        queryKey: ["projects", filters],
        queryFn: async () => {
            try {
                const params = new URLSearchParams();
                if (filters.status) params.append('status', filters.status);
                if (filters.view === 'created') params.append('created', 'true');
                if (filters.view === 'interested') params.append('interested', 'true');
                
                const res = await axiosInstance.get(`/projects?${params}`);
                
                // Convert to plain JavaScript objects to avoid mongoose object rendering issues
                return JSON.parse(JSON.stringify(res.data));
            } catch (err) {
                console.error('Error fetching projects:', err);
                throw new Error(err.response?.data?.message || 'Error al cargar los proyectos');
            }
        },
        enabled: !!authUser,
        staleTime: 1000 * 60 * 5, // 5 minutes
    });

    // Like project mutation
    const { mutate: likeProject } = useMutation({
        mutationFn: async (projectId) => {
            const res = await axiosInstance.post(`/projects/${projectId}/like`);
            return res.data;
        },
        onSuccess: () => {
            queryClient.invalidateQueries(["projects", filters]);
            toast.success("Acción realizada correctamente");
        },
        onError: (error) => {
            toast.error(error.response?.data?.message || "Error al realizar la acción");
        }
    });

    // Show interest mutation
  // In the toggleInterest mutation, change the success message to use Spanish
const { mutate: toggleInterest } = useMutation({
    mutationFn: async (projectId) => {
        const res = await axiosInstance.post(`/projects/${projectId}/interest`);
        return res.data;
    },
    onSuccess: (data) => {
        queryClient.invalidateQueries(["projects", filters]);
        // Custom Spanish message instead of using the response message
        const message = data.message.includes("removed") ? 
            "Interés removido" : "Interés añadido";
        toast.success(message);
    },
    onError: (error) => {
        toast.error(error.response?.data?.message || "Error al mostrar interés");
    }
});
    
    // ProjectPost component with like, comment, and show interest functionality
    const ProjectPost = ({ project, isOwner }) => {
        const [showCommentForm, setShowCommentForm] = useState(false);
        const [commentText, setCommentText] = useState('');
        const [showInterestedUsers, setShowInterestedUsers] = useState(false);
        
        const isLiked = project.likes?.includes(authUser._id);
        const isInterested = project.interestedUsers?.some(u => u.user._id === authUser._id);
        
        const handleLike = () => {
            likeProject(project._id);
        };
        
        const handleToggleInterest = () => {
            toggleInterest(project._id);
        };
        
        const { mutate: addComment } = useMutation({
            mutationFn: async () => {
                const res = await axiosInstance.post(`/projects/${project._id}/comment`, {
                    content: commentText
                });
                return res.data;
            },
            onSuccess: () => {
                queryClient.invalidateQueries(["projects", filters]);
                setCommentText('');
                setShowCommentForm(false);
                toast.success("Comentario añadido");
            },
            onError: (error) => {
                toast.error(error.response?.data?.message || "Error al añadir comentario");
            }
        });
        
        const handleSubmitComment = (e) => {
            e.preventDefault();
            if (commentText.trim()) {
                addComment();
            }
        };
        
        return (
            <div className="bg-white rounded-lg shadow p-6 border border-gray-200">
                {/* Header */}
                <div className="flex justify-between mb-4">
                    <div className="flex items-center">
                        <Link to={`/profile/${project.author.username}`}>
                            <img 
                                src={project.author.profilePicture || "/avatar.png"} 
                                alt={project.author.name}
                                className="w-10 h-10 rounded-full mr-3"
                            />
                        </Link>
                        <div>
                            <h3 className="font-semibold text-lg">{project.title}</h3>
                            <div className="flex items-center text-sm text-gray-600">
                                <Link to={`/profile/${project.author.username}`} className="hover:underline">
                                    {project.author.name}
                                </Link>
                                <span className="mx-1">•</span>
                                <span>{formatDistanceToNow(new Date(project.createdAt), { addSuffix: true })}</span>
                            </div>
                        </div>
                    </div>
                    <div className="flex flex-col items-end">
                        {isOwner && (
                            <span className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full mb-2">
                                Tu proyecto
                            </span>
                        )}
                        <span className={`text-xs px-2 py-1 rounded-full ${
                            project.status === 'active' ? 'bg-green-100 text-green-800' :
                            project.status === 'completed' ? 'bg-purple-100 text-purple-800' :
                            'bg-gray-100 text-gray-800'
                        }`}>
                            {project.status === 'active' ? 'Activo' : 
                             project.status === 'completed' ? 'Completado' : 'Expirado'}
                        </span>
                    </div>
                </div>
                
                {/* Content */}
                <p className="mb-4">{project.content}</p>
                {project.image && <img src={project.image} alt="Project image" className="w-full rounded-lg mb-4" />}
                
                {/* Requirements and Goals */}
                {(project.projectRequirements || project.projectGoals) && (
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        {project.projectRequirements && (
                            <div className="bg-gray-50 p-3 rounded">
                                <h4 className="font-semibold mb-2">Requisitos:</h4>
                                <p className="text-sm">{project.projectRequirements}</p>
                            </div>
                        )}
                        {project.projectGoals && (
                            <div className="bg-gray-50 p-3 rounded">
                                <h4 className="font-semibold mb-2">Metas:</h4>
                                <p className="text-sm">{project.projectGoals}</p>
                            </div>
                        )}
                    </div>
                )}
                
                {/* Actions */}
                <div className="flex items-center justify-between p-2 border-t border-b my-3">
                    <button 
                        onClick={handleLike}
                        className={`flex items-center gap-1 px-3 py-1 rounded-full transition-colors
                            ${isLiked ? 'text-blue-600 bg-blue-50' : 'text-gray-500 hover:bg-gray-100'}`}
                    >
                        <ThumbsUp size={18} className={isLiked ? 'fill-blue-600' : ''} />
                        <span>{project.likes?.length || 0}</span>
                    </button>
                    
                    <button 
                        onClick={() => setShowCommentForm(!showCommentForm)}
                        className="flex items-center gap-1 px-3 py-1 rounded-full text-gray-500 hover:bg-gray-100 transition-colors"
                    >
                        <MessageSquare size={18} />
                        <span>{project.comments?.length || 0} Comentarios</span>
                    </button>
                    
                    <button 
                        onClick={handleToggleInterest}
                        className={`flex items-center gap-1 px-3 py-1 rounded-full transition-colors
                            ${isInterested ? 'text-green-600 bg-green-50' : 'text-gray-500 hover:bg-gray-100'}`}
                        disabled={project.status === 'expired'}
                    >
                        <UserPlus size={18} className={isInterested ? 'fill-green-600' : ''} />
                        <span>{isInterested ? 'Interesado' : 'Mostrar interés'}</span>
                    </button>
                </div>
                
                {/* Interest count and list */}
                {project.interestedUsers?.length > 0 && (
                    <div className="mt-2 mb-4">
                        <button 
                            onClick={() => setShowInterestedUsers(!showInterestedUsers)}
                            className="flex items-center text-sm text-gray-600 hover:text-gray-900"
                        >
                            <Users size={16} className="mr-1" />
                            <span>
                                {project.interestedUsers.length} 
                                {project.interestedUsers.length === 1 ? ' persona interesada' : ' personas interesadas'}
                            </span>
                        </button>
                        
                        {/* Interested Users Modal */}
                        {showInterestedUsers && (
                            <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                                <div className="bg-white rounded-lg p-6 w-full max-w-md">
                                    <div className="flex justify-between items-center mb-4">
                                        <h3 className="text-lg font-semibold">Personas interesadas</h3>
                                        <button 
                                            onClick={() => setShowInterestedUsers(false)}
                                            className="text-gray-500 hover:text-gray-700"
                                        >
                                            <X size={20} />
                                        </button>
                                    </div>
                                    
                                    <div className="max-h-80 overflow-y-auto">
                                        {project.interestedUsers.map((interest) => (
                                            <div key={interest.user._id} className="flex items-center p-3 hover:bg-gray-50 rounded">
                                                <Link 
                                                    to={`/profile/${interest.user.username}`}
                                                    className="flex items-center flex-grow"
                                                >
                                                    <img 
                                                        src={interest.user.profilePicture || "/avatar.png"} 
                                                        alt={interest.user.name} 
                                                        className="w-10 h-10 rounded-full mr-3"
                                                    />
                                                    <div>
                                                        <p className="font-medium">{interest.user.name}</p>
                                                        <p className="text-xs text-gray-500">{interest.user.headline}</p>
                                                    </div>
                                                </Link>
                                                <span className="text-xs text-gray-500">
                                                    {formatDistanceToNow(new Date(interest.createdAt), { addSuffix: true })}
                                                </span>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        )}
                    </div>
                )}
                
                {/* Comment form */}
                {showCommentForm && (
                    <form onSubmit={handleSubmitComment} className="mt-4">
                        <textarea
                            value={commentText}
                            onChange={(e) => setCommentText(e.target.value)}
                            placeholder="Escribe un comentario..."
                            className="w-full p-3 border rounded-lg mb-2"
                            rows="2"
                            disabled={project.status === 'expired'}
                        />
                        <button 
                            type="submit" 
                            className="bg-primary text-white px-4 py-2 rounded-lg disabled:opacity-50"
                            disabled={!commentText.trim() || project.status === 'expired'}
                        >
                            Comentar
                        </button>
                    </form>
                )}
                
                {/* Comments section */}
                {showCommentForm && project.comments?.length > 0 && (
                    <div className="mt-4 border-t pt-4">
                        <h4 className="font-semibold mb-2">Comentarios</h4>
                        <div className="space-y-3 max-h-60 overflow-y-auto">
                            {project.comments.map((comment) => (
                                <div key={comment._id} className="flex items-start gap-2 p-2 bg-gray-50 rounded">
                                    <Link to={`/profile/${comment.user.username}`}>
                                        <img 
                                            src={comment.user.profilePicture || "/avatar.png"}
                                            alt={comment.user.name}
                                            className="w-8 h-8 rounded-full"
                                        />
                                    </Link>
                                    <div>
                                        <div className="flex items-baseline gap-2">
                                            <Link to={`/profile/${comment.user.username}`} className="font-semibold text-sm hover:underline">
                                                {comment.user.name}
                                            </Link>
                                            <span className="text-xs text-gray-500">
                                                {formatDistanceToNow(new Date(comment.createdAt), { addSuffix: true })}
                                            </span>
                                        </div>
                                        <p className="text-sm">{comment.content}</p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                )}
            </div>
        );
    };

    if (error) {
        return (
            <div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
                <div className='hidden lg:block lg:col-span-1'>
                    <Sidebar user={authUser} />
                </div>
                <div className='col-span-1 lg:col-span-3'>
                    <div className='bg-white rounded-lg shadow p-6'>
                        <div className='text-center text-red-600'>
                            <p>Error al cargar los proyectos: {error.message}</p>
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
            <div className='hidden lg:block lg:col-span-1'>
                <Sidebar user={authUser} />
            </div>

            <div className='col-span-1 lg:col-span-3'>
                <div className='bg-white rounded-lg shadow p-6 mb-6'>
                    <div className='flex justify-between items-center mb-6'>
                        <h1 className='text-2xl font-bold'>Proyectos</h1>
                        <button 
                            onClick={() => setShowProjectForm(!showProjectForm)}
                            className='bg-primary text-white px-4 py-2 rounded-lg flex items-center gap-2'
                        >
                            <Plus size={20} />
                            {showProjectForm ? "Cerrar" : "Crear Proyecto"}
                        </button>
                    </div>

                    {showProjectForm && (
                        <div className='mb-6'>
                            <ProjectCreation 
                                user={authUser} 
                                onComplete={() => {
                                    setShowProjectForm(false);
                                    toast.success('Proyecto creado exitosamente');
                                }}
                            />
                        </div>
                    )}

                    <div className='flex flex-wrap gap-2 mb-6'>
                        <div className='flex items-center border rounded-lg overflow-hidden'>
                            <button 
                                className={`px-4 py-2 ${filters.view === 'all' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, view: 'all'})}
                            >
                                Todos
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.view === 'created' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, view: 'created'})}
                            >
                                Mis Proyectos
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.view === 'interested' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, view: 'interested'})}
                            >
                                Interesado
                            </button>
                        </div>

                        <div className='flex items-center border rounded-lg overflow-hidden ml-auto'>
                            <button 
                                className={`px-4 py-2 ${filters.status === 'active' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, status: 'active'})}
                            >
                                Activos
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.status === 'completed' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, status: 'completed'})}
                            >
                                Completados
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.status === 'expired' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, status: 'expired'})}
                            >
                                Expirados
                            </button>
                        </div>
                    </div>

                    {isLoading ? (
                        <div className="flex items-center justify-center py-10">
                            <Loader className="w-10 h-10 animate-spin text-primary" />
                        </div>
                    ) : projects && projects.length > 0 ? (
                        <div className='space-y-6'>
                            {projects.map((project) => (
                                <ProjectPost 
                                    key={project._id} 
                                    project={project} 
                                    isOwner={project.author._id === authUser._id}
                                />
                            ))}
                        </div>
                    ) : (
                        <div className='text-center py-10 bg-gray-50 rounded-lg'>
                            <Briefcase size={64} className='mx-auto text-gray-400 mb-4' />
                            <h2 className='text-xl font-semibold mb-2'>No hay proyectos disponibles</h2>
                            <p className='text-gray-600 mb-6'>
                                {filters.view === 'created' 
                                    ? 'No has creado ningún proyecto todavía.' 
                                    : filters.view === 'interested'
                                    ? 'No has mostrado interés en ningún proyecto.'
                                    : 'No hay proyectos que coincidan con tus filtros.'}
                            </p>
                            {filters.view === 'created' && (
                                <button
                                    onClick={() => setShowProjectForm(true)}
                                    className='bg-primary text-white px-4 py-2 rounded-lg'
                                >
                                    Crear tu primer proyecto
                                </button>
                            )}
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default ProjectsPage;

================
File: frontend/src/utils/dateUtils.js
================
import { format, parseISO, isValid } from "date-fns";

export const formatDate = (dateString) => {
	const date = parseISO(dateString);
	return isValid(date) ? format(date, "MMM yyyy") : "Present";
};

================
File: frontend/tailwind.config.js
================
import daisyui from "daisyui";

/** @type {import('tailwindcss').Config} */
export default {
	content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],
	theme: {
		extend: {},
	},
	plugins: [daisyui],
	daisyui: {
		themes: [
			{
				linkedin: {
					primary: "#0A66C2", // LinkedIn Blue
					secondary: "#FFFFFF", // White
					accent: "#7FC15E", // LinkedIn Green (for accents)
					neutral: "#000000", // Black (for text)
					"base-100": "#F3F2EF", // Light Gray (background)
					info: "#5E5E5E", // Dark Gray (for secondary text)
					success: "#057642", // Dark Green (for success messages)
					warning: "#F5C75D", // Yellow (for warnings)
					error: "#CC1016", // Red (for errors)
				},
			},
		],
	},
};

================
File: frontend/vite.config.js
================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  server: {
    host: 'localhost'
  }
})



/*           Este es el prebuild, causaba problemas al usarse en local, es más que nada para usarse en local, lo dejo aquí para procesos de documentación 
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})

*/

================
File: package.json
================
{
	"name": "linkedin-clone",
	"version": "1.0.0",
	"description": "",
	"main": "backend/server.js",
	"scripts": {
		"dev": "nodemon backend/server.js",
		"start": "node backend/server.js",
		"build": "npm install && npm install --prefix frontend && npm run build --prefix frontend"
	},
	"keywords": [],
	"author": "",
	"type": "module",
	"license": "ISC",
	"dependencies": {
		"bcryptjs": "^2.4.3",
		"cloudinary": "^2.4.0",
		"cookie-parser": "^1.4.6",
		"cors": "^2.8.5",
		"dotenv": "^16.4.5",
		"express": "^4.19.2",
		"jsonwebtoken": "^9.0.2",
		"mailtrap": "^3.4.0",
		"mongoose": "^8.6.1"
	},
	"devDependencies": {
		"nodemon": "^3.1.4"
	}
}

================
File: README.md
================
<h1 align="center">Instrucciones</h1>


### Setup .env file

```bash
PORT=5000
MONGO_URI=<your_mongo_uri>

JWT_SECRET=<yourverystrongsecret>

NODE_ENV=development

MAILTRAP_TOKEN=<your_mailtrap_token>
EMAIL_FROM=mailtrap@demomailtrap.com
EMAIL_FROM_NAME=<Your_Name>

CLOUDINARY_API_KEY=<your_cloudinary_api_key>
CLOUDINARY_API_SECRET=<your_cloudinary_api_secret>
CLOUDINARY_CLOUD_NAME=<your_cloudinary_cloud_name>

CLIENT_URL=http://localhost:5173
```

### Run this app locally

```shell
npm run build
```

### Start the app

```shell
npm run start
```

================
File: repomixpy-output.txt
================
================================================================
RepomixPy Output File
================================================================

This file was generated by RepomixPy on: 2025-03-28T14:31:22.608547

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This header section
2. Repository structure
3. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
1. This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
2. When processing this file, use the separators and "File:" markers to
  distinguish between different files in the repository.
3. Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and RepomixPy's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

For more information about RepomixPy, visit: https://github.com/abinthomasonline/repomix-py

================================================================
Repository Structure
================================================================
README.md
backend\controllers\admin.controller.js
backend\controllers\announcement.controller.js
backend\controllers\auth.controller.js
backend\controllers\connection.controller.js
backend\controllers\notification.controller.js
backend\controllers\post.controller.js
backend\controllers\project.controller.js
backend\controllers\user.controller.js
backend\emails\emailHandlers.js
backend\emails\emailTemplates.js
backend\jobs\projectCleanup.js
backend\lib\cloudinary.js
backend\lib\db.js
backend\lib\mailtrap.js
backend\middleware\admin.middleware.js
backend\middleware\auth.middleware.js
backend\models\announcement.model.js
backend\models\bannedUser.model.js
backend\models\connectionRequest.model.js
backend\models\notification.model.js
backend\models\post.model.js
backend\models\projectPost.model.js
backend\models\user.model.js
backend\routes\admin.route.js
backend\routes\announcement.route.js
backend\routes\auth.route.js
backend\routes\connection.route.js
backend\routes\notification.route.js
backend\routes\post.route.js
backend\routes\project.route.js
backend\routes\user.route.js
backend\server.js
backend\teclogoazul.svg
frontend\README.md
frontend\eslint.config.js
frontend\index.html
frontend\package.json
frontend\postcss.config.js
frontend\public\avatar.png
frontend\public\banner.png
frontend\public\logo redondo.png
frontend\public\logo.svg
frontend\public\screenshot-for-readme.png
frontend\public\small-logo.1png
frontend\public\small-logo.png
frontend\public\tec redondo.png
frontend\public\teclogoazul.svg
frontend\public\vite.svg
frontend\src\App.jsx
frontend\src\components\AboutSection.jsx
frontend\src\components\CompanyInfoSection.jsx
frontend\src\components\CompanyQuestionnaire.jsx
frontend\src\components\EducationSection.jsx
frontend\src\components\ExperienceSection.jsx
frontend\src\components\FriendRequest.jsx
frontend\src\components\Post.jsx
frontend\src\components\PostAction.jsx
frontend\src\components\PostCreation.jsx
frontend\src\components\PostPefil.jsx
frontend\src\components\PostPerfil.jsx
frontend\src\components\ProfileHeader.jsx
frontend\src\components\ProjectCreation.jsx
frontend\src\components\ProjectPost.jsx
frontend\src\components\QuestionnaireModal.jsx
frontend\src\components\RecommendedUser.jsx
frontend\src\components\Sidebar.jsx
frontend\src\components\SkillsSection.jsx
frontend\src\components\UserCard.jsx
frontend\src\components\auth\LoginForm.jsx
frontend\src\components\auth\SignUpForm.jsx
frontend\src\components\layout\Layout.jsx
frontend\src\components\layout\Navbar.jsx
frontend\src\index.css
frontend\src\lib\axios.js
frontend\src\main.jsx
frontend\src\pages\AdminDashboardPage.jsx
frontend\src\pages\HomePage.jsx
frontend\src\pages\NetworkPage.jsx
frontend\src\pages\NotificationsPage.jsx
frontend\src\pages\PostPage.jsx
frontend\src\pages\ProfilePage.jsx
frontend\src\pages\ProjectsPage.jsx
frontend\src\pages\auth\LoginPage.jsx
frontend\src\pages\auth\SignUpPage.jsx
frontend\src\utils\dateUtils.js
frontend\tailwind.config.js
frontend\vite.config.js
package.json

================================================================
Repository Files
================================================================

================
File: package.json
================
{
	"name": "linkedin-clone",
	"version": "1.0.0",
	"description": "",
	"main": "backend/server.js",
	"scripts": {
		"dev": "nodemon backend/server.js",
		"start": "node backend/server.js",
		"build": "npm install && npm install --prefix frontend && npm run build --prefix frontend"
	},
	"keywords": [],
	"author": "",
	"type": "module",
	"license": "ISC",
	"dependencies": {
		"bcryptjs": "^2.4.3",
		"cloudinary": "^2.4.0",
		"cookie-parser": "^1.4.6",
		"cors": "^2.8.5",
		"dotenv": "^16.4.5",
		"express": "^4.19.2",
		"jsonwebtoken": "^9.0.2",
		"mailtrap": "^3.4.0",
		"mongoose": "^8.6.1"
	},
	"devDependencies": {
		"nodemon": "^3.1.4"
	}
}

================
File: README.md
================
<h1 align="center">Linkedin Clone ✨</h1>

![Demo App](/frontend/public/screenshot-for-readme.png)

[Video Tutorial on Youtube](https://youtu.be/Ycg48pVp3SU)

About This Course:

-   🚀 Project Setup
-   🗄️ MongoDB Integration
-   💳 Stripe Payment Setup
-   🔐 Authentication System with JWT
-   ✉️ Welcome Emails
-   🎨 Design with Tailwind & DaisyUI
-   🛡️ Data Protection
-   🤝 Connection Requests (Send, Accept, Reject)
-   📝 Creating and Sharing Posts
-   🖼️ Image Upload for Posts and Profiles
-   👤 Profile Creation and Updates
-   👥 Suggested Users Feature
-   👍 Like and Comment on Posts
-   📰 News Feed Algorithm
-   ⌛ And a lot more...

### Setup .env file

```bash
PORT=5000
MONGO_URI=<your_mongo_uri>

JWT_SECRET=<yourverystrongsecret>

NODE_ENV=development

MAILTRAP_TOKEN=<your_mailtrap_token>
EMAIL_FROM=mailtrap@demomailtrap.com
EMAIL_FROM_NAME=<Your_Name>

CLOUDINARY_API_KEY=<your_cloudinary_api_key>
CLOUDINARY_API_SECRET=<your_cloudinary_api_secret>
CLOUDINARY_CLOUD_NAME=<your_cloudinary_cloud_name>

CLIENT_URL=http://localhost:5173
```

### Run this app locally

```shell
npm run build
```

### Start the app

```shell
npm run start
```

================
File: backend\server.js
================
// backend/server.js
import express from "express";
import dotenv from "dotenv";
import cookieParser from "cookie-parser";
import cors from "cors";
import path from "path";
import authRoutes from "./routes/auth.route.js";
import userRoutes from "./routes/user.route.js";
import postRoutes from "./routes/post.route.js";
import notificationRoutes from "./routes/notification.route.js";
import connectionRoutes from "./routes/connection.route.js";
import adminRoutes from "./routes/admin.route.js";
import projectRoutes from "./routes/project.route.js"; // Add this line
import { connectDB } from "./lib/db.js";
import { cleanupExpiredProjects } from "./jobs/projectCleanup.js"; // Add this if you want automatic cleanup
import announcementRoutes from "./routes/announcement.route.js";



dotenv.config();
const app = express();
const PORT = process.env.PORT || 5000;
const __dirname = path.resolve();

if (process.env.NODE_ENV !== "production") {
    app.use(
        cors({
            origin: ["http://localhost:5173", "http://127.0.0.1:5173"],
            credentials: true,
        })
    );
}

// Update these lines
app.use(express.json({ limit: "50mb" }));
app.use(express.urlencoded({ limit: "50mb", extended: true }));
app.use(cookieParser());

// Routes
app.use("/api/v1/auth", authRoutes);
app.use("/api/v1/users", userRoutes);
app.use("/api/v1/posts", postRoutes);
app.use("/api/v1/notifications", notificationRoutes);
app.use("/api/v1/connections", connectionRoutes);
app.use("/api/v1/admin", adminRoutes);
app.use("/api/v1/projects", projectRoutes); // Add this line
app.use("/api/v1/announcements", announcementRoutes);

if (process.env.NODE_ENV === "production") {
    app.use(express.static(path.join(__dirname, "/frontend/dist")));
    app.get("*", (req, res) => {
        res.sendFile(path.resolve(__dirname, "frontend", "dist", "index.html"));
    });
}

// Optional: Set up automatic cleanup of expired projects
// This will run the cleanup job every day at midnight
if (process.env.NODE_ENV === "production") {
    setInterval(async () => {
        try {
            await cleanupExpiredProjects();
            console.log("Completed expired projects cleanup job");
        } catch (error) {
            console.error("Error in expired projects cleanup job:", error);
        }
    }, 24 * 60 * 60 * 1000); // Run every 24 hours
}

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
    connectDB();
});

================
File: backend\teclogoazul.svg
================
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
 "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000"
 preserveAspectRatio="xMidYMid meet">

<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M759 4935 c-15 -8 -30 -22 -34 -32 -4 -10 -28 -110 -54 -221 l-46
-204 -145 -48 c-80 -27 -160 -54 -178 -61 l-32 -13 0 -267 0 -266 178 -7 c627
-25 1005 -124 1442 -379 84 -49 95 -53 98 -36 7 42 -57 250 -97 315 -26 42
-192 152 -355 234 -208 105 -468 180 -679 197 -43 3 -80 9 -82 13 -7 11 95 28
242 42 273 25 578 -34 836 -163 177 -88 289 -169 438 -318 246 -246 390 -508
459 -836 28 -132 37 -360 20 -503 -11 -96 -62 -327 -74 -340 -3 -3 -33 3 -68
13 -146 41 -278 28 -379 -36 l-46 -29 14 -53 c38 -144 23 -306 -40 -421 -51
-93 -132 -146 -249 -161 -46 -6 -48 -7 -48 -40 0 -53 -34 -147 -74 -208 -83
-125 -219 -212 -415 -265 -84 -22 -116 -26 -256 -26 -141 -1 -166 2 -215 21
-45 17 -81 22 -195 25 -130 4 -147 7 -240 40 -55 19 -126 47 -157 61 l-58 27
0 -104 0 -104 72 -35 c65 -32 187 -75 259 -92 25 -6 27 -15 69 -208 41 -187
47 -204 76 -235 l33 -33 360 3 361 3 25 25 c21 21 32 58 69 233 24 115 47 211
49 214 3 3 58 22 122 44 l117 39 160 -141 c177 -156 200 -167 261 -131 46 26
455 328 490 360 15 14 31 42 37 61 10 36 -2 67 -133 352 l-35 76 59 84 c101
143 76 129 209 114 63 -8 165 -17 225 -20 108 -7 110 -7 133 18 16 17 53 118
118 323 92 293 104 347 84 383 -5 10 -95 67 -200 127 l-190 108 0 127 0 127
192 114 c152 90 195 120 203 142 8 23 -7 77 -94 339 -57 172 -110 322 -118
335 -25 40 -48 42 -269 16 -115 -13 -212 -23 -216 -22 -4 2 -41 48 -82 102
-73 97 -74 100 -62 130 7 17 45 106 85 198 39 92 71 178 71 192 0 14 -12 39
-27 55 -39 41 -520 380 -550 387 -39 10 -71 -11 -232 -159 l-150 -138 -98 31
c-54 18 -109 35 -122 39 -23 7 -28 22 -72 222 -42 188 -51 217 -74 237 -26 22
-28 22 -363 22 -273 -1 -342 -4 -363 -15z"/>
<path d="M264 3726 c-11 -44 10 -76 49 -76 137 0 588 -78 747 -129 l91 -29 14
35 c8 19 24 48 36 64 12 17 20 32 18 33 -2 2 -58 17 -124 34 -218 55 -387 78
-667 89 l-157 6 -7 -27z"/>
<path d="M2010 3591 c36 -93 53 -207 47 -310 -4 -53 -9 -108 -12 -122 -6 -25
-3 -27 72 -54 157 -55 281 -132 323 -199 30 -49 30 -134 0 -174 -22 -30 -20
-52 4 -52 7 0 33 18 58 40 62 54 90 122 96 230 14 288 -184 540 -528 669 -78
30 -81 29 -60 -28z"/>
<path d="M264 3564 c-4 -14 -2 -39 2 -57 l9 -31 175 -32 c222 -41 453 -93 573
-130 16 -5 18 1 15 72 l-3 78 -50 13 c-154 41 -592 113 -682 113 -27 0 -34 -5
-39 -26z"/>
<path d="M1323 3570 c-149 -76 -95 -302 72 -302 119 0 195 117 147 224 -38 87
-134 121 -219 78z m176 -64 c21 -25 9 -69 -21 -80 -50 -17 -89 42 -52 78 19
20 58 21 73 2z"/>
<path d="M1645 3413 c-13 -87 -61 -155 -140 -196 -56 -30 -164 -30 -221 0 -71
37 -134 126 -134 187 0 27 -35 43 -44 19 -30 -77 46 -257 133 -317 l37 -26
100 15 c54 8 134 15 178 15 92 0 267 -24 327 -45 23 -8 47 -15 54 -15 15 0 43
95 54 184 l7 67 -30 19 c-33 20 -257 122 -292 134 -19 6 -22 2 -29 -41z"/>
<path d="M264 3374 c-6 -25 1 -113 11 -122 10 -10 360 -116 525 -158 127 -33
203 -47 278 -51 56 -3 102 -3 102 1 0 4 -19 30 -41 59 -23 29 -50 71 -61 94
-20 46 -11 42 -173 82 -108 26 -598 121 -629 121 -3 0 -9 -12 -12 -26z"/>
<path d="M270 3141 c-18 -34 -9 -246 12 -266 2 -2 91 3 198 10 107 8 253 14
323 15 l128 0 60 42 59 42 -107 18 c-125 21 -299 62 -500 118 -78 22 -147 40
-152 40 -6 0 -15 -9 -21 -19z"/>
<path d="M2005 3012 c-9 -31 -18 -64 -21 -73 -3 -12 -21 -18 -62 -22 -60 -5
-151 -43 -136 -56 15 -13 90 -31 129 -31 32 0 36 -2 25 -15 -7 -8 -21 -15 -32
-15 -10 0 -16 -4 -13 -10 3 -5 1 -18 -5 -29 -10 -19 -12 -19 -58 -5 -81 27
-79 25 -47 39 l30 13 -28 11 c-47 18 -66 13 -113 -35 -110 -109 -139 -295 -67
-427 30 -54 79 -97 144 -127 56 -25 73 -25 127 1 42 21 44 24 39 55 -4 24 -2
34 7 34 20 0 47 35 36 46 -5 5 -6 22 -2 39 8 28 13 30 67 36 40 5 63 13 72 25
28 39 9 132 -60 291 -41 94 -37 105 36 109 53 2 78 33 85 102 5 54 10 49 -85
82 l-52 19 -16 -57z"/>
<path d="M1410 3039 c-138 -15 -303 -68 -373 -121 -16 -12 -5 -14 81 -15 234
-4 353 -54 381 -160 7 -26 7 -26 34 19 34 59 90 117 146 152 50 32 142 66 178
66 35 0 27 16 -14 28 -109 31 -301 45 -433 31z"/>
<path d="M580 2839 c-202 -11 -292 -24 -307 -45 -17 -23 -17 -105 0 -126 10
-13 48 -17 232 -22 121 -3 263 -10 315 -16 102 -11 333 -48 357 -57 10 -4 8 6
-8 36 -30 57 -23 127 18 185 l30 43 -150 6 c-174 8 -298 7 -487 -4z"/>
<path d="M1250 2772 c-57 -58 -45 -153 25 -186 41 -20 68 -20 105 -1 42 21 60
53 60 103 0 37 -6 50 -34 78 -29 29 -41 34 -81 34 -38 0 -52 -5 -75 -28z m120
-42 c40 -40 13 -100 -45 -100 -40 0 -55 16 -55 56 0 56 61 83 100 44z"/>
<path d="M1290 2685 c0 -10 11 -15 35 -15 24 0 35 5 35 15 0 10 -11 15 -35 15
-24 0 -35 -5 -35 -15z"/>
<path d="M289 2583 c-22 -5 -28 -58 -22 -187 5 -82 9 -106 20 -106 8 0 74 36
148 79 73 44 189 108 257 143 l123 62 -55 7 c-60 8 -445 9 -471 2z"/>
<path d="M1450 2560 c-14 -14 -33 -29 -43 -35 -15 -9 -14 -15 11 -64 28 -56
145 -191 156 -180 4 4 -7 28 -23 54 -36 57 -58 121 -69 195 l-7 55 -25 -25z"/>
<path d="M855 2558 c-45 -25 -328 -207 -447 -286 -105 -70 -131 -92 -148 -126
-31 -66 -44 -190 -31 -302 12 -99 39 -195 56 -201 6 -2 51 63 100 144 192 314
353 548 484 698 42 48 56 72 48 77 -17 11 -39 9 -62 -4z"/>
<path d="M946 2469 c-190 -241 -414 -598 -580 -929 -168 -333 -166 -326 -99
-401 76 -84 202 -126 404 -136 l126 -6 7 149 c25 534 104 962 241 1301 19 48
33 88 32 90 -2 1 -17 6 -34 9 -29 6 -35 1 -97 -77z"/>
<path d="M1112 2451 c-70 -182 -122 -481 -143 -816 -14 -219 -6 -662 11 -679
7 -7 70 -12 158 -14 170 -4 275 15 391 70 92 43 190 143 219 221 35 93 31 106
-40 147 -77 44 -196 154 -252 234 -137 192 -199 418 -199 719 l0 167 -36 9
c-86 21 -77 26 -109 -58z"/>
<path d="M1292 2378 c18 -378 229 -752 501 -888 98 -49 139 -58 182 -37 59 28
122 121 161 237 21 63 26 222 8 240 -9 9 -29 6 -79 -9 -156 -48 -329 -3 -491
127 -116 94 -227 261 -255 387 -20 92 -32 66 -27 -57z"/>
<path d="M1344 2463 c3 -16 28 -71 53 -123 107 -214 345 -378 516 -356 53 7
135 44 156 70 12 14 10 16 -16 16 -45 0 -120 26 -163 55 -30 21 -54 28 -99 30
-89 5 -162 30 -228 78 -76 57 -124 113 -162 193 -19 40 -37 64 -47 64 -12 0
-15 -6 -10 -27z"/>
</g>
</svg>

================
File: backend\controllers\admin.controller.js
================
// backend/controllers/admin.controller.js
import BannedUser from "../models/bannedUser.model.js";
import User from "../models/user.model.js";
import bcrypt from "bcryptjs";
import { sendWelcomeEmail } from "../emails/emailHandlers.js";

export const createUser = async (req, res) => {
    try {
        const { name, username, email, password, role, studentId } = req.body;
        
        // Validate inputs
        if (!name || !username || !email || !password || !role) {
            return res.status(400).json({ message: "Todos los campos son requeridos" });
        }
        
        // For 'egresado' role, validate student ID and email format
        if (role === 'egresado') {
            if (!studentId) {
                return res.status(400).json({ message: "ID de estudiante es requerido para egresados" });
            }
            
            // Validate student ID format
            if (!/^\d{8}$/.test(studentId)) {
                return res.status(400).json({ message: "ID de estudiante inválido. Debe ser un número de 8 dígitos." });
            }
            
            // Validate institutional email format
            const expectedEmail = `L${studentId}@tuxtla.tecnm.mx`;
            if (email.toLowerCase() !== expectedEmail.toLowerCase()) {
                return res.status(400).json({ 
                    message: "El correo institucional debe coincidir con el ID de estudiante (L{ID}@tuxtla.tecnm.mx)." 
                });
            }
            
            // Check if student ID already exists
            const existingStudentId = await User.findOne({ studentId });
            if (existingStudentId) {
                return res.status(400).json({ message: "Este ID de estudiante ya está registrado." });
            }
        }
        
        // Check if role is valid
        if (!['egresado', 'empresario', 'administrador'].includes(role)) {
            return res.status(400).json({ message: "Rol inválido" });
        }
        
        // Check if email exists
        const existingEmail = await User.findOne({ email });
        if (existingEmail) {
            return res.status(400).json({ message: "El correo ya está registrado" });
        }
        
        // Check if username exists
        const existingUsername = await User.findOne({ username });
        if (existingUsername) {
            return res.status(400).json({ message: "El nombre de usuario ya está registrado" });
        }
        
        // Name check has been removed to allow duplicate names
        
        // Hash password
        const salt = await bcrypt.genSalt(10);
        const hashedPassword = await bcrypt.hash(password, salt);
        
        // Create user
        const newUser = new User({
            name,
            email,
            password: hashedPassword,
            username,
            role,
            studentId: role === 'egresado' ? studentId : undefined,
            // Set isFirstLogin to true only for empresario users
            isFirstLogin: role === 'empresario' ? true : undefined
        });
        
        await newUser.save();
        
        // Send welcome email
        const profileUrl = process.env.CLIENT_URL + "/profile/" + newUser.username;
        try {
            await sendWelcomeEmail(newUser.email, newUser.name, profileUrl, newUser.role);
        } catch (emailError) {
            console.error("Error al enviar el correo de bienvenida", emailError);
        }
        
        res.status(201).json({ message: "Usuario creado exitosamente", user: {
            _id: newUser._id,
            name: newUser.name,
            email: newUser.email,
            username: newUser.username,
            role: newUser.role,
            studentId: newUser.studentId,
            isFirstLogin: newUser.isFirstLogin
        }});
        
    } catch (error) {
        console.error("Error creating user:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};





// Add this function to your existing admin.controller.js
export const banUser = async (req, res) => {
  try {
    const { userId } = req.params;
    const { reason } = req.body;
    
    // Find the user to be banned
    const userToBan = await User.findById(userId);
    
    if (!userToBan) {
      return res.status(404).json({ message: "Usuario no encontrado" });
    }
    
    // Create entry in banned collection
    if (userToBan.role === 'egresado' && userToBan.studentId) {
      const bannedUser = new BannedUser({
        studentId: userToBan.studentId,
        email: userToBan.email,
        reason: reason || "No se proporcionó razón",
        bannedBy: req.user._id
      });
      
      await bannedUser.save();
    }
    
    // Delete the user
    await User.findByIdAndDelete(userId);
    
    res.json({ message: "Usuario baneado exitosamente" });
  } catch (error) {
    console.error("Error banning user:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Function to get all banned users
export const getBannedUsers = async (req, res) => {
  try {
    const bannedUsers = await BannedUser.find().populate("bannedBy", "name username");
    res.json(bannedUsers);
  } catch (error) {
    console.error("Error getting banned users:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

// Function to unban a user
export const unbanUser = async (req, res) => {
  try {
    const { studentId } = req.params;
    
    const bannedUser = await BannedUser.findOneAndDelete({ studentId });
    
    if (!bannedUser) {
      return res.status(404).json({ message: "Usuario baneado no encontrado" });
    }
    
    res.json({ message: "Usuario desbaneado exitosamente" });
  } catch (error) {
    console.error("Error unbanning user:", error);
    res.status(500).json({ message: "Error del servidor" });
  }
};

export const getAllUsers = async (req, res) => {
    try {
        const users = await User.find().select("-password");
        res.json(users);
    } catch (error) {
        console.error("Error fetching users:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};

export const updateUserRole = async (req, res) => {
    try {
        const { role } = req.body;
        const userId = req.params.id;
        
        if (!['egresado', 'empresario', 'administrador'].includes(role)) {
            return res.status(400).json({ message: "Rol inválido" });
        }
        
        const updatedUser = await User.findByIdAndUpdate(
            userId,
            { role },
            { new: true }
        ).select("-password");
        
        if (!updatedUser) {
            return res.status(404).json({ message: "Usuario no encontrado" });
        }
        
        res.json(updatedUser);
    } catch (error) {
        console.error("Error updating user role:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};

export const deleteUser = async (req, res) => {
    try {
        const userId = req.params.id;
        
        const deletedUser = await User.findByIdAndDelete(userId);
        
        if (!deletedUser) {
            return res.status(404).json({ message: "Usuario no encontrado" });
        }
        
        res.json({ message: "Usuario eliminado exitosamente" });
    } catch (error) {
        console.error("Error deleting user:", error);
        res.status(500).json({ message: "Error del servidor" });
    }
};

================
File: backend\controllers\announcement.controller.js
================
import cloudinary from "../lib/cloudinary.js";
import Announcement from "../models/announcement.model.js";

// Get all announcements
export const getAnnouncements = async (req, res) => {
  try {
    const announcements = await Announcement.find()
      .populate("author", "name username profilePicture headline")
      .sort({ createdAt: -1 });

    res.status(200).json(announcements);
  } catch (error) {
    console.error("Error in getAnnouncements controller:", error);
    res.status(500).json({ message: "Server error" });
  }
};

// Create a new announcement (admin only)
export const createAnnouncement = async (req, res) => {
  try {
    const { content, image } = req.body;
    let newAnnouncement;

    if (!content) {
      return res.status(400).json({ message: "El contenido es obligatorio" });
    }

    if (image) {
      const imgResult = await cloudinary.uploader.upload(image);
      newAnnouncement = new Announcement({
        author: req.user._id,
        content,
        image: imgResult.secure_url,
      });
    } else {
      newAnnouncement = new Announcement({
        author: req.user._id,
        content,
      });
    }

    await newAnnouncement.save();

    res.status(201).json(newAnnouncement);
  } catch (error) {
    console.error("Error in createAnnouncement controller:", error);
    res.status(500).json({ message: "Server error" });
  }
};

// Delete an announcement (admin only)
export const deleteAnnouncement = async (req, res) => {
  try {
    const announcementId = req.params.id;

    const announcement = await Announcement.findById(announcementId);

    if (!announcement) {
      return res.status(404).json({ message: "Anuncio no encontrado" });
    }

    // Delete the image from cloudinary if it exists
    if (announcement.image) {
      await cloudinary.uploader.destroy(announcement.image.split("/").pop().split(".")[0]);
    }

    await Announcement.findByIdAndDelete(announcementId);

    res.status(200).json({ message: "Anuncio eliminado exitosamente" });
  } catch (error) {
    console.error("Error in deleteAnnouncement controller:", error);
    res.status(500).json({ message: "Server error" });
  }
};

================
File: backend\controllers\auth.controller.js
================
import User from "../models/user.model.js";
import BannedUser from "../models/bannedUser.model.js";
import bcrypt from "bcryptjs";
import jwt from "jsonwebtoken";
import { sendWelcomeEmail } from "../emails/emailHandlers.js";

export const signup = async (req, res) => {
	try {
		const { name, username, email, password, studentId } = req.body;

		if (!name || !username || !email || !password || !studentId) {
			return res.status(400).json({ message: "All fields are required" });
		}
		
		// Check if student ID is banned
		if (studentId) {
			const isBanned = await BannedUser.findOne({ studentId });
			if (isBanned) {
				return res.status(403).json({ message: "Este ID de estudiante ha sido suspendido del sistema" });
			}
		}
		
		// Validate student ID format (assuming it's 8 digits)
        if (!/^\d{8}$/.test(studentId)) {
            return res.status(400).json({ message: "ID de estudiante inválido. Debe ser un número de 8 dígitos." });
        }
        
        // Validate institutional email format
        const expectedEmail = `L${studentId}@tuxtla.tecnm.mx`;
        if (email.toLowerCase() !== expectedEmail.toLowerCase()) {
            return res.status(400).json({ 
                message: "El correo institucional debe coincidir con tu ID de estudiante (L{ID}@tuxtla.tecnm.mx)." 
            });
        }
        
        // Check if student ID already exists
        const existingStudentId = await User.findOne({ studentId });
        if (existingStudentId) {
            return res.status(400).json({ message: "Este ID de estudiante ya está registrado." });
        }
		
		// Default role is 'egresado' - role assignment will be handled by admins
		const role = 'egresado';
		
		// Check if email already exists
		const existingEmail = await User.findOne({ email });
		if (existingEmail) {
			return res.status(400).json({ message: "El correo ya esta registrado" });
		}

		// Check if username already exists
		const existingUsername = await User.findOne({ username });
		if (existingUsername) {
			return res.status(400).json({ message: "El nombre de usuario ya esta registrado" });
		}

		// Removed name check - allowing duplicate names

		if (password.length < 6) {
			return res.status(400).json({ message: "La  contraseña debre tener almenos 6 caracteres" });
		}

		const salt = await bcrypt.genSalt(10);
		const hashedPassword = await bcrypt.hash(password, salt);

		const user = new User({
			name,
			email,
			password: hashedPassword,
			username,
			studentId, // Added studentId field
			role,
		});

		await user.save();

		const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET, { expiresIn: "3d" });

		// Set cookie with more permissive settings for development
		res.cookie("jwt-linkedin", token, {
			httpOnly: true,
			maxAge: 3 * 24 * 60 * 60 * 1000,
			sameSite: "lax", // Changed from strict to lax for development
			secure: process.env.NODE_ENV === "production",
		});

		res.status(201).json({ message: "Usuario registrado correctamente" });

		const profileUrl = process.env.CLIENT_URL + "/profile/" + user.username;

		try {
			await sendWelcomeEmail(user.email, user.name, profileUrl, user.role);
		} catch (emailError) {
			console.error("Error al enviar el correo de bienvenida", emailError);
		}
	} catch (error) {
		console.log("Error in signup: ", error.message);
		res.status(500).json({ message: "Internal server error" });
	}
};

export const login = async (req, res) => {
	try {
		const { username, password } = req.body;

		// Check if user exists
		const user = await User.findOne({ username });
		if (!user) {
			return res.status(400).json({ message: "Datos incorrectos" });
		}

		// Check password
		const isMatch = await bcrypt.compare(password, user.password);
		if (!isMatch) {
			return res.status(400).json({ message: "Datos incorrectos" });
		}

		// Create and send token
		const token = jwt.sign({ userId: user._id }, process.env.JWT_SECRET, { expiresIn: "3d" });
		
		// Set cookie with more permissive settings for development
		res.cookie("jwt-linkedin", token, {
			httpOnly: true,
			maxAge: 3 * 24 * 60 * 60 * 1000,
			sameSite: "lax", // Changed from strict to lax for development
			secure: process.env.NODE_ENV === "production",
		});

		// Create response object with isFirstLogin for empresario users
		const responseData = { message: "Sesion iniciada correctamente" };
		
		// Add firstLogin info for empresario users
		if (user.role === 'empresario') {
			responseData.isFirstLogin = !!user.isFirstLogin;
		}

		res.json(responseData);
	} catch (error) {
		console.error("Error in login controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const logout = (req, res) => {
	res.clearCookie("jwt-linkedin");
	res.json({ message: "Sesion cerrada correctamente" });
};

export const getCurrentUser = async (req, res) => {
	try {
		res.json(req.user);
	} catch (error) {
		console.error("Error in getCurrentUser controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend\controllers\connection.controller.js
================
import { sendConnectionAcceptedEmail } from "../emails/emailHandlers.js";
import ConnectionRequest from "../models/connectionRequest.model.js";
import Notification from "../models/notification.model.js";
import User from "../models/user.model.js";

export const sendConnectionRequest = async (req, res) => {
	try {
		const { userId } = req.params;
		const senderId = req.user._id;

		if (senderId.toString() === userId) {
			return res.status(400).json({ message: "No puedes enviarte una petición de conexión a ti mismo" });
		}

		if (req.user.connections.includes(userId)) {
			return res.status(400).json({ message: "Ya tienes una conexión con esta persona" });
		}

		const existingRequest = await ConnectionRequest.findOne({
			sender: senderId,
			recipient: userId,
			status: "pending",
		});

		if (existingRequest) {
			return res.status(400).json({ message: "Ya enviaste una solicitud de conexión a esta persona" });
		}

		const newRequest = new ConnectionRequest({
			sender: senderId,
			recipient: userId,
		});

		await newRequest.save();

		res.status(201).json({ message: "Petición de contacto aceptada" });
	} catch (error) {
		res.status(500).json({ message: "Server error" });
	}
};

export const acceptConnectionRequest = async (req, res) => {
	try {
		const { requestId } = req.params;
		const userId = req.user._id;

		const request = await ConnectionRequest.findById(requestId)
			.populate("sender", "name email username")
			.populate("recipient", "name username");

		if (!request) {
			return res.status(404).json({ message: "Connection request not found" });
		}

		// check if the req is for the current user
		if (request.recipient._id.toString() !== userId.toString()) {
			return res.status(403).json({ message: "Sin autorización para aceptar esta conexión" });
		}

		if (request.status !== "pending") {
			return res.status(400).json({ message: "Esta petición ya ha sido procesada" });
		}

		request.status = "accepted";
		await request.save();

		// if im your friend then ur also my friend ;)
		await User.findByIdAndUpdate(request.sender._id, { $addToSet: { connections: userId } });
		await User.findByIdAndUpdate(userId, { $addToSet: { connections: request.sender._id } });

		const notification = new Notification({
			recipient: request.sender._id,
			type: "connectionAccepted",
			relatedUser: userId,
		});

		await notification.save();

		res.json({ message: "Conexión aceptada" });

		const senderEmail = request.sender.email;
		const senderName = request.sender.name;
		const recipientName = request.recipient.name;
		const profileUrl = process.env.CLIENT_URL + "/profile/" + request.recipient.username;

		try {
			await sendConnectionAcceptedEmail(senderEmail, senderName, recipientName, profileUrl);
		} catch (error) {
			console.error("Error in sendConnectionAcceptedEmail:", error);
		}
	} catch (error) {
		console.error("Error in acceptConnectionRequest controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const rejectConnectionRequest = async (req, res) => {
	try {
		const { requestId } = req.params;
		const userId = req.user._id;

		const request = await ConnectionRequest.findById(requestId);

		if (request.recipient.toString() !== userId.toString()) {
			return res.status(403).json({ message: "Not authorized to reject this request" });
		}

		if (request.status !== "pending") {
			return res.status(400).json({ message: "This request has already been processed" });
		}

		request.status = "rejected";
		await request.save();

		res.json({ message: "Connection request rejected" });
	} catch (error) {
		console.error("Error in rejectConnectionRequest controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const getConnectionRequests = async (req, res) => {
	try {
		const userId = req.user._id;

		const requests = await ConnectionRequest.find({ recipient: userId, status: "pending" }).populate(
			"sender",
			"name username profilePicture headline connections"
		);

		res.json(requests);
	} catch (error) {
		console.error("Error in getConnectionRequests controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const getUserConnections = async (req, res) => {
	try {
		const userId = req.user._id;

		const user = await User.findById(userId).populate(
			"connections",
			"name username profilePicture headline connections"
		);

		res.json(user.connections);
	} catch (error) {
		console.error("Error en el controlador getUserConnections:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const removeConnection = async (req, res) => {
	try {
		const myId = req.user._id;
		const { userId } = req.params;

		await User.findByIdAndUpdate(myId, { $pull: { connections: userId } });
		await User.findByIdAndUpdate(userId, { $pull: { connections: myId } });

		res.json({ message: "Conexión eliminada" });
	} catch (error) {
		console.error("Error in removeConnection controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const getConnectionStatus = async (req, res) => {
	try {
		const targetUserId = req.params.userId;
		const currentUserId = req.user._id;

		const currentUser = req.user;
		if (currentUser.connections.includes(targetUserId)) {
			return res.json({ status: "connected" });
		}

		const pendingRequest = await ConnectionRequest.findOne({
			$or: [
				{ sender: currentUserId, recipient: targetUserId },
				{ sender: targetUserId, recipient: currentUserId },
			],
			status: "pending",
		});

		if (pendingRequest) {
			if (pendingRequest.sender.toString() === currentUserId.toString()) {
				return res.json({ status: "pending" });
			} else {
				return res.json({ status: "received", requestId: pendingRequest._id });
			}
		}

		// if no connection or pending req found
		res.json({ status: "not_connected" });
	} catch (error) {
		console.error("Error in getConnectionStatus controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend\controllers\notification.controller.js
================
import Notification from "../models/notification.model.js";

export const getUserNotifications = async (req, res) => {
	try {
		const notifications = await Notification.find({ recipient: req.user._id })
			.sort({ createdAt: -1 })
			.populate("relatedUser", "name username profilePicture")
			.populate("relatedPost", "content image");

		res.status(200).json(notifications);
	} catch (error) {
		console.error("Error en el getUserNotifications controller:", error);
		res.status(500).json({ message: "Internal server error" });
	}
};

export const markNotificationAsRead = async (req, res) => {
	const notificationId = req.params.id;
	try {
		const notification = await Notification.findByIdAndUpdate(
			{ _id: notificationId, recipient: req.user._id },
			{ read: true },
			{ new: true }
		);

		res.json(notification);
	} catch (error) {
		console.error("Error en el markNotificationAsRead controller:", error);
		res.status(500).json({ message: "Internal server error" });
	}
};

export const deleteNotification = async (req, res) => {
	const notificationId = req.params.id;

	try {
		await Notification.findOneAndDelete({
			_id: notificationId,
			recipient: req.user._id,
		});

		res.json({ message: "Notificaci√≥n borrada exitosamente" });
	} catch (error) {
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend\controllers\post.controller.js
================
import cloudinary from "../lib/cloudinary.js";
import Post from "../models/post.model.js";
import Notification from "../models/notification.model.js";
import { sendCommentNotificationEmail } from "../emails/emailHandlers.js";

export const getFeedPosts = async (req, res) => {
	try {
		const posts = await Post.find({ author: { $in: [...req.user.connections, req.user._id] } })
			.populate("author", "name username profilePicture headline")
			.populate("comments.user", "name profilePicture")
			.sort({ createdAt: -1 });

		res.status(200).json(posts);
	} catch (error) {
		console.error("Error in getFeedPosts controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const createPost = async (req, res) => {
	try {
		const { content, image } = req.body;
		let newPost;

		if (image) {
			const imgResult = await cloudinary.uploader.upload(image);
			newPost = new Post({
				author: req.user._id,
				content,
				image: imgResult.secure_url,
			});
		} else {
			newPost = new Post({
				author: req.user._id,
				content,
			});
		}

		await newPost.save();

		res.status(201).json(newPost);
	} catch (error) {
		console.error("Error in createPost controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const deletePost = async (req, res) => {
	try {
		const postId = req.params.id;
		const userId = req.user._id;

		const post = await Post.findById(postId);

		if (!post) {
			return res.status(404).json({ message: "Post not found" });
		}

		// check if the current user is the author of the post
		if (post.author.toString() !== userId.toString()) {
			return res.status(403).json({ message: "You are not authorized to delete this post" });
		}

		// delete the image from cloudinary as well!
		if (post.image) {
			await cloudinary.uploader.destroy(post.image.split("/").pop().split(".")[0]);
		}

		await Post.findByIdAndDelete(postId);

		res.status(200).json({ message: "Post borrado" });
	} catch (error) {
		console.log("Error in delete post controller", error.message);
		res.status(500).json({ message: "Server error" });
	}
};

export const getPostById = async (req, res) => {
	try {
		const postId = req.params.id;
		const post = await Post.findById(postId)
			.populate("author", "name username profilePicture headline")
			.populate("comments.user", "name profilePicture username headline");

		res.status(200).json(post);
	} catch (error) {
		console.error("Error in getPostById controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const createComment = async (req, res) => {
	try {
		const postId = req.params.id;
		const { content } = req.body;

		const post = await Post.findByIdAndUpdate(
			postId,
			{
				$push: { comments: { user: req.user._id, content } },
			},
			{ new: true }
		).populate("author", "name email username headline profilePicture");

		// create a notification if the comment owner is not the post owner
		if (post.author._id.toString() !== req.user._id.toString()) {
			const newNotification = new Notification({
				recipient: post.author,
				type: "comment",
				relatedUser: req.user._id,
				relatedPost: postId,
			});

			await newNotification.save();

			try {
				const postUrl = process.env.CLIENT_URL + "/post/" + postId;
				await sendCommentNotificationEmail(
					post.author.email,
					post.author.name,
					req.user.name,
					postUrl,
					content
				);
			} catch (error) {
				console.log("Error in sending comment notification email:", error);
			}
		}

		res.status(200).json(post);
	} catch (error) {
		console.error("Error in createComment controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

export const likePost = async (req, res) => {
	try {
		const postId = req.params.id;
		const post = await Post.findById(postId);
		const userId = req.user._id;

		if (post.likes.includes(userId)) {
			// unlike the post
			post.likes = post.likes.filter((id) => id.toString() !== userId.toString());
		} else {
			// like the post
			post.likes.push(userId);
			// create a notification if the post owner is not the user who liked
			if (post.author.toString() !== userId.toString()) {
				const newNotification = new Notification({
					recipient: post.author,
					type: "like",
					relatedUser: userId,
					relatedPost: postId,
				});

				await newNotification.save();
			}
		}

		await post.save();

		res.status(200).json(post);
	} catch (error) {
		console.error("Error in likePost controller:", error);
		res.status(500).json({ message: "Server error" });
	}
};

================
File: backend\controllers\project.controller.js
================
// backend/controllers/project.controller.js
import cloudinary from "../lib/cloudinary.js";
import ProjectPost from "../models/projectPost.model.js";
import Notification from "../models/notification.model.js";
import mongoose from "mongoose";

// Update expired projects helper
const updateExpiredProjects = async () => {
    const now = new Date();
    await ProjectPost.updateMany(
        { expirationDate: { $lt: now }, status: "active" },
        { status: "expired" }
    );
};

// Get all projects
export const getProjects = async (req, res) => {
    try {
        const { status, interested, created } = req.query;
        const userId = req.user._id;
        
        let query = {};
        
        // Filter by status if provided
        if (status) {
            query.status = status;
        }
        
        // Filter projects the user is interested in
        if (interested === "true") {
            query["interestedUsers.user"] = userId;
        }
        
        // Filter projects created by the user
        if (created === "true") {
            query.author = userId;
        }
        
        const projects = await ProjectPost.find(query)
            .populate("author", "name username profilePicture headline")
            .populate("comments.user", "name profilePicture")
            .populate("interestedUsers.user", "name username profilePicture headline")
            .sort({ createdAt: -1 });
        
        // Convert Mongoose documents to plain objects
        const plainProjects = projects.map(project => project.toObject());
        
        res.status(200).json(plainProjects);
    } catch (error) {
        console.error("Error in getProjects controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Create a new project post
export const createProject = async (req, res) => {
    try {
        const { title, content, image, projectRequirements, projectGoals, expirationDays } = req.body;
        
        if (!title || !content) {
            return res.status(400).json({ message: "Title and content are required" });
        }
        
        // Calculate expiration date
        const expirationDate = new Date();
        expirationDate.setDate(expirationDate.getDate() + (parseInt(expirationDays) || 30));
        
        let newProject;
        
        if (image) {
            const imgResult = await cloudinary.uploader.upload(image);
            newProject = new ProjectPost({
                author: req.user._id,
                title,
                content,
                image: imgResult.secure_url,
                projectRequirements,
                projectGoals,
                expirationDate
            });
        } else {
            newProject = new ProjectPost({
                author: req.user._id,
                title,
                content,
                projectRequirements,
                projectGoals,
                expirationDate
            });
        }
        
        await newProject.save();
        
        // Return as plain object
        res.status(201).json(newProject.toObject());
    } catch (error) {
        console.error("Error in createProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Get project by ID
export const getProjectById = async (req, res) => {
    try {
        const projectId = req.params.id;
        
        if (!mongoose.Types.ObjectId.isValid(projectId)) {
            return res.status(400).json({ message: "Invalid project ID" });
        }
        
        const project = await ProjectPost.findById(projectId)
            .populate("author", "name username profilePicture headline")
            .populate("comments.user", "name profilePicture username headline")
            .populate("interestedUsers.user", "name username profilePicture headline");
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in getProjectById controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Update project
export const updateProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const { title, content, projectRequirements, projectGoals, status, expirationDays } = req.body;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.author.toString() !== req.user._id.toString()) {
            return res.status(403).json({ message: "Not authorized to update this project" });
        }
        
        if (title) project.title = title;
        if (content) project.content = content;
        if (projectRequirements) project.projectRequirements = projectRequirements;
        if (projectGoals) project.projectGoals = projectGoals;
        if (status) project.status = status;
        
        if (expirationDays) {
            const expirationDate = new Date();
            expirationDate.setDate(expirationDate.getDate() + parseInt(expirationDays));
            project.expirationDate = expirationDate;
        }
        
        await project.save();
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in updateProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Delete project
export const deleteProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.author.toString() !== req.user._id.toString()) {
            return res.status(403).json({ message: "Not authorized to delete this project" });
        }
        
        if (project.image) {
            const publicId = project.image.split('/').pop().split('.')[0];
            await cloudinary.uploader.destroy(publicId);
        }
        
        await ProjectPost.findByIdAndDelete(projectId);
        
        res.status(200).json({ message: "Project deleted successfully" });
    } catch (error) {
        console.error("Error in deleteProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Toggle interest in project
export const toggleInterestInProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const userId = req.user._id;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.status === "expired") {
            return res.status(400).json({ message: "Cannot show interest in an expired project" });
        }
        
        const isInterested = project.interestedUsers.some(
            interest => interest.user.toString() === userId.toString()
        );
        
        if (isInterested) {
            project.interestedUsers = project.interestedUsers.filter(
                interest => interest.user.toString() !== userId.toString()
            );
        } else {
            project.interestedUsers.push({ user: userId });
            
            if (project.author.toString() !== userId.toString()) {
                const notification = new Notification({
                    recipient: project.author,
                    type: "projectInterest",
                    relatedUser: userId,
                    relatedProject: projectId
                });
                await notification.save();
            }
        }
        
        await project.save();
        
        res.status(200).json({
            message: isInterested ? "Interest removed" : "Interest added",
            project: project.toObject()
        });
    } catch (error) {
        console.error("Error in toggleInterestInProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Add comment to project
export const addCommentToProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const { content } = req.body;
        
        if (!content) {
            return res.status(400).json({ message: "Comment content is required" });
        }
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.status === "expired") {
            return res.status(400).json({ message: "Cannot comment on an expired project" });
        }
        
        project.comments.push({
            user: req.user._id,
            content
        });
        
        await project.save();
        
        // Create notification for project author
        if (project.author.toString() !== req.user._id.toString()) {
            const notification = new Notification({
                recipient: project.author,
                type: "projectComment",
                relatedUser: req.user._id,
                relatedProject: projectId
            });
            await notification.save();
        }
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in addCommentToProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

// Like project
export const likeProject = async (req, res) => {
    try {
        const projectId = req.params.id;
        const userId = req.user._id;
        
        const project = await ProjectPost.findById(projectId);
        
        if (!project) {
            return res.status(404).json({ message: "Project not found" });
        }
        
        if (project.status === "expired") {
            return res.status(400).json({ message: "Cannot like an expired project" });
        }
        
        const isLiked = project.likes.includes(userId);
        
        if (isLiked) {
            project.likes = project.likes.filter(id => id.toString() !== userId.toString());
        } else {
            project.likes.push(userId);
            
            if (project.author.toString() !== userId.toString()) {
                const notification = new Notification({
                    recipient: project.author,
                    type: "projectLike",
                    relatedUser: userId,
                    relatedProject: projectId
                });
                await notification.save();
            }
        }
        
        await project.save();
        
        // Return as plain object
        res.status(200).json(project.toObject());
    } catch (error) {
        console.error("Error in likeProject controller:", error);
        res.status(500).json({ message: "Server error" });
    }
};

================
File: backend\controllers\user.controller.js
================
import User from "../models/user.model.js";
import cloudinary from "../lib/cloudinary.js";

export const getSuggestedConnections = async (req, res) => {
   try {
       const limit = parseInt(req.query.limit) || 5;
       const currentUser = await User.findById(req.user._id).select("connections");
       const suggestedUser = await User.find({
           _id: {
               $ne: req.user._id,
               $nin: currentUser.connections,
           },
       })
           .select("name username profilePicture headline")
           .limit(limit);
       res.json(suggestedUser);
   } catch (error) {
       console.error("Error in getSuggestedConnections controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

export const getSuggestedConnectionsBig = async (req, res) => {
   try {
       const limit = parseInt(req.query.limit) || 50;
       const currentUser = await User.findById(req.user._id).select("connections");
       const suggestedUser = await User.find({
           _id: {
               $ne: req.user._id,
               $nin: currentUser.connections,
           },
       })
           .select("name username profilePicture headline")
           .limit(limit);
       res.json(suggestedUser);
   } catch (error) {
       console.error("Error in getSuggestedConnections controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

export const getPublicProfile = async (req, res) => {
   try {
       const user = await User.findOne({ username: req.params.username }).select("-password");
       if (!user) {
           return res.status(404).json({ message: "User not found" });
       }
       res.json(user);
   } catch (error) {
       console.error("Error in getPublicProfile controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

export const updateProfile = async (req, res) => {
   try {
       const allowedFields = [
           "name",
           "username",
           "headline",
           "about",
           "location",
           "profilePicture",
           "bannerImg",
           "curriculumImg",
           "skills",
           "experience",
           "education",
           "companyInfo", // Added companyInfo to allowed fields
       ];
       
       const updatedData = {};
       for (const field of allowedFields) {
           if (req.body[field] !== undefined) { // Changed from req.body[field] to handle empty objects
               updatedData[field] = req.body[field];
           }
       }

       console.log("Server - Received update data:", req.body);
       console.log("Server - Processed update data:", updatedData);

       if (req.body.profilePicture) {
           const result = await cloudinary.uploader.upload(req.body.profilePicture);
           updatedData.profilePicture = result.secure_url;
       }

       if (req.body.bannerImg) {
           const result = await cloudinary.uploader.upload(req.body.bannerImg);
           updatedData.bannerImg = result.secure_url;
       }

       if (req.body.curriculumImg) {
           try {
               const base64Data = req.body.curriculumImg.split(';base64,').pop();
               
               const result = await cloudinary.uploader.upload(
                   `data:application/pdf;base64,${base64Data}`,
                   {
                       resource_type: "raw",
                       use_filename: true,
                       unique_filename: true,
                       format: "pdf",
                       public_id: `curriculum_${req.user._id}_${Date.now()}`,
                       tags: ['curriculum'],
                       access_mode: "public"
                   }
               );
               
               updatedData.curriculumImg = `${result.secure_url}?dl=1`;
               console.log('Curriculum URL:', updatedData.curriculumImg);
           } catch (error) {
               console.error('Error uploading curriculum:', error);
               throw error;
           }
       }

       const user = await User.findByIdAndUpdate(
           req.user._id, 
           { $set: updatedData }, 
           { new: true }
       ).select("-password");
       
       res.json(user);
   } catch (error) {
       console.error("Error in updateProfile controller:", error);
       res.status(500).json({ message: "Server error" });
   }
};

// Función para trabahar con los empresarios y su primer login  ↓
export const completeFirstLoginSetup = async (req, res) => {
   try {
       const userId = req.user._id;
       
       // Check if user is empresario
       if (req.user.role !== 'empresario') {
           return res.status(403).json({ message: "Esta acción solo está permitida para usuarios con rol de empresario" });
       }
       
       // Get company info from request
       const { companyInfo } = req.body;
       
       // Update user with companyInfo and set isFirstLogin to false
       const user = await User.findByIdAndUpdate(
           userId, 
           { 
               $set: { 
                   isFirstLogin: false,
                   companyInfo: companyInfo || {}
               } 
           }, 
           { new: true }
       ).select("-password");
       
       if (!user) {
           return res.status(404).json({ message: "Usuario no encontrado" });
       }
       
       res.json({
           message: "Configuración inicial completada exitosamente",
           user
       });
   } catch (error) {
       console.error("Error en completeFirstLoginSetup:", error);
       res.status(500).json({ message: "Error del servidor" });
   }
};

================
File: backend\emails\emailHandlers.js
================
import { mailtrapClient, sender } from "../lib/mailtrap.js";
import {
	createCommentNotificationEmailTemplate,
	createConnectionAcceptedEmailTemplate,
	createWelcomeEmailTemplate,
} from "./emailTemplates.js";

export const sendWelcomeEmail = async (email, name, profileUrl, role = 'egresado') => {
	const recipient = [{ email }];

	try {
		const response = await mailtrapClient.send({
			from: sender,
			to: recipient,
			subject: "Bienvenidos egresados de sistemas ITTG",
			html: createWelcomeEmailTemplate(name, profileUrl, role),
			category: "Bienvenido",
		});

		console.log("Welcome Email sent succesffully", response);
	} catch (error) {
		throw error;
	}
};

export const sendCommentNotificationEmail = async (
	recipientEmail,
	recipientName,
	commenterName,
	postUrl,
	commentContent
) => {
	const recipient = [{ email: recipientEmail }];

	try {
		const response = await mailtrapClient.send({
			from: sender,
			to: recipient,
			subject: "Comentaron tu post",
			html: createCommentNotificationEmailTemplate(recipientName, commenterName, postUrl, commentContent),
			category: "NotificaciÃ³n_comentario",
		});
		console.log("Comment Notification Email sent successfully", response);
	} catch (error) {
		throw error;
	}
};

export const sendConnectionAcceptedEmail = async (senderEmail, senderName, recipientName, profileUrl) => {
	const recipient = [{ email: senderEmail }];

	try {
		const response = await mailtrapClient.send({
			from: sender,
			to: recipient,
			subject: `${recipientName} se conecto contigo`,
			html: createConnectionAcceptedEmailTemplate(senderName, recipientName, profileUrl),
			category: "conexion_aceptada",
		});
	} catch (error) {}
};

================
File: backend\emails\emailTemplates.js
================
export function createWelcomeEmailTemplate(name, profileUrl, role = 'egresado') {
  let roleSpecificText = '';
  let additionalInfo = '';

  if (role === 'empresario') {
    roleSpecificText = "Como empresario, podrá conectarse con egresados, publicar ofertas de trabajo y dar a conocer su empresa.";
    additionalInfo = `
      <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #0077B5;">
        <p style="font-size: 16px; margin: 0; color: #0077B5;"><strong>¡Importante!</strong></p>
        <p style="margin-top: 10px;">La primera vez que inicie sesión, aparecerá un cuestionario para completar la información de su empresa. Esta información se mostrará en su perfil y ayudará a los egresados a conocer mejor su negocio.</p>
      </div>
    `;
  } else if (role === 'administrador') {
    roleSpecificText = "Como administrador, podrá gestionar usuarios y supervisar la plataforma.";
  } else {
    roleSpecificText = "Explore conexiones para su carrera profesional.";
  }
      
  return `
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bienvenidos egresados ittg</title>
  </head>
  <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
    <div style="background: linear-gradient(to right, #0077B5, #00A0DC); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
      <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSzFs7zNiYDWu_iddeOkErqpLlx16wvAxmhQ&s.svg" alt="tec Logo" style="width: 150px; margin-bottom: 20px;border-radius: 10px;">
      <h1 style="color: white; margin: 0; font-size: 28px;">Bienvenido a egresados ittg</h1>
    </div>
    <div style="background-color: #ffffff; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">
      <p style="font-size: 18px; color: #0077B5;"><strong>Hola ${name},</strong></p>
      <p>${roleSpecificText}</p>
      ${additionalInfo}
      <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0;">
        <p style="font-size: 16px; margin: 0;"><strong>Puedes iniciar con:</strong></p>
        <ul style="padding-left: 20px;">
          <li>Editar tu perfil</li>
          <li>Buscar contactos que te interesen</li>
        </ul>
      </div>
      <div style="text-align: center; margin: 30px 0;">
        <a href="${profileUrl}" style="background-color: #0077B5; color: white; padding: 14px 28px; text-decoration: none; border-radius: 30px; font-weight: bold; font-size: 16px; transition: background-color 0.3s;">Edita tu perfil</a>
      </div>
      <p>Puedes contactarnos para cualquier pregunta que necesites.</p>
      <p>Atentamente<br>Departamento de egresados</p>
    </div>
  </body>
  </html>
  `;
}

export const createConnectionAcceptedEmailTemplate = (senderName, recipientName, profileUrl) => `
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Conexión exitosa</title>
</head>
<body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
<div style="background: linear-gradient(to right, #0077B5, #00A0DC); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
  <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSzFs7zNiYDWu_iddeOkErqpLlx16wvAxmhQ&s.jpg" alt="logo_tec" style="width: 150px; margin-bottom: 20px;border-radius: 10px;"/>
  <h1 style="color: white; margin: 0; font-size: 28px;">Alguien se ha conectado contigo</h1>
</div>
<div style="background-color: #ffffff; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">
  <p style="font-size: 18px; color: #0077B5;"><strong>Hola ${senderName},</strong></p>
  <p>El usuario<strong>${recipientName}</strong> acepto tu solicitud de conexión.</p>
  <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0;">
    <p style="font-size: 16px; margin: 0;"><strong>Que sigue</strong></p>
    <ul style="padding-left: 20px;">
      <li>Mira el perfil de ${recipientName}</li>
      <li>Checa sus posts</li>
      <li>Busca intereses comunes</li>
    </ul>
  </div>
  <div style="text-align: center; margin: 30px 0;">
    <a href="${profileUrl}" style="background-color: #0077B5; color: white; padding: 14px 28px; text-decoration: none; border-radius: 30px; font-weight: bold; font-size: 16px; transition: background-color 0.3s;">Puedes ver el perfil de ${recipientName}</a>
  </div>
  <p>Busca más contactos laborales</p>
  <p>Atentamente,<br>Departamento de egresados</p>
</div>
</body>
</html>
`;

export const createCommentNotificationEmailTemplate = (recipientName, commenterName, postUrl, commentContent) => `
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Nuevo comentario en tu post</title>
</head>
<body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
<div style="background: linear-gradient(to right, #0077B5, #00A0DC); padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
  <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSzFs7zNiYDWu_iddeOkErqpLlx16wvAxmhQ&s.jpg" alt="Logo tec" style="width: 150px; margin-bottom: 20px;border-radius: 10px;"/>
  <h1 style="color: white; margin: 0; font-size: 28px;">Nuevo comentario en tu post</h1>
</div>
<div style="background-color: #ffffff; padding: 30px; border-radius: 0 0 10px 10px; box-shadow: 0 4px 10px rgba(0,0,0,0.1);">
  <p style="font-size: 18px; color: #0077B5;"><strong>Hola ${recipientName},</strong></p>
  <p>${commenterName} Comento en tu post:</p>
  <div style="background-color: #f3f6f8; padding: 20px; border-radius: 8px; margin: 20px 0;">
    <p style="font-style: italic; margin: 0;">"${commentContent}"</p>
  </div>
  <div style="text-align: center; margin: 30px 0;">
    <a href=${postUrl} style="background-color: #0077B5; color: white; padding: 14px 28px; text-decoration: none; border-radius: 30px; font-weight: bold; font-size: 16px; transition: background-color 0.3s;">View Comment</a>
  </div>
  <p>Mantente conectado respondiendo a sus comentarios.</p>
  <p>Atentamente.<br>Departamento de egresados</p>
</div>
</body>
</html>
`;

================
File: backend\jobs\projectCleanup.js
================
// backend/jobs/projectCleanup.js
import axios from "axios";
import ProjectPost from "../models/projectPost.model.js";
import cloudinary from "../lib/cloudinary.js";

/**
 * Function to clean up expired projects
 * This should be run on a schedule (e.g., daily)
 */
export const cleanupExpiredProjects = async () => {
    try {
        console.log("Running cleanup job for expired projects...");
        
        // Update the status of any expired projects
        const now = new Date();
        await ProjectPost.updateMany(
            { expirationDate: { $lt: now }, status: { $ne: "expired" } },
            { status: "expired" }
        );
        
        // Calculate threshold for deletion (7 days after expiration)
        const deleteThreshold = new Date();
        deleteThreshold.setDate(deleteThreshold.getDate() - 7);
        
        // Find projects to delete
        const projectsToDelete = await ProjectPost.find({
            status: "expired",
            expirationDate: { $lt: deleteThreshold }
        });
        
        console.log(`Found ${projectsToDelete.length} expired projects to delete.`);
        
        // Delete images from cloudinary
        for (const project of projectsToDelete) {
            if (project.image) {
                try {
                    const publicId = project.image.split('/').pop().split('.')[0];
                    await cloudinary.uploader.destroy(publicId);
                    console.log(`Deleted image for project ${project._id}`);
                } catch (error) {
                    console.error(`Error deleting image for project ${project._id}:`, error);
                }
            }
        }
        
        // Delete the projects from database
        const result = await ProjectPost.deleteMany({
            status: "expired",
            expirationDate: { $lt: deleteThreshold }
        });
        
        console.log(`Successfully deleted ${result.deletedCount} expired projects.`);
        
        return {
            success: true,
            deletedCount: result.deletedCount
        };
    } catch (error) {
        console.error("Error in project cleanup job:", error);
        return {
            success: false,
            error: error.message
        };
    }
};

// If you want to run this as a standalone script
if (process.env.NODE_ENV !== 'test') {
    // This can be called from a cron job or similar scheduled task
    // For example, using node-cron:
    // import cron from 'node-cron';
    // cron.schedule('0 0 * * *', cleanupExpiredProjects); // Run daily at midnight
}

export default cleanupExpiredProjects;

================
File: backend\lib\cloudinary.js
================
import { v2 as cloudinary } from "cloudinary";
import dotenv from "dotenv";

dotenv.config();

cloudinary.config({
	cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
	api_key: process.env.CLOUDINARY_API_KEY,
	api_secret: process.env.CLOUDINARY_API_SECRET,
});

export default cloudinary;

================
File: backend\lib\db.js
================
import mongoose from "mongoose";

export const connectDB = async () => {
	try {
		const conn = await mongoose.connect(process.env.MONGO_URI);
		console.log(`MongoDB connected: ${conn.connection.host}`);
	} catch (error) {
		console.error(`Error connecting to MongoDB: ${error.message}`);
		process.exit(1);
	}
};

================
File: backend\lib\mailtrap.js
================
import { MailtrapClient } from "mailtrap";
import dotenv from "dotenv";

dotenv.config();

const TOKEN = process.env.MAILTRAP_TOKEN;

export const mailtrapClient = new MailtrapClient({
	token: TOKEN,
});

export const sender = {
	email: process.env.EMAIL_FROM,
	name: process.env.EMAIL_FROM_NAME,
};

================
File: backend\middleware\admin.middleware.js
================
// backend/middleware/admin.middleware.js
export const isAdmin = async (req, res, next) => {
    try {
        if (req.user.role !== 'administrador') {
            return res.status(403).json({ message: "Acceso denegado. Solo administradores." });
        }
        next();
    } catch (error) {
        console.log("Error in isAdmin middleware:", error.message);
        res.status(500).json({ message: "Error del servidor" });
    }
};

================
File: backend\middleware\auth.middleware.js
================
import jwt from "jsonwebtoken";
import User from "../models/user.model.js";

export const protectRoute = async (req, res, next) => {
	try {
		const token = req.cookies["jwt-linkedin"];

		if (!token) {
			return res.status(401).json({ message: "Unauthorized - No Token Provided" });
		}

		const decoded = jwt.verify(token, process.env.JWT_SECRET);
		if (!decoded) {
			return res.status(401).json({ message: "Unauthorized - Invalid Token" });
		}

		const user = await User.findById(decoded.userId).select("-password");

		if (!user) {
			return res.status(401).json({ message: "User not found" });
		}

		req.user = user;

		next();
	} catch (error) {
		console.log("Error in protectRoute middleware:", error.message);
		res.status(500).json({ message: "Internal server error" });
	}
};

================
File: backend\models\announcement.model.js
================
import mongoose from "mongoose";

const announcementSchema = new mongoose.Schema(
  {
    author: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: "User", 
      required: true 
    },
    content: { 
      type: String,
      required: true 
    },
    image: { 
      type: String 
    }
  },
  { timestamps: true }
);

const Announcement = mongoose.model("Announcement", announcementSchema);

export default Announcement;

================
File: backend\models\bannedUser.model.js
================
import mongoose from "mongoose";

const bannedUserSchema = new mongoose.Schema(
  {
    studentId: {
      type: String,
      required: true,
      unique: true
    },
    email: {
      type: String,
      required: true
    },
    reason: {
      type: String,
      default: ""
    },
    bannedBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true
    },
    bannedAt: {
      type: Date,
      default: Date.now
    }
  },
  { timestamps: true }
);

const BannedUser = mongoose.model("BannedUser", bannedUserSchema);
export default BannedUser;

================
File: backend\models\connectionRequest.model.js
================
import mongoose from "mongoose";

const connectionRequestSchema = new mongoose.Schema(
	{
		sender: {
			type: mongoose.Schema.Types.ObjectId,
			ref: "User",
			required: true,
		},
		recipient: {
			type: mongoose.Schema.Types.ObjectId,
			ref: "User",
			required: true,
		},
		status: {
			type: String,
			enum: ["pending", "accepted", "rejected"],
			default: "pending",
		},
	},
	{ timestamps: true }
);

const ConnectionRequest = mongoose.model("ConnectionRequest", connectionRequestSchema);

export default ConnectionRequest;

================
File: backend\models\notification.model.js
================
// backend/models/notification.model.js
import mongoose from "mongoose";

const notificationSchema = new mongoose.Schema(
    {
        recipient: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "User",
            required: true,
        },
        type: {
            type: String,
            required: true,
            enum: [
                "like", 
                "comment", 
                "connectionAccepted",
                "projectInterest",   // New type for project interest
                "projectComment",    // New type for project comments
                "projectLike",       // New type for project likes
                "projectExpired"     // New type for expired projects
            ],
        },
        relatedUser: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "User",
        },
        relatedPost: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "Post",
        },
        relatedProject: {           // New field for project-related notifications
            type: mongoose.Schema.Types.ObjectId,
            ref: "ProjectPost",
        },
        read: {
            type: Boolean,
            default: false,
        },
    },
    { timestamps: true }
);

const Notification = mongoose.model("Notification", notificationSchema);

export default Notification;

================
File: backend\models\post.model.js
================
import mongoose from "mongoose";

const postSchema = new mongoose.Schema(
	{
		author: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
		content: { type: String },
		image: { type: String },
		likes: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
		comments: [
			{
				content: { type: String },
				user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
				createdAt: { type: Date, default: Date.now },
			},
		],
	},
	{ timestamps: true }
);

const Post = mongoose.model("Post", postSchema);

export default Post;

================
File: backend\models\projectPost.model.js
================
// backend/models/projectPost.model.js
import mongoose from "mongoose";

const projectPostSchema = new mongoose.Schema(
    {
        author: { 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User", 
            required: true 
        },
        title: { 
            type: String, 
            required: true 
        },
        content: { 
            type: String, 
            required: true 
        },
        image: { 
            type: String 
        },
        likes: [{ 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User" 
        }],
        comments: [
            {
                content: { type: String },
                user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
                createdAt: { type: Date, default: Date.now },
            },
        ],
        interestedUsers: [
            {
                user: { 
                    type: mongoose.Schema.Types.ObjectId, 
                    ref: "User" 
                },
                createdAt: { 
                    type: Date, 
                    default: Date.now 
                },
            },
        ],
        expirationDate: {
            type: Date,
            default: function() {
                const date = new Date();
                date.setDate(date.getDate() + 30);
                return date;
            },
            required: true
        },
        status: {
            type: String,
            enum: ["active", "completed", "expired"],
            default: "active"
        },
        projectRequirements: { 
            type: String 
        },
        projectGoals: { 
            type: String 
        }
    },
    { timestamps: true }
);

// Indexes
projectPostSchema.index({ expirationDate: 1 });
projectPostSchema.index({ status: 1 });
projectPostSchema.index({ author: 1 });

// Virtual field to check if project is expired
projectPostSchema.virtual('isExpired').get(function() {
    return new Date() > this.expirationDate;
});

// Function to update expired projects
const updateExpiredProjects = async () => {
    try {
        await mongoose.model('ProjectPost').updateMany(
            { 
                status: 'active',
                expirationDate: { $lt: new Date() }
            },
            { 
                $set: { status: 'expired' }
            }
        );
    } catch (error) {
        console.error('Error updating expired projects:', error);
    }
};

// Middleware to update expired projects before find operations
projectPostSchema.pre(['find', 'findOne'], async function() {
    // Only update if we're not specifically querying expired projects
    if (!this._conditions.status || this._conditions.status !== 'expired') {
        await updateExpiredProjects();
    }
});

const ProjectPost = mongoose.model("ProjectPost", projectPostSchema);

export default ProjectPost;

================
File: backend\models\user.model.js
================
import mongoose from "mongoose";
const userSchema = new mongoose.Schema(
    {
        name: {
            type: String,
            required: true,
        },
        username: { type: String, required: true, unique: true },
        email: { type: String, required: true, unique: true },
        password: { type: String, required: true },
        studentId: { type: String, unique: true }, // Added field for student ID
        role: {
            type: String,
            enum: ['egresado', 'empresario', 'administrador'],
            default: 'egresado'
        },
        // Esto lo usamos para checar si el empresario se estal loggeando por primera vez y enviarlo a llenar su cuestionario si es el caso 
        isFirstLogin: {
        type: Boolean,
        default: function() {
        // esta en default solo para los empresarios
        return this.role === 'empresario';
    }
},
        profilePicture: {
            type: String,
            default: "",
        },
        bannerImg: {
            type: String,
            default: "",
        },
        curriculumImg: {
            type: String,
            default: "",
        },
        headline: {
            type: String,
            default: "Egresado",
        },
        location: {
            type: String,
            default: "MÃ©xico",
        },
        about: {
            type: String,
            default: "",
        },
        skills: [String],
        experience: [
            {
                title: String,
                company: String,
                startDate: Date,
                endDate: Date,
                description: String,
            },
        ],
        education: [
            {
                school: String,
                fieldOfStudy: String,
                startYear: Number,
                endYear: Number,
            },
        ],
        connections: [
            {
                type: mongoose.Schema.Types.ObjectId,
                ref: "User",
            },
        ],
        // New company fields (only used if role is 'empresario')
        companyInfo: {
            companyName: { type: String, default: "" },
            industry: { type: String, default: "" },
            foundedYear: { type: Number },
            website: { type: String, default: "" },
            employees: { type: String, default: "" }, // Size range like "1-10", "11-50", etc.
            description: { type: String, default: "" },
            logo: { type: String, default: "" },
            location: { type: String, default: "" },
            contactEmail: { type: String, default: "" },
            contactPhone: { type: String, default: "" }
        }
    },
    { timestamps: true }
);

const User = mongoose.model("User", userSchema);
export default User;

================
File: backend\routes\admin.route.js
================
// backend/routes/admin.route.js
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import { isAdmin } from "../middleware/admin.middleware.js";
import { createUser, getAllUsers, updateUserRole, deleteUser } from "../controllers/admin.controller.js";
import { 
  banUser,
  getBannedUsers,
  unbanUser
} from "../controllers/admin.controller.js";




const router = express.Router();

router.post("/users", protectRoute, isAdmin, createUser);
router.get("/users", protectRoute, isAdmin, getAllUsers);
router.put("/users/:id/role", protectRoute, isAdmin, updateUserRole);
router.delete("/users/:id", protectRoute, isAdmin, deleteUser);

// New ban routes
router.post("/users/:userId/ban", protectRoute, isAdmin, banUser);
router.get("/banned-users", protectRoute, isAdmin, getBannedUsers);
router.delete("/banned-users/:studentId", protectRoute, isAdmin, unbanUser);

export default router;

================
File: backend\routes\announcement.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import { isAdmin } from "../middleware/admin.middleware.js";
import {
  getAnnouncements,
  createAnnouncement,
  deleteAnnouncement
} from "../controllers/announcement.controller.js";

const router = express.Router();

// Get all announcements (accessible to students and admins)
router.get("/", protectRoute, getAnnouncements);

// Create a new announcement (admin only)
router.post("/create", protectRoute, isAdmin, createAnnouncement);

// Delete an announcement (admin only)
router.delete("/:id", protectRoute, isAdmin, deleteAnnouncement);

export default router;

================
File: backend\routes\auth.route.js
================
import express from "express";
import { login, logout, signup, getCurrentUser } from "../controllers/auth.controller.js";
import { protectRoute } from "../middleware/auth.middleware.js";

const router = express.Router();

router.post("/signup", signup);
router.post("/login", login);
router.post("/logout", logout);

router.get("/me", protectRoute, getCurrentUser);

export default router;

================
File: backend\routes\connection.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
	acceptConnectionRequest,
	getConnectionRequests,
	getConnectionStatus,
	getUserConnections,
	rejectConnectionRequest,
	removeConnection,
	sendConnectionRequest,
} from "../controllers/connection.controller.js";

const router = express.Router();

router.post("/request/:userId", protectRoute, sendConnectionRequest);
router.put("/accept/:requestId", protectRoute, acceptConnectionRequest);
router.put("/reject/:requestId", protectRoute, rejectConnectionRequest);
// Get all connection requests for the current user
router.get("/requests", protectRoute, getConnectionRequests);
// Get all connections for a user
router.get("/", protectRoute, getUserConnections);
router.delete("/:userId", protectRoute, removeConnection);
router.get("/status/:userId", protectRoute, getConnectionStatus);

export default router;

================
File: backend\routes\notification.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
	deleteNotification,
	getUserNotifications,
	markNotificationAsRead,
} from "../controllers/notification.controller.js";

const router = express.Router();

router.get("/", protectRoute, getUserNotifications);

router.put("/:id/read", protectRoute, markNotificationAsRead);
router.delete("/:id", protectRoute, deleteNotification);

export default router;

================
File: backend\routes\post.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
	createPost,
	getFeedPosts,
	deletePost,
	getPostById,
	createComment,
	likePost,
} from "../controllers/post.controller.js";

const router = express.Router();

router.get("/", protectRoute, getFeedPosts);
router.post("/create", protectRoute, createPost);
router.delete("/delete/:id", protectRoute, deletePost);
router.get("/:id", protectRoute, getPostById);
router.post("/:id/comment", protectRoute, createComment);
router.post("/:id/like", protectRoute, likePost);

export default router;

================
File: backend\routes\project.route.js
================
// backend/routes/project.route.js
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import {
    getProjects,
    createProject,
    getProjectById,
    updateProject,
    deleteProject,
    toggleInterestInProject,
    addCommentToProject,
    likeProject
} from "../controllers/project.controller.js";

const router = express.Router();

// Get all projects (with filtering options)
router.get("/", protectRoute, getProjects);

// Create a new project
router.post("/create", protectRoute, createProject);

// Get a specific project
router.get("/:id", protectRoute, getProjectById);

// Update a project
router.put("/:id", protectRoute, updateProject);

// Delete a project
router.delete("/:id", protectRoute, deleteProject);

// Toggle interest in a project
router.post("/:id/interest", protectRoute, toggleInterestInProject);

// Add a comment to a project
router.post("/:id/comment", protectRoute, addCommentToProject);

// Like a project
router.post("/:id/like", protectRoute, likeProject);

export default router;

================
File: backend\routes\user.route.js
================
import express from "express";
import { protectRoute } from "../middleware/auth.middleware.js";
import { getSuggestedConnections, getPublicProfile, updateProfile,completeFirstLoginSetup } from "../controllers/user.controller.js";

const router = express.Router();

router.get("/suggestions", protectRoute, getSuggestedConnections);
router.get("/:username", protectRoute, getPublicProfile);

router.put("/profile", protectRoute, updateProfile);
router.put("/complete-first-login", protectRoute, completeFirstLoginSetup);

export default router;

================
File: frontend\eslint.config.js
================
import js from "@eslint/js";
import globals from "globals";
import react from "eslint-plugin-react";
import reactHooks from "eslint-plugin-react-hooks";
import reactRefresh from "eslint-plugin-react-refresh";

export default [
	{ ignores: ["dist"] },
	{
		files: ["**/*.{js,jsx}"],
		languageOptions: {
			ecmaVersion: 2020,
			globals: globals.browser,
			parserOptions: {
				ecmaVersion: "latest",
				ecmaFeatures: { jsx: true },
				sourceType: "module",
			},
		},
		settings: { react: { version: "18.3" } },
		plugins: {
			react,
			"react-hooks": reactHooks,
			"react-refresh": reactRefresh,
		},
		rules: {
			...js.configs.recommended.rules,
			...react.configs.recommended.rules,
			...react.configs["jsx-runtime"].rules,
			...reactHooks.configs.recommended.rules,
			"react/jsx-no-target-blank": "off",
			"react-refresh/only-export-components": ["warn", { allowConstantExport: true }],
			"react/prop-types": "off",
		},
	},
];

================
File: frontend\index.html
================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/small-logo.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Egresados ITTG</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

================
File: frontend\package.json
================
{
  "name": "frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tanstack/react-query": "^5.55.0",
    "axios": "^1.7.7",
    "date-fns": "^3.6.0",
    "linkedin-clone": "file:..",
    "lucide-react": "^0.439.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hot-toast": "^2.4.1",
    "react-router-dom": "^6.26.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.0",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.20",
    "daisyui": "^4.12.10",
    "eslint": "^9.9.0",
    "eslint-plugin-react": "^7.35.0",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.9",
    "globals": "^15.9.0",
    "postcss": "^8.4.45",
    "tailwindcss": "^3.4.10",
    "vite": "^5.4.1"
  }
}

================
File: frontend\postcss.config.js
================
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

================
File: frontend\README.md
================
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

================
File: frontend\tailwind.config.js
================
import daisyui from "daisyui";

/** @type {import('tailwindcss').Config} */
export default {
	content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],
	theme: {
		extend: {},
	},
	plugins: [daisyui],
	daisyui: {
		themes: [
			{
				linkedin: {
					primary: "#0A66C2", // LinkedIn Blue
					secondary: "#FFFFFF", // White
					accent: "#7FC15E", // LinkedIn Green (for accents)
					neutral: "#000000", // Black (for text)
					"base-100": "#F3F2EF", // Light Gray (background)
					info: "#5E5E5E", // Dark Gray (for secondary text)
					success: "#057642", // Dark Green (for success messages)
					warning: "#F5C75D", // Yellow (for warnings)
					error: "#CC1016", // Red (for errors)
				},
			},
		],
	},
};

================
File: frontend\vite.config.js
================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
})

================
File: frontend\public\logo.svg
================
<svg xmlns="http://www.w3.org/2000/svg" height="800" width="1200" viewBox="-40.125525 -16.3118 347.75455 97.8708"><path fill="#0a66c2" d="M263.744 61.1094a1.2 1.2 0 001.21-1.269c0-.9-.543-1.33-1.657-1.33h-1.8v4.712h.677v-2.054h.832l.019.025 1.291 2.029h.724l-1.389-2.1zm-.783-.472h-.785v-1.593h.995c.514 0 1.1.084 1.1.757 0 .774-.593.836-1.314.836M0 9.5874h9.993v36.4h18.5v9.222H0zm32.911 14.689h9.6v30.916h-9.6zm4.8-15.37a5.569 5.569 0 11-5.57 5.569 5.569 5.569 0 015.57-5.569m44.958.674h9.6v27.265l10.88-12.583h11.77l-12.6 14.313 12.335 16.63h-12.066l-10.191-15.282h-.126v15.28h-9.6zm-34.835 14.699h9.219v4.225h.131a10.085 10.085 0 019.09-4.994c9.735 0 11.527 6.405 11.527 14.726v16.954h-9.6v-15.031c0-3.588-.066-8.2-5-8.2-4.99 0-5.76 3.907-5.76 7.939v15.288h-9.6z"/><path fill="#0a66c2" d="M135.136 36.1384a5.756 5.756 0 00-5.894-5.89 6.406 6.406 0 00-6.784 5.89zm8.132 13.7a16.909 16.909 0 01-13.128 6.151c-9.6 0-17.286-6.408-17.286-16.331 0-9.923 7.685-16.328 17.286-16.328 8.973 0 14.6 6.4 14.6 16.328v3.01h-22.282a7.171 7.171 0 007.235 6.019 8.193 8.193 0 006.851-3.778zm21.482-18.089c-4.8 0-7.68 3.205-7.68 7.875s2.879 7.878 7.68 7.878 7.687-3.2 7.687-7.878-2.881-7.875-7.687-7.875m16.525 23.437h-8.838v-4.1h-.131a12.071 12.071 0 01-9.544 4.868c-9.224 0-15.3-6.657-15.3-16.071 0-8.646 5.377-16.585 14.216-16.585 3.973 0 7.684 1.087 9.861 4.1h.126V9.5774h9.609zm64.809.018h-9.6v-15.034c0-3.585-.064-8.2-4.993-8.2-5 0-5.765 3.906-5.765 7.939v15.294h-9.6v-30.916h9.216v4.225h.129a10.1 10.1 0 019.093-4.994c9.73 0 11.524 6.4 11.524 14.726zm-40.79-35.143a5.571 5.571 0 115.57-5.572 5.571 5.571 0 01-5.57 5.572m4.8 35.143h-9.61v-30.917h9.61zm40.776-55.2h-55.21a4.728 4.728 0 00-4.781 4.67v55.439a4.731 4.731 0 004.781 4.675h55.21a4.741 4.741 0 004.8-4.675V4.6704a4.738 4.738 0 00-4.8-4.67m12.173 56.411a4.418 4.418 0 10.085 0h-.085m0 8.33a3.874 3.874 0 113.809-3.938v.065a3.791 3.791 0 01-3.708 3.871h-.1"/></svg>

================
File: frontend\public\teclogoazul.svg
================
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
 "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000"
 preserveAspectRatio="xMidYMid meet">

<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"
fill="#000000" stroke="none">
<path d="M759 4935 c-15 -8 -30 -22 -34 -32 -4 -10 -28 -110 -54 -221 l-46
-204 -145 -48 c-80 -27 -160 -54 -178 -61 l-32 -13 0 -267 0 -266 178 -7 c627
-25 1005 -124 1442 -379 84 -49 95 -53 98 -36 7 42 -57 250 -97 315 -26 42
-192 152 -355 234 -208 105 -468 180 -679 197 -43 3 -80 9 -82 13 -7 11 95 28
242 42 273 25 578 -34 836 -163 177 -88 289 -169 438 -318 246 -246 390 -508
459 -836 28 -132 37 -360 20 -503 -11 -96 -62 -327 -74 -340 -3 -3 -33 3 -68
13 -146 41 -278 28 -379 -36 l-46 -29 14 -53 c38 -144 23 -306 -40 -421 -51
-93 -132 -146 -249 -161 -46 -6 -48 -7 -48 -40 0 -53 -34 -147 -74 -208 -83
-125 -219 -212 -415 -265 -84 -22 -116 -26 -256 -26 -141 -1 -166 2 -215 21
-45 17 -81 22 -195 25 -130 4 -147 7 -240 40 -55 19 -126 47 -157 61 l-58 27
0 -104 0 -104 72 -35 c65 -32 187 -75 259 -92 25 -6 27 -15 69 -208 41 -187
47 -204 76 -235 l33 -33 360 3 361 3 25 25 c21 21 32 58 69 233 24 115 47 211
49 214 3 3 58 22 122 44 l117 39 160 -141 c177 -156 200 -167 261 -131 46 26
455 328 490 360 15 14 31 42 37 61 10 36 -2 67 -133 352 l-35 76 59 84 c101
143 76 129 209 114 63 -8 165 -17 225 -20 108 -7 110 -7 133 18 16 17 53 118
118 323 92 293 104 347 84 383 -5 10 -95 67 -200 127 l-190 108 0 127 0 127
192 114 c152 90 195 120 203 142 8 23 -7 77 -94 339 -57 172 -110 322 -118
335 -25 40 -48 42 -269 16 -115 -13 -212 -23 -216 -22 -4 2 -41 48 -82 102
-73 97 -74 100 -62 130 7 17 45 106 85 198 39 92 71 178 71 192 0 14 -12 39
-27 55 -39 41 -520 380 -550 387 -39 10 -71 -11 -232 -159 l-150 -138 -98 31
c-54 18 -109 35 -122 39 -23 7 -28 22 -72 222 -42 188 -51 217 -74 237 -26 22
-28 22 -363 22 -273 -1 -342 -4 -363 -15z"/>
<path d="M264 3726 c-11 -44 10 -76 49 -76 137 0 588 -78 747 -129 l91 -29 14
35 c8 19 24 48 36 64 12 17 20 32 18 33 -2 2 -58 17 -124 34 -218 55 -387 78
-667 89 l-157 6 -7 -27z"/>
<path d="M2010 3591 c36 -93 53 -207 47 -310 -4 -53 -9 -108 -12 -122 -6 -25
-3 -27 72 -54 157 -55 281 -132 323 -199 30 -49 30 -134 0 -174 -22 -30 -20
-52 4 -52 7 0 33 18 58 40 62 54 90 122 96 230 14 288 -184 540 -528 669 -78
30 -81 29 -60 -28z"/>
<path d="M264 3564 c-4 -14 -2 -39 2 -57 l9 -31 175 -32 c222 -41 453 -93 573
-130 16 -5 18 1 15 72 l-3 78 -50 13 c-154 41 -592 113 -682 113 -27 0 -34 -5
-39 -26z"/>
<path d="M1323 3570 c-149 -76 -95 -302 72 -302 119 0 195 117 147 224 -38 87
-134 121 -219 78z m176 -64 c21 -25 9 -69 -21 -80 -50 -17 -89 42 -52 78 19
20 58 21 73 2z"/>
<path d="M1645 3413 c-13 -87 -61 -155 -140 -196 -56 -30 -164 -30 -221 0 -71
37 -134 126 -134 187 0 27 -35 43 -44 19 -30 -77 46 -257 133 -317 l37 -26
100 15 c54 8 134 15 178 15 92 0 267 -24 327 -45 23 -8 47 -15 54 -15 15 0 43
95 54 184 l7 67 -30 19 c-33 20 -257 122 -292 134 -19 6 -22 2 -29 -41z"/>
<path d="M264 3374 c-6 -25 1 -113 11 -122 10 -10 360 -116 525 -158 127 -33
203 -47 278 -51 56 -3 102 -3 102 1 0 4 -19 30 -41 59 -23 29 -50 71 -61 94
-20 46 -11 42 -173 82 -108 26 -598 121 -629 121 -3 0 -9 -12 -12 -26z"/>
<path d="M270 3141 c-18 -34 -9 -246 12 -266 2 -2 91 3 198 10 107 8 253 14
323 15 l128 0 60 42 59 42 -107 18 c-125 21 -299 62 -500 118 -78 22 -147 40
-152 40 -6 0 -15 -9 -21 -19z"/>
<path d="M2005 3012 c-9 -31 -18 -64 -21 -73 -3 -12 -21 -18 -62 -22 -60 -5
-151 -43 -136 -56 15 -13 90 -31 129 -31 32 0 36 -2 25 -15 -7 -8 -21 -15 -32
-15 -10 0 -16 -4 -13 -10 3 -5 1 -18 -5 -29 -10 -19 -12 -19 -58 -5 -81 27
-79 25 -47 39 l30 13 -28 11 c-47 18 -66 13 -113 -35 -110 -109 -139 -295 -67
-427 30 -54 79 -97 144 -127 56 -25 73 -25 127 1 42 21 44 24 39 55 -4 24 -2
34 7 34 20 0 47 35 36 46 -5 5 -6 22 -2 39 8 28 13 30 67 36 40 5 63 13 72 25
28 39 9 132 -60 291 -41 94 -37 105 36 109 53 2 78 33 85 102 5 54 10 49 -85
82 l-52 19 -16 -57z"/>
<path d="M1410 3039 c-138 -15 -303 -68 -373 -121 -16 -12 -5 -14 81 -15 234
-4 353 -54 381 -160 7 -26 7 -26 34 19 34 59 90 117 146 152 50 32 142 66 178
66 35 0 27 16 -14 28 -109 31 -301 45 -433 31z"/>
<path d="M580 2839 c-202 -11 -292 -24 -307 -45 -17 -23 -17 -105 0 -126 10
-13 48 -17 232 -22 121 -3 263 -10 315 -16 102 -11 333 -48 357 -57 10 -4 8 6
-8 36 -30 57 -23 127 18 185 l30 43 -150 6 c-174 8 -298 7 -487 -4z"/>
<path d="M1250 2772 c-57 -58 -45 -153 25 -186 41 -20 68 -20 105 -1 42 21 60
53 60 103 0 37 -6 50 -34 78 -29 29 -41 34 -81 34 -38 0 -52 -5 -75 -28z m120
-42 c40 -40 13 -100 -45 -100 -40 0 -55 16 -55 56 0 56 61 83 100 44z"/>
<path d="M1290 2685 c0 -10 11 -15 35 -15 24 0 35 5 35 15 0 10 -11 15 -35 15
-24 0 -35 -5 -35 -15z"/>
<path d="M289 2583 c-22 -5 -28 -58 -22 -187 5 -82 9 -106 20 -106 8 0 74 36
148 79 73 44 189 108 257 143 l123 62 -55 7 c-60 8 -445 9 -471 2z"/>
<path d="M1450 2560 c-14 -14 -33 -29 -43 -35 -15 -9 -14 -15 11 -64 28 -56
145 -191 156 -180 4 4 -7 28 -23 54 -36 57 -58 121 -69 195 l-7 55 -25 -25z"/>
<path d="M855 2558 c-45 -25 -328 -207 -447 -286 -105 -70 -131 -92 -148 -126
-31 -66 -44 -190 -31 -302 12 -99 39 -195 56 -201 6 -2 51 63 100 144 192 314
353 548 484 698 42 48 56 72 48 77 -17 11 -39 9 -62 -4z"/>
<path d="M946 2469 c-190 -241 -414 -598 -580 -929 -168 -333 -166 -326 -99
-401 76 -84 202 -126 404 -136 l126 -6 7 149 c25 534 104 962 241 1301 19 48
33 88 32 90 -2 1 -17 6 -34 9 -29 6 -35 1 -97 -77z"/>
<path d="M1112 2451 c-70 -182 -122 -481 -143 -816 -14 -219 -6 -662 11 -679
7 -7 70 -12 158 -14 170 -4 275 15 391 70 92 43 190 143 219 221 35 93 31 106
-40 147 -77 44 -196 154 -252 234 -137 192 -199 418 -199 719 l0 167 -36 9
c-86 21 -77 26 -109 -58z"/>
<path d="M1292 2378 c18 -378 229 -752 501 -888 98 -49 139 -58 182 -37 59 28
122 121 161 237 21 63 26 222 8 240 -9 9 -29 6 -79 -9 -156 -48 -329 -3 -491
127 -116 94 -227 261 -255 387 -20 92 -32 66 -27 -57z"/>
<path d="M1344 2463 c3 -16 28 -71 53 -123 107 -214 345 -378 516 -356 53 7
135 44 156 70 12 14 10 16 -16 16 -45 0 -120 26 -163 55 -30 21 -54 28 -99 30
-89 5 -162 30 -228 78 -76 57 -124 113 -162 193 -19 40 -37 64 -47 64 -12 0
-15 -6 -10 -27z"/>
</g>
</svg>

================
File: frontend\public\vite.svg
================
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>

================
File: frontend\src\App.jsx
================
// frontend/src/App.jsx
import React, { useState, useEffect } from 'react';
import { Navigate, Route, Routes } from "react-router-dom";
import Layout from "./components/layout/Layout";

import HomePage from "./pages/HomePage";
import LoginPage from "./pages/auth/LoginPage";
import SignUpPage from "./pages/auth/SignUpPage";
import toast, { Toaster } from "react-hot-toast";
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "./lib/axios";
import NotificationsPage from "./pages/NotificationsPage";
import NetworkPage from "./pages/NetworkPage";
import PostPage from "./pages/PostPage";
import ProfilePage from "./pages/ProfilePage";
import AdminDashboardPage from "./pages/AdminDashboardPage";
import ProjectsPage from "./pages/ProjectsPage";
//import AnnouncementsPage from "./pages/AnnouncementsPage";

// Import the questionnaire modal component
import QuestionnaireModal from "./components/QuestionnaireModal";

function App() {
    // State to control the questionnaire modal visibility
    const [showQuestionnaire, setShowQuestionnaire] = useState(false);
    
    const { data: authUser, isLoading } = useQuery({
        queryKey: ["authUser"],
        queryFn: async () => {
            try {
                const res = await axiosInstance.get("/auth/me");
                return res.data;
            } catch (err) {
                if (err.response && err.response.status === 401) {
                    return null;
                }
                toast.error(err.response?.data?.message || "Something went wrong");
                return null;
            }
        },
        retry: false,
        refetchOnWindowFocus: true,
    });
    
    // Effect to check if the user is an empresario and on their first login
    useEffect(() => {
        if (authUser && authUser.role === 'empresario' && authUser.isFirstLogin) {
            setShowQuestionnaire(true);
        } else {
            setShowQuestionnaire(false);
        }
    }, [authUser]);

    if (isLoading) {
        return (
            <div className="min-h-screen flex items-center justify-center">
                <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
            </div>
        );
    }

    return (
        <Layout>
            {/* Questionnaire Modal for empresario users on first login */}
            {showQuestionnaire && (
                <QuestionnaireModal
                    isOpen={showQuestionnaire}
                    onClose={() => setShowQuestionnaire(false)}
                    user={authUser}
                />
            )}
            
            <Routes>
                <Route 
                    path="/" 
                    element={authUser ? <HomePage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/login" 
                    element={!authUser ? <LoginPage /> : <Navigate to="/" />} 
                />
                <Route 
                    path="/signup" 
                    element={!authUser ? <SignUpPage /> : <Navigate to="/" />} 
                />
                <Route 
                    path="/notifications" 
                    element={authUser ? <NotificationsPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/network" 
                    element={authUser ? <NetworkPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/projects" 
                    element={authUser ? <ProjectsPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/announcements" 
                    element={
                        authUser ? 
                            (authUser.role === 'administrador' || authUser.role === 'egresado') ? 
                                <AnnouncementsPage /> : 
                                <Navigate to="/" /> 
                        : <Navigate to="/login" />
                    } 
                />
                <Route 
                    path="/post/:postId" 
                    element={authUser ? <PostPage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/profile/:username" 
                    element={authUser ? <ProfilePage /> : <Navigate to="/login" />} 
                />
                <Route 
                    path="/admin" 
                    element={
                        authUser && authUser.role === 'administrador' 
                            ? <AdminDashboardPage /> 
                            : <Navigate to="/" />
                    } 
                />
            </Routes>
            <Toaster 
                position="top-center"
                reverseOrder={false}
                toastOptions={{
                    duration: 3000,
                    style: {
                        background: '#363636',
                        color: '#fff',
                    },
                }}
            />
        </Layout>
    );
}

export default App;

================
File: frontend\src\index.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

================
File: frontend\src\main.jsx
================
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import App from "./App.jsx";
import "./index.css";
import { BrowserRouter } from "react-router-dom";

import { QueryClient, QueryClientProvider } from "@tanstack/react-query";

const queryClient = new QueryClient();

createRoot(document.getElementById("root")).render(
	<StrictMode>
		<BrowserRouter>
			<QueryClientProvider client={queryClient}>
				<App />
			</QueryClientProvider>
		</BrowserRouter>
	</StrictMode>
);

================
File: frontend\src\components\AboutSection.jsx
================
import { useState } from "react";

const AboutSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [about, setAbout] = useState(userData.about || "");

	const handleSave = () => {
		setIsEditing(false);
		onSave({ about });
	};
	return (
		<div className='bg-white shadow rounded-lg p-6 mb-6'>
			<h2 className='text-xl font-semibold mb-4'>Acerca de mi</h2>
			{isOwnProfile && (
				<>
					{isEditing ? (
						<>
							<textarea
								value={about}
								onChange={(e) => setAbout(e.target.value)}
								className='w-full p-2 border rounded'
								rows='4'
							/>
							<button
								onClick={handleSave}
								className='mt-2 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark 
								transition duration-300'
							>
								Guardar
							</button>
						</>
					) : (
						<>
							<p>{userData.about}</p>
							<button
								onClick={() => setIsEditing(true)}
								className='mt-2 text-primary hover:text-primary-dark transition duration-300'
							>
								Editar
							</button>
						</>
					)}
				</>
			)}
		</div>
	);
};
export default AboutSection;

================
File: frontend\src\components\CompanyInfoSection.jsx
================
// frontend/src/components/CompanyInfoSection.jsx

import { useState } from "react";
import { Globe, Calendar } from "lucide-react";

// Export this form for reuse in the questionnaire modal
export const CompanyInfoForm = ({ companyInfo, setCompanyInfo, hasWebsite, setHasWebsite }) => {
    return (
        <form className="space-y-4">
            <div>
                <label className="block text-sm font-medium text-gray-700">Nombre de la Empresa</label>
                <input
                    type="text"
                    value={companyInfo.companyName || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, companyName: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Industria</label>
                <input
                    type="text"
                    value={companyInfo.industry || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, industry: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Año de Fundación</label>
                <div className="relative">
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <Calendar className="h-5 w-5 text-gray-400" />
                    </div>
                    <input
                        type="number"
                        min="1900"
                        max={new Date().getFullYear()}
                        value={companyInfo.foundedYear || ''}
                        onChange={(e) => setCompanyInfo({...companyInfo, foundedYear: e.target.value})}
                        className="mt-1 p-2 pl-10 w-full border rounded-md"
                        placeholder={new Date().getFullYear()}
                    />
                </div>
            </div>
            
            <div>
                <div className="flex items-center justify-between mb-2">
                    <label className="block text-sm font-medium text-gray-700">Sitio Web</label>
                    <div className="flex items-center">
                        <span className="text-sm text-gray-500 mr-2">
                            {hasWebsite ? "Activado" : "Desactivado"}
                        </span>
                        <label className="relative inline-flex items-center cursor-pointer">
                            <input 
                                type="checkbox" 
                                checked={hasWebsite}
                                onChange={(e) => setHasWebsite(e.target.checked)}
                                className="sr-only peer" 
                            />
                            <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                        </label>
                    </div>
                </div>
                {hasWebsite && (
                    <div className="relative">
                        <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <Globe className="h-5 w-5 text-gray-400" />
                        </div>
                        <input
                            type="url"
                            value={companyInfo.website || ''}
                            onChange={(e) => setCompanyInfo({...companyInfo, website: e.target.value})}
                            className="mt-1 p-2 pl-10 w-full border rounded-md"
                            placeholder="https://"
                        />
                    </div>
                )}
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Cantidad de Empleados</label>
                <select
                    value={companyInfo.employees || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, employees: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                >
                    <option value="">Seleccionar</option>
                    <option value="1-10">1-10 empleados</option>
                    <option value="11-50">11-50 empleados</option>
                    <option value="51-200">51-200 empleados</option>
                    <option value="201-500">201-500 empleados</option>
                    <option value="501+">501+ empleados</option>
                </select>
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Descripción</label>
                <textarea
                    value={companyInfo.description || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, description: e.target.value})}
                    rows="4"
                    className="mt-1 p-2 w-full border rounded-md"
                ></textarea>
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Ubicación</label>
                <input
                    type="text"
                    value={companyInfo.location || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, location: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Email de Contacto</label>
                <input
                    type="email"
                    value={companyInfo.contactEmail || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactEmail: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
            
            <div>
                <label className="block text-sm font-medium text-gray-700">Teléfono de Contacto</label>
                <input
                    type="tel"
                    value={companyInfo.contactPhone || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactPhone: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                />
            </div>
        </form>
    );
};

const CompanyInfoSection = ({ userData, isOwnProfile, onSave }) => {
    const [isEditing, setIsEditing] = useState(false);
    const [companyInfo, setCompanyInfo] = useState(userData.companyInfo || {});
    const [hasWebsite, setHasWebsite] = useState(!!companyInfo.website);

    const handleSave = () => {
        // If they turned off the website switch, remove the website field
        const dataToSave = { ...companyInfo };
        if (!hasWebsite) {
            dataToSave.website = "";
        }
        
        console.log("CompanyInfoSection - Saving data:", dataToSave);
        onSave({ companyInfo: dataToSave });
        setIsEditing(false);
    };

    // Only render for empresario role
    if (userData.role !== 'empresario') return null;

    return (
        <div className='bg-white shadow rounded-lg p-6 mb-6'>
            <h2 className='text-xl font-semibold mb-4'>Información de la Empresa</h2>
            
            {isEditing ? (
                <>
                    <CompanyInfoForm 
                        companyInfo={companyInfo}
                        setCompanyInfo={setCompanyInfo}
                        hasWebsite={hasWebsite}
                        setHasWebsite={setHasWebsite}
                    />
                    
                    <button
                        type="button"
                        onClick={handleSave}
                        className="mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300"
                    >
                        Guardar Información
                    </button>
                </>
            ) : (
                <div className="space-y-4">
                    {companyInfo && companyInfo.companyName ? (
                        <>
                            <div>
                                <h3 className="font-semibold">Nombre:</h3>
                                <p>{companyInfo.companyName}</p>
                            </div>
                            
                            {companyInfo.industry && (
                                <div>
                                    <h3 className="font-semibold">Industria:</h3>
                                    <p>{companyInfo.industry}</p>
                                </div>
                            )}
                            
                            {companyInfo.foundedYear && (
                                <div>
                                    <h3 className="font-semibold">Fundada en:</h3>
                                    <p>{companyInfo.foundedYear}</p>
                                </div>
                            )}
                            
                            {companyInfo.website && (
                                <div>
                                    <h3 className="font-semibold">Sitio Web:</h3>
                                    <div className="flex items-center">
                                        <Globe size={16} className="mr-2 text-primary" />
                                        <a 
                                            href={companyInfo.website.startsWith('http') ? companyInfo.website : `https://${companyInfo.website}`} 
                                            target="_blank" 
                                            rel="noopener noreferrer" 
                                            className="text-primary hover:underline"
                                        >
                                            {companyInfo.website}
                                        </a>
                                    </div>
                                </div>
                            )}
                            
                            {companyInfo.employees && (
                                <div>
                                    <h3 className="font-semibold">Tamaño:</h3>
                                    <p>{companyInfo.employees} empleados</p>
                                </div>
                            )}
                            
                            {companyInfo.description && (
                                <div>
                                    <h3 className="font-semibold">Acerca de la empresa:</h3>
                                    <p>{companyInfo.description}</p>
                                </div>
                            )}
                            
                            {companyInfo.location && (
                                <div>
                                    <h3 className="font-semibold">Ubicación:</h3>
                                    <p>{companyInfo.location}</p>
                                </div>
                            )}
                            
                            {companyInfo.contactEmail && (
                                <div>
                                    <h3 className="font-semibold">Email de contacto:</h3>
                                    <p>{companyInfo.contactEmail}</p>
                                </div>
                            )}
                            
                            {companyInfo.contactPhone && (
                                <div>
                                    <h3 className="font-semibold">Teléfono de contacto:</h3>
                                    <p>{companyInfo.contactPhone}</p>
                                </div>
                            )}
                        </>
                    ) : (
                        <p className="text-gray-500">No hay información de la empresa disponible.</p>
                    )}
                    
                    {isOwnProfile && (
                        <button
                            onClick={() => setIsEditing(true)}
                            className="mt-4 text-primary hover:text-primary-dark transition duration-300"
                        >
                            Editar información de la empresa
                        </button>
                    )}
                </div>
            )}
        </div>
    );
};

export default CompanyInfoSection;

================
File: frontend\src\components\CompanyQuestionnaire.jsx
================
// frontend/src/components/CompanyQuestionnaire.jsx
import React, { useState } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { axiosInstance } from '../lib/axios';
import { CompanyInfoForm } from './CompanyInfoSection';
import toast from 'react-hot-toast';
import { ArrowRight, ArrowLeft, CheckCircle } from 'lucide-react';

// This component handles the multi-step questionnaire logic and can be used
// either directly or within another component like QuestionnaireModal
const CompanyQuestionnaire = ({ 
  initialData = {}, 
  onComplete, 
  onCancel,
  showSkip = true,
  containerClassName = "" 
}) => {
  const queryClient = useQueryClient();
  const [step, setStep] = useState(1);
  const [companyInfo, setCompanyInfo] = useState(initialData || {});
  const [hasWebsite, setHasWebsite] = useState(!!initialData?.website);
  const [isSubmitting, setIsSubmitting] = useState(false);

  // Check if required fields for the current step are filled
  const canProceed = () => {
    if (step === 1) {
      return !!companyInfo.companyName;
    }
    return true;
  };

  // Mutation to save company info and mark first login as completed
  const { mutate: completeSetup } = useMutation({
    mutationFn: async () => {
      // If website toggle is off, remove website field
      const dataToSubmit = { ...companyInfo };
      if (!hasWebsite) {
        dataToSubmit.website = "";
      }
      
      return axiosInstance.put('/users/complete-first-login', {
        companyInfo: dataToSubmit
      });
    },
    onSuccess: (response) => {
      toast.success('¡Información de la empresa guardada exitosamente!');
      
      // Update user data in the cache
      queryClient.invalidateQueries(['authUser']);
      
      // Reset state and call completion handler
      setIsSubmitting(false);
      if (onComplete) {
        onComplete(response.data);
      }
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al guardar la información');
      setIsSubmitting(false);
    }
  });

  const handleSubmit = () => {
    setIsSubmitting(true);
    completeSetup();
  };

  const handleSkip = () => {
    if (window.confirm('¿Estás seguro de que deseas omitir el cuestionario? La información de tu empresa no estará completa.')) {
      setIsSubmitting(true);
      completeSetup();
    }
  };

  return (
    <div className={containerClassName}>
      {/* Progress indicator */}
      <div className="mb-6 flex justify-between items-center">
        <div className="flex items-center">
          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
            step >= 1 ? 'bg-primary text-white' : 'bg-gray-200'
          }`}>
            1
          </div>
          <div className={`h-1 w-12 ${step >= 2 ? 'bg-primary' : 'bg-gray-200'}`}></div>
          <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
            step >= 2 ? 'bg-primary text-white' : 'bg-gray-200'
          }`}>
            2
          </div>
        </div>
        <div>
          Paso {step} de 2
        </div>
      </div>
      
      {/* Step content */}
      {step === 1 && (
        <div>
          <h3 className="text-lg font-semibold mb-4">Información Básica de la Empresa</h3>
          <p className="text-gray-600 mb-4">
            Como usuario empresario, necesitamos algunos detalles sobre su negocio para mostrar en su perfil.
            Esta información ayudará a los egresados a conocer mejor su empresa.
          </p>
          
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700">Nombre de la Empresa *</label>
              <input
                type="text"
                value={companyInfo.companyName || ''}
                onChange={(e) => setCompanyInfo({...companyInfo, companyName: e.target.value})}
                className="mt-1 p-2 w-full border rounded-md"
                required
              />
              <p className="text-xs text-gray-500 mt-1">Campo obligatorio</p>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700">Industria</label>
              <input
                type="text"
                value={companyInfo.industry || ''}
                onChange={(e) => setCompanyInfo({...companyInfo, industry: e.target.value})}
                className="mt-1 p-2 w-full border rounded-md"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700">Ubicación</label>
              <input
                type="text"
                value={companyInfo.location || ''}
                onChange={(e) => setCompanyInfo({...companyInfo, location: e.target.value})}
                className="mt-1 p-2 w-full border rounded-md"
              />
            </div>
          </div>
        </div>
      )}
      
      {step === 2 && (
        <div>
          <h3 className="text-lg font-semibold mb-4">Detalles Adicionales</h3>
          <p className="text-gray-600 mb-4">
            Proporcione información adicional que ayude a presentar mejor su empresa a los egresados.
          </p>
          
          {/* Reuse the company info form for the rest of the fields */}
          <CompanyInfoForm 
            companyInfo={companyInfo}
            setCompanyInfo={setCompanyInfo}
            hasWebsite={hasWebsite}
            setHasWebsite={setHasWebsite}
          />
        </div>
      )}
      
      {/* Action buttons */}
      <div className="mt-6 pt-4 border-t flex justify-between items-center">
        {step === 1 ? (
          <button
            onClick={showSkip ? handleSkip : onCancel}
            className="text-gray-500 hover:text-gray-700"
            disabled={isSubmitting}
          >
            {showSkip ? "Omitir por ahora" : "Cancelar"}
          </button>
        ) : (
          <button
            onClick={() => setStep(step - 1)}
            className="flex items-center text-gray-700 hover:text-gray-900"
            disabled={isSubmitting}
          >
            <ArrowLeft size={16} className="mr-1" />
            Anterior
          </button>
        )}
        
        {step < 2 ? (
          <button
            onClick={() => setStep(step + 1)}
            disabled={!canProceed() || isSubmitting}
            className={`flex items-center bg-primary text-white px-4 py-2 rounded-md ${
              !canProceed() ? 'opacity-50 cursor-not-allowed' : 'hover:bg-primary-dark'
            }`}
          >
            Siguiente
            <ArrowRight size={16} className="ml-1" />
          </button>
        ) : (
          <button
            onClick={handleSubmit}
            disabled={isSubmitting}
            className="flex items-center bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark"
          >
            {isSubmitting ? (
              <>
                <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Guardando...
              </>
            ) : (
              <>
                <CheckCircle size={16} className="mr-1" />
                Completar Configuración
              </>
            )}
          </button>
        )}
      </div>
    </div>
  );
};

export default CompanyQuestionnaire;

================
File: frontend\src\components\EducationSection.jsx
================
import { School, X } from "lucide-react";
import { useState } from "react";

const EducationSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [educations, setEducations] = useState(userData.education || []);
	const [newEducation, setNewEducation] = useState({
		school: "",
		fieldOfStudy: "",
		startYear: "",
		endYear: "",
	});

	const handleAddEducation = () => {
		if (newEducation.school && newEducation.fieldOfStudy && newEducation.startYear) {
			setEducations([...educations, newEducation]);
			setNewEducation({
				school: "",
				fieldOfStudy: "",
				startYear: "",
				endYear: "",
			});
		}
	};

	const handleDeleteEducation = (id) => {
		setEducations(educations.filter((edu) => edu._id !== id));
	};

	const handleSave = () => {
		onSave({ education: educations });
		setIsEditing(false);
	};

	return (
		<div className='bg-white shadow rounded-lg p-6 mb-6'>
			<h2 className='text-xl font-semibold mb-4'>Educación</h2>
			{educations.map((edu) => (
				<div key={edu._id} className='mb-4 flex justify-between items-start'>
					<div className='flex items-start'>
						<School size={20} className='mr-2 mt-1' />
						<div>
							<h3 className='font-semibold'>{edu.fieldOfStudy}</h3>
							<p className='text-gray-600'>{edu.school}</p>
							<p className='text-gray-500 text-sm'>
								{edu.startYear} - {edu.endYear || "Present"}
							</p>
						</div>
					</div>
					{isEditing && (
						<button onClick={() => handleDeleteEducation(edu._id)} className='text-red-500'>
							<X size={20} />
						</button>
					)}
				</div>
			))}
			{isEditing && (
				<div className='mt-4'>
					<input
						type='text'
						placeholder='Escuela'
						value={newEducation.school}
						onChange={(e) => setNewEducation({ ...newEducation, school: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='text'
						placeholder='Especialidad'
						value={newEducation.fieldOfStudy}
						onChange={(e) => setNewEducation({ ...newEducation, fieldOfStudy: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='number'
						placeholder='Año de ingreso.'
						value={newEducation.startYear}
						onChange={(e) => setNewEducation({ ...newEducation, startYear: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='number'
						placeholder='Fin del año.'
						value={newEducation.endYear}
						onChange={(e) => setNewEducation({ ...newEducation, endYear: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<button
						onClick={handleAddEducation}
						className='bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
					>
						Añadir educación
					</button>
				</div>
			)}

			{isOwnProfile && (
				<>
					{isEditing ? (
						<button
							onClick={handleSave}
							className='mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark
							 transition duration-300'
						>
							Guardar cambios
						</button>
					) : (
						<button
							onClick={() => setIsEditing(true)}
							className='mt-4 text-primary hover:text-primary-dark transition duration-300'
						>
							Editar educación
						</button>
					)}
				</>
			)}
		</div>
	);
};
export default EducationSection;

================
File: frontend\src\components\ExperienceSection.jsx
================
import { Briefcase, X } from "lucide-react";
import { useState } from "react";
import { formatDate } from "../utils/dateUtils";

const ExperienceSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [experiences, setExperiences] = useState(userData.experience || []);
	const [newExperience, setNewExperience] = useState({
		title: "",
		company: "",
		startDate: "",
		endDate: "",
		description: "",
		currentlyWorking: false,
	});

	const handleAddExperience = () => {
		if (newExperience.title && newExperience.company && newExperience.startDate) {
			setExperiences([...experiences, newExperience]);

			setNewExperience({
				title: "",
				company: "",
				startDate: "",
				endDate: "",
				description: "",
				currentlyWorking: false,
			});
		}
	};

	const handleDeleteExperience = (id) => {
		setExperiences(experiences.filter((exp) => exp._id !== id));
	};

	const handleSave = () => {
		onSave({ experience: experiences });
		setIsEditing(false);
	};

	const handleCurrentlyWorkingChange = (e) => {
		setNewExperience({
			...newExperience,
			currentlyWorking: e.target.checked,
			endDate: e.target.checked ? "" : newExperience.endDate,
		});
	};

	return (
		<div className='bg-white shadow rounded-lg p-6 mb-6'>
			<h2 className='text-xl font-semibold mb-4'>Experiencia</h2>
			{experiences.map((exp) => (
				<div key={exp._id} className='mb-4 flex justify-between items-start'>
					<div className='flex items-start'>
						<Briefcase size={20} className='mr-2 mt-1' />
						<div>
							<h3 className='font-semibold'>{exp.title}</h3>
							<p className='text-gray-600'>{exp.company}</p>
							<p className='text-gray-500 text-sm'>
								{formatDate(exp.startDate)} - {exp.endDate ? formatDate(exp.endDate) : "presente"}
							</p>
							<p className='text-gray-700'>{exp.description}</p>
						</div>
					</div>
					{isEditing && (
						<button onClick={() => handleDeleteExperience(exp._id)} className='text-red-500'>
							<X size={20} />
						</button>
					)}
				</div>
			))}

			{isEditing && (
				<div className='mt-4'>
					<input
						type='text'
						placeholder='Titulo'
						value={newExperience.title}
						onChange={(e) => setNewExperience({ ...newExperience, title: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='text'
						placeholder='Compañia'
						value={newExperience.company}
						onChange={(e) => setNewExperience({ ...newExperience, company: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<input
						type='date'
						placeholder='Fecha de inicio'
						value={newExperience.startDate}
						onChange={(e) => setNewExperience({ ...newExperience, startDate: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<div className='flex items-center mb-2'>
						<input
							type='checkbox'
							id='currentlyWorking'
							checked={newExperience.currentlyWorking}
							onChange={handleCurrentlyWorkingChange}
							className='mr-2'
						/>
						<label htmlFor='currentlyWorking'>Sigo trabajando aquí</label>
					</div>
					{!newExperience.currentlyWorking && (
						<input
							type='date'
							placeholder='Fecha de terminación'
							value={newExperience.endDate}
							onChange={(e) => setNewExperience({ ...newExperience, endDate: e.target.value })}
							className='w-full p-2 border rounded mb-2'
						/>
					)}
					<textarea
						placeholder='Descripción'
						value={newExperience.description}
						onChange={(e) => setNewExperience({ ...newExperience, description: e.target.value })}
						className='w-full p-2 border rounded mb-2'
					/>
					<button
						onClick={handleAddExperience}
						className='bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
					>
						Añadir experiencia
					</button>
				</div>
			)}

			{isOwnProfile && (
				<>
					{isEditing ? (
						<button
							onClick={handleSave}
							className='mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
						>
							Guardar cambios
						</button>
					) : (
						<button
							onClick={() => setIsEditing(true)}
							className='mt-4 text-primary hover:text-primary-dark transition duration-300'
						>
							Editar experiencias
						</button>
					)}
				</>
			)}
		</div>
	);
};
export default ExperienceSection;

================
File: frontend\src\components\FriendRequest.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link } from "react-router-dom";

const FriendRequest = ({ request }) => {
	const queryClient = useQueryClient();

	const { mutate: acceptConnectionRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/accept/${requestId}`),
		onSuccess: () => {
			toast.success("solicitud de conexión aceptada");
			queryClient.invalidateQueries({ queryKey: ["connectionRequests"] });
		},
		onError: (error) => {
			toast.error(error.response.data.error);
		},
	});

	const { mutate: rejectConnectionRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/reject/${requestId}`),
		onSuccess: () => {
			toast.success("Solicitud de conexión rechazada");
			queryClient.invalidateQueries({ queryKey: ["connectionRequests"] });
		},
		onError: (error) => {
			toast.error(error.response.data.error);
		},
	});

	return (
		<div className='bg-white rounded-lg shadow p-4 flex items-center justify-between transition-all hover:shadow-md'>
			<div className='flex items-center gap-4'>
				<Link to={`/profile/${request.sender.username}`}>
					<img
						src={request.sender.profilePicture || "/avatar.png"}
						alt={request.name}
						className='w-16 h-16 rounded-full object-cover'
					/>
				</Link>

				<div>
					<Link to={`/profile/${request.sender.username}`} className='font-semibold text-lg'>
						{request.sender.name}
					</Link>
					<p className='text-gray-600'>{request.sender.headline}</p>
				</div>
			</div>

			<div className='space-x-2'>
				<button
					className='bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors'
					onClick={() => acceptConnectionRequest(request._id)}
				>
					Aceptar
				</button>
				<button
					className='bg-gray-200 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-300 transition-colors'
					onClick={() => rejectConnectionRequest(request._id)}
				>
					Rechazar
				</button>
			</div>
		</div>
	);
};
export default FriendRequest;

================
File: frontend\src\components\Post.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link, useParams } from "react-router-dom";
import { Loader, MessageCircle, Send, Share2, ThumbsUp, Trash2, SquareChevronUp, } from "lucide-react";
import { formatDistanceToNow } from "date-fns";

import PostAction from "./PostAction";

const Post = ({ post }) => {
	const { postId } = useParams();

	const { data: authUser } = useQuery({ queryKey: ["authUser"] });
	const [showComments, setShowComments] = useState(false);
	const [newComment, setNewComment] = useState("");
	const [comments, setComments] = useState(post.comments || []);
	const isOwner = authUser._id === post.author._id;
	const isLiked = post.likes.includes(authUser._id);

	const queryClient = useQueryClient();

	const { mutate: deletePost, isPending: isDeletingPost } = useMutation({
		mutationFn: async () => {
			await axiosInstance.delete(`/posts/delete/${post._id}`);
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			toast.success("Post borrado");
		},
		onError: (error) => {
			toast.error(error.message);
		},
	});

	const { mutate: createComment, isPending: isAddingComment } = useMutation({
		mutationFn: async (newComment) => {
			await axiosInstance.post(`/posts/${post._id}/comment`, { content: newComment });
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			toast.success("Comentario añadido");
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Fallo al añadir el comentario");
		},
	});

	const { mutate: likePost, isPending: isLikingPost } = useMutation({
		mutationFn: async () => {
			await axiosInstance.post(`/posts/${post._id}/like`);
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			queryClient.invalidateQueries({ queryKey: ["post", postId] });
		},
	});

	const handleDeletePost = () => {
		if (!window.confirm("¿Estas seguro de que quieres borrar este post?")) return;
		deletePost();
	};

	const handleLikePost = async () => {
		if (isLikingPost) return;
		likePost();
	};

	const handleAddComment = async (e) => {
		e.preventDefault();
		if (newComment.trim()) {
			createComment(newComment);
			setNewComment("");
			setComments([
				...comments,
				{
					content: newComment,
					user: {
						_id: authUser._id,
						name: authUser.name,
						profilePicture: authUser.profilePicture,
					},
					createdAt: new Date(),
				},
			]);
		}
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4'>
			<div className='p-4'>
				<div className='flex items-center justify-between mb-4'>
					<div className='flex items-center'>
						<Link to={`/profile/${post?.author?.username}`}>
							<img
								src={post.author.profilePicture || "/avatar.png"}
								alt={post.author.name}
								className='size-10 rounded-full mr-3'
							/>
						</Link>

						<div>
							<Link to={`/profile/${post?.author?.username}`}>
								<h3 className='font-semibold'>{post.author.name}</h3>
							</Link>
							<p className='text-xs text-info'>{post.author.headline}</p>
							<p className='text-xs text-info'>
								{formatDistanceToNow(new Date(post.createdAt), { addSuffix: true })}
							</p>
						</div>
					</div>
					{isOwner && (
						<button onClick={handleDeletePost} className='text-red-500 hover:text-red-700'>
							{isDeletingPost ? <Loader size={18} className='animate-spin' /> : <Trash2 size={18} />}
						</button>
					)}
				</div>
				<p className='mb-4'>{post.content}</p>
				{post.image && <img src={post.image} alt='Post content' className='rounded-lg w-full mb-4' />}

				<div className='flex justify-between text-info'>
					<PostAction
						icon={<SquareChevronUp size={18} className={isLiked ? "text-blue-500  fill-blue-300" : ""} />}
						text={`Votos positivos (${post.likes.length})`}
						onClick={handleLikePost}
					/>
					<PostAction
						icon={<MessageCircle size={18} />}
						text={`Comentarios (${comments.length})`}
						onClick={() => setShowComments(!showComments)}
					/>
					{/*<PostAction icon={<Share2 size={18} />} text='compartir' /> */}
				</div>
			</div>

			{showComments && (
				<div className='px-4 pb-4'>
					<div className='mb-4 max-h-60 overflow-y-auto'>
						{comments.map((comment) => (
							<div key={comment._id} className='mb-2 bg-base-100 p-2 rounded flex items-start'>
								<img
									src={comment.user.profilePicture || "/avatar.png"}
									alt={comment.user.name}
									className='w-8 h-8 rounded-full mr-2 flex-shrink-0'
								/>
								<div className='flex-grow'>
									<div className='flex items-center mb-1'>
										<span className='font-semibold mr-2'>{comment.user.name}</span>
										<span className='text-xs text-info'>
											{formatDistanceToNow(new Date(comment.createdAt))}
										</span>
									</div>
									<p>{comment.content}</p>
								</div>
							</div>
						))}
					</div>

					<form onSubmit={handleAddComment} className='flex items-center'>
						<input
							type='text'
							value={newComment}
							onChange={(e) => setNewComment(e.target.value)}
							placeholder='Add a comment...'
							className='flex-grow p-2 rounded-l-full bg-base-100 focus:outline-none focus:ring-2 focus:ring-primary'
						/>

						<button
							type='submit'
							className='bg-primary text-white p-2 rounded-r-full hover:bg-primary-dark transition duration-300'
							disabled={isAddingComment}
						>
							{isAddingComment ? <Loader size={18} className='animate-spin' /> : <Send size={18} />}
						</button>
					</form>
				</div>
			)}
		</div>
	);
};
export default Post;

================
File: frontend\src\components\PostAction.jsx
================
export default function PostAction({ icon, text, onClick }) {
	return (
		<button className='flex items-center' onClick={onClick}>
			<span className='mr-1'>{icon}</span>
			<span className='hidden sm:inline'>{text}</span>
		</button>
	);
}

================
File: frontend\src\components\PostCreation.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Image, Loader } from "lucide-react";

const PostCreation = ({ user }) => {
	const [content, setContent] = useState("");
	const [image, setImage] = useState(null);
	const [imagePreview, setImagePreview] = useState(null);

	const queryClient = useQueryClient();

	const { mutate: createPostMutation, isPending } = useMutation({
		mutationFn: async (postData) => {
			const res = await axiosInstance.post("/posts/create", postData, {
				headers: { "Content-Type": "application/json" },
			});
			return res.data;
		},
		onSuccess: () => {
			resetForm();
			toast.success("Post creado");
			queryClient.invalidateQueries({ queryKey: ["posts"] });
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Failed to create post");
		},
	});

	const handlePostCreation = async () => {
		try {
			const postData = { content };
			if (image) postData.image = await readFileAsDataURL(image);

			createPostMutation(postData);
		} catch (error) {
			console.error("Error in handlePostCreation:", error);
		}
	};

	const resetForm = () => {
		setContent("");
		setImage(null);
		setImagePreview(null);
	};

	const handleImageChange = (e) => {
		const file = e.target.files[0];
		setImage(file);
		if (file) {
			readFileAsDataURL(file).then(setImagePreview);
		} else {
			setImagePreview(null);
		}
	};

	const readFileAsDataURL = (file) => {
		return new Promise((resolve, reject) => {
			const reader = new FileReader();
			reader.onloadend = () => resolve(reader.result);
			reader.onerror = reject;
			reader.readAsDataURL(file);
		});
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4 p-4'>
			<div className='flex space-x-3'>
				<img src={user.profilePicture || "/avatar.png"} alt={user.name} className='size-12 rounded-full' />
				<textarea
					placeholder="Escribe tu post aquÃ­."
					className='w-full p-3 rounded-lg bg-base-100 hover:bg-base-200 focus:bg-base-200 focus:outline-none resize-none transition-colors duration-200 min-h-[100px]'
					value={content}
					onChange={(e) => setContent(e.target.value)}
				/>
			</div>

			{imagePreview && (
				<div className='mt-4'>
					<img src={imagePreview} alt='Selected' className='w-full h-auto rounded-lg' />
				</div>
			)}

			<div className='flex justify-between items-center mt-4'>
				<div className='flex space-x-4'>
					<label className='flex items-center text-info hover:text-info-dark transition-colors duration-200 cursor-pointer'>
						<Image size={20} className='mr-2' />
						<span>Aregar imagen</span>
						<input type='file' accept='image/*' className='hidden' onChange={handleImageChange} />
					</label>
				</div>

				<button
					className='bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200'
					onClick={handlePostCreation}
					disabled={isPending}
				>
					{isPending ? <Loader className='size-5 animate-spin' /> : "Publicar"}
				</button>
			</div>
		</div>
	);
};


export default PostCreation;

================
File: frontend\src\components\PostPefil.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Image, Loader } from "lucide-react";

const PostPerfil = ({ user }) => {
	const [content, setContent] = useState("");
	const [image, setImage] = useState(null);
	const [imagePreview, setImagePreview] = useState(null);

	const queryClient = useQueryClient();

	const { mutate: createPostMutation, isPending } = useMutation({
		mutationFn: async (postData) => {
			const res = await axiosInstance.post("/posts/create", postData, {
				headers: { "Content-Type": "application/json" },
			});
			return res.data;
		},
		onSuccess: () => {
			resetForm();
			toast.success("Post creado");
			queryClient.invalidateQueries({ queryKey: ["posts"] });
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Error al crear el post");
		},
	});

	const handlePostCreation = async () => {
		try {
			const postData = { content };
			if (image) postData.image = await readFileAsDataURL(image);

			createPostMutation(postData);
		} catch (error) {
			console.error("Error in handlePostCreation:", error);
		}
	};

	const resetForm = () => {
		setContent("");
		setImage(null);
		setImagePreview(null);
	};

	const handleImageChange = (e) => {
		const file = e.target.files[0];
		setImage(file);
		if (file) {
			readFileAsDataURL(file).then(setImagePreview);
		} else {
			setImagePreview(null);
		}
	};

	const readFileAsDataURL = (file) => {
		return new Promise((resolve, reject) => {
			const reader = new FileReader();
			reader.onloadend = () => resolve(reader.result);
			reader.onerror = reject;
			reader.readAsDataURL(file);
		});
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4 p-4'>
			<div className='flex space-x-3'>
				<img src={user.profilePicture || "/avatar.png"} alt={user.name} className='size-12 rounded-full' />
				<textarea
					placeholder="Escribe tu post aquÃ­."
					className='w-full p-3 rounded-lg bg-base-100 hover:bg-base-200 focus:bg-base-200 focus:outline-none resize-none transition-colors duration-200 min-h-[100px]'
					value={content}
					onChange={(e) => setContent(e.target.value)}
				/>
			</div>

			{imagePreview && (
				<div className='mt-4'>
					<img src={imagePreview} alt='Selected' className='w-full h-auto rounded-lg' />
				</div>
			)}

			<div className='flex justify-between items-center mt-4'>
				<div className='flex space-x-4'>
					<label className='flex items-center text-info hover:text-info-dark transition-colors duration-200 cursor-pointer'>
						<Image size={20} className='mr-2' />
						<span>Aregar imagen</span>
						<input type='file' accept='image/*' className='hidden' onChange={handleImageChange} />
					</label>
				</div>

				<button
					className='bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200'
					onClick={handlePostCreation}
					disabled={isPending}
				>
					{isPending ? <Loader className='size-5 animate-spin' /> : "Publicar"}
				</button>
			</div>
		</div>
	);
};


export default PostPerfil;

================
File: frontend\src\components\PostPerfil.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link, useParams } from "react-router-dom";
import { Loader, MessageCircle, Send, Share2, ThumbsUp, Trash2, SquareChevronUp, } from "lucide-react";
import { formatDistanceToNow } from "date-fns";

import PostAction from "./PostAction";

const Post = ({ post }) => {
	const { postId } = useParams();

	const { data: authUser } = useQuery({ queryKey: ["authUser"] });
	const [showComments, setShowComments] = useState(false);
	const [newComment, setNewComment] = useState("");
	const [comments, setComments] = useState(post.comments || []);
	const isOwner = authUser._id === post.author._id;
	const isLiked = post.likes.includes(authUser._id);

	const queryClient = useQueryClient();

	const { mutate: deletePost, isPending: isDeletingPost } = useMutation({
		mutationFn: async () => {
			await axiosInstance.delete(`/posts/delete/${post._id}`);
		},
		onSuccess: () => {
			queryClient.invalidateQueries({ queryKey: ["posts"] });
			toast.success("Post borrado");
		},
		onError: (error) => {
			toast.error(error.message);
		},
	});

	const handleDeletePost = () => {
		if (!window.confirm("Â¿Estas seguro de que quieres borrar este post?")) return;
		deletePost();
	};

	return (
		<div className='bg-secondary rounded-lg shadow mb-4'>
			<div className='p-4'>
				<div className='flex items-center justify-between mb-4'>
					<div className='flex items-center'>
						<Link to={`/profile/${post?.author?.username}`}>
							<img
								src={post.author.profilePicture || "/avatar.png"}
								alt={post.author.name}
								className='size-10 rounded-full mr-3'
							/>
						</Link>

						<div>
							<Link to={`/profile/${post?.author?.username}`}>
								<h3 className='font-semibold'>{post.author.name}</h3>
							</Link>
							<p className='text-xs text-info'>{post.author.headline}</p>
							<p className='text-xs text-info'>
								{formatDistanceToNow(new Date(post.createdAt), { addSuffix: true })}
							</p>
						</div>
					</div>
					{isOwner && (
						<button onClick={handleDeletePost} className='text-red-500 hover:text-red-700'>
							{isDeletingPost ? <Loader size={18} className='animate-spin' /> : <Trash2 size={18} />}
						</button>
					)}
				</div>
				<p className='mb-4'>{post.content}</p>
				{post.image && <img src={post.image} alt='Post content' className='rounded-lg w-full mb-4' />}

				<div className='flex justify-between text-info'>
					<PostAction
						icon={<SquareChevronUp size={18} className={isLiked ? "text-blue-500  fill-blue-300" : ""} />}
						text={`Votos positivos (${post.likes.length})`}
						onClick={handleLikePost}
					/>
					<PostAction
						icon={<MessageCircle size={18} />}
						text={`Comentarios (${comments.length})`}
						onClick={() => setShowComments(!showComments)}
					/>
					{/*<PostAction icon={<Share2 size={18} />} text='compartir' /> */}
				</div>
			</div>

			
		</div>
	);
};
export default Post;

================
File: frontend\src\components\ProfileHeader.jsx
================
// frontend/src/components/ProfileHeader.jsx
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { useMemo, useState } from "react";
import { axiosInstance } from "../lib/axios";
import { toast } from "react-hot-toast";
import { Camera, Clock, MapPin, UserCheck, UserPlus, X, FileText } from "lucide-react";

const ProfileHeader = ({ userData, onSave, isOwnProfile }) => {
 const [isEditing, setIsEditing] = useState(false);
 const [editedData, setEditedData] = useState({});
 const queryClient = useQueryClient();

 const { data: authUser } = useQuery({ queryKey: ["authUser"] });

 const { data: connectionStatus, refetch: refetchConnectionStatus } = useQuery({
   queryKey: ["connectionStatus", userData._id],
   queryFn: () => axiosInstance.get(`/connections/status/${userData._id}`),
   enabled: !isOwnProfile,
 });

 const isConnected = userData.connections.some((connection) => connection === authUser._id);

 const { mutate: sendConnectionRequest } = useMutation({
   mutationFn: (userId) => axiosInstance.post(`/connections/request/${userId}`),
   onSuccess: () => {
     toast.success("Connection request sent");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const { mutate: acceptRequest } = useMutation({
   mutationFn: (requestId) => axiosInstance.put(`/connections/accept/${requestId}`),
   onSuccess: () => {
     toast.success("Connection request accepted");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const { mutate: rejectRequest } = useMutation({
   mutationFn: (requestId) => axiosInstance.put(`/connections/reject/${requestId}`),
   onSuccess: () => {
     toast.success("Connection request rejected");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const { mutate: removeConnection } = useMutation({
   mutationFn: (userId) => axiosInstance.delete(`/connections/${userId}`),
   onSuccess: () => {
     toast.success("Connection removed");
     refetchConnectionStatus();
     queryClient.invalidateQueries(["connectionRequests"]);
   },
   onError: (error) => {
     toast.error(error.response?.data?.message || "An error occurred");
   },
 });

 const getConnectionStatus = useMemo(() => {
   if (isConnected) return "connected";
   if (!isConnected) return "not_connected";
   return connectionStatus?.data?.status;
 }, [isConnected, connectionStatus]);

 const renderConnectionButton = () => {
   const baseClass = "text-white py-2 px-4 rounded-full transition duration-300 flex items-center justify-center";
   switch (getConnectionStatus) {
     case "connected":
       return (
         <div className='flex gap-2 justify-center'>
           <div className={`${baseClass} bg-green-500 hover:bg-green-600`}>
             <UserCheck size={20} className='mr-2' />
             Conectado
           </div>
           <button
             className={`${baseClass} bg-red-500 hover:bg-red-600 text-sm`}
             onClick={() => removeConnection(userData._id)}
           >
             <X size={20} className='mr-2' />
             Cancelar conexión
           </button>
         </div>
       );

     case "pending":
       return (
         <button className={`${baseClass} bg-yellow-500 hover:bg-yellow-600`}>
           <Clock size={20} className='mr-2' />
           Pendiente
         </button>
       );

     case "received":
       return (
         <div className='flex gap-2 justify-center'>
           <button
             onClick={() => acceptRequest(connectionStatus.data.requestId)}
             className={`${baseClass} bg-green-500 hover:bg-green-600`}
           >
             Aceptar
           </button>
           <button
             onClick={() => rejectRequest(connectionStatus.data.requestId)}
             className={`${baseClass} bg-red-500 hover:bg-red-600`}
           >
             Rechazar
           </button>
         </div>
       );
     default:
       return (
         <button
           onClick={() => sendConnectionRequest(userData._id)}
           className='bg-primary hover:bg-primary-dark text-white py-2 px-4 rounded-full transition duration-300 flex items-center justify-center'
         >
           <UserPlus size={20} className='mr-2' />
           Conectar
         </button>
       );
   }
 };

 const handleFileChange = (event) => {
   const file = event.target.files[0];
   if (file) {
     const reader = new FileReader();
     reader.onloadend = () => {
       const fieldName = event.target.name;
       
       if (fieldName === 'curriculumImg' && file.type !== 'application/pdf') {
         toast.error('Por favor sube un archivo PDF');
         return;
       }
       
       setEditedData(prev => ({ ...prev, [fieldName]: reader.result }));
     };
     reader.readAsDataURL(file);
   }
 };

 const handleSave = () => {
   console.log('Saving data:', editedData);
   onSave(editedData);
   setIsEditing(false);
 };

 // Get role badge styling
 const getRoleBadgeClasses = () => {
   switch(userData.role) {
     case 'empresario':
       return 'bg-green-100 text-green-800';
     case 'administrador':
       return 'bg-purple-100 text-purple-800';
     default:
       return 'bg-blue-100 text-blue-800';
   }
 };

 // Get role display name
 const getRoleDisplayName = () => {
   switch(userData.role) {
     case 'empresario':
       return 'Empresario';
     case 'administrador':
       return 'Administrador';
     default:
       return 'Egresado';
   }
 };

 return (
   <div className="bg-white shadow rounded-lg mb-6">
     <div
       className="relative h-48 rounded-t-lg bg-cover bg-center"
       style={{
         backgroundImage: `url('${editedData.bannerImg || userData.bannerImg || "/banner.png"}')`,
       }}
     >
       {isEditing && (
         <label className="absolute top-2 right-2 bg-white p-2 rounded-full shadow cursor-pointer">
           <Camera size={20} />
           <input
             type="file"
             className="hidden"
             name="bannerImg"
             onChange={handleFileChange}
             accept="image/*"
           />
         </label>
       )}
     </div>

     <div className="p-4">
       <div className="relative -mt-20 mb-4">
         <div className="relative">
           <img
             className="w-32 h-32 rounded-full mx-auto object-cover"
             src={editedData.profilePicture || userData.profilePicture || "/avatar.png"}
             alt={userData.name}
           />
           {isEditing && (
             <label className="absolute bottom-0 right-1/2 transform translate-x-16 bg-white p-2 rounded-full shadow cursor-pointer">
               <Camera size={20} />
               <input
                 type="file"
                 className="hidden"
                 name="profilePicture"
                 onChange={handleFileChange}
                 accept="image/*"
               />
             </label>
           )}
         </div>
       </div>

       <div className="text-center mb-4">
         {isEditing ? (
           <input
             type="text"
             value={editedData.name ?? userData.name}
             onChange={(e) => setEditedData({ ...editedData, name: e.target.value })}
             className="text-2xl font-bold mb-2 text-center w-full"
           />
         ) : (
           <h1 className="text-2xl font-bold mb-2">{userData.name}</h1>
         )}

         {/* Role Badge */}
         <div className="mt-1 mb-2">
           <span className={`inline-block px-3 py-1 text-xs rounded-full ${getRoleBadgeClasses()}`}>
             {getRoleDisplayName()}
           </span>
         </div>

         {isEditing ? (
           <input
             type="text"
             value={editedData.headline ?? userData.headline}
             onChange={(e) => setEditedData({ ...editedData, headline: e.target.value })}
             className="text-gray-600 text-center w-full"
           />
         ) : (
           <p className="text-gray-600">
             {userData.role === 'empresario' && userData.companyInfo?.companyName
               ? `${userData.companyInfo.companyName} · ${userData.headline}`
               : userData.headline}
           </p>
         )}

         <div className="flex justify-center items-center mt-2">
           <MapPin size={16} className="text-gray-500 mr-1" />
           {isEditing ? (
             <input
               type="text"
               value={editedData.location ?? userData.location}
               onChange={(e) => setEditedData({ ...editedData, location: e.target.value })}
               className="text-gray-600 text-center"
             />
           ) : (
             <span className="text-gray-600">{userData.location}</span>
           )}
         </div>
       </div>

       {isOwnProfile ? (
         isEditing ? (
           <button
             className="w-full bg-primary text-white py-2 px-4 rounded-full hover:bg-primary-dark transition duration-300"
             onClick={handleSave}
           >
             Guardar cambios
           </button>
         ) : (
           <button
             onClick={() => setIsEditing(true)}
             className="w-full bg-primary text-white py-2 px-4 rounded-full hover:bg-primary-dark transition duration-300"
           >
             Editar perfil
           </button>
         )
       ) : (
         <div className="flex justify-center">{renderConnectionButton()}</div>
       )}
     </div>

     <div className="p-4 border-t">
       <h2 className="text-xl font-semibold mb-4 text-center">Curriculum</h2>
       <div className="max-w-md mx-auto">
         <div className="relative w-full h-32 rounded-lg border-2 border-gray-200 flex items-center justify-center bg-gray-50">
           {(editedData.curriculumImg || userData.curriculumImg) ? (
             <div className="text-center">
               <FileText size={32} className="mx-auto mb-2 text-gray-600" />
               <a 
                 href={editedData.curriculumImg || userData.curriculumImg}
                 target="_blank" 
                 rel="noopener noreferrer"
                 className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-full inline-flex items-center gap-2 transition-colors duration-200"
               >
                 <span>Ver Curriculum</span>
                 <FileText size={16} />
               </a>
             </div>
           ) : (
             <div className="text-center text-gray-500">
               <FileText size={32} className="mx-auto mb-2" />
               <p className="text-sm">{isEditing ? "Haz clic para subir PDF" : "No hay curriculum"}</p>
             </div>
           )}
           
           {isEditing && (
             <label className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 opacity-0 hover:opacity-100 transition-opacity duration-300 cursor-pointer rounded-lg">
               <div className="bg-white p-2 rounded-full shadow">
                 <FileText size={20} />
               </div>
               <input
                 type="file"
                 className="hidden"
                 name="curriculumImg"
                 onChange={handleFileChange}
                 accept="application/pdf"
               />
             </label>
           )}
         </div>
         {isEditing && (
           <p className="text-center text-xs text-gray-500 mt-1">
             Solo archivos PDF
           </p>
         )}
       </div>
     </div>
   </div>
 );
};

export default ProfileHeader;

================
File: frontend\src\components\ProjectCreation.jsx
================
// frontend/src/components/ProjectCreation.jsx
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Calendar, Image, Loader } from "lucide-react";

const ProjectCreation = ({ user, onComplete }) => {
    const [projectData, setProjectData] = useState({
        title: "",
        content: "",
        image: null,
        projectRequirements: "",
        projectGoals: "",
        expirationDays: "30" // Default to 30 days
    });
    const [imagePreview, setImagePreview] = useState(null);

    const queryClient = useQueryClient();

    const { mutate: createProjectMutation, isPending } = useMutation({
        mutationFn: async (data) => {
            const res = await axiosInstance.post("/projects/create", data, {
                headers: { "Content-Type": "application/json" },
            });
            return res.data;
        },
        onSuccess: () => {
            resetForm();
            toast.success("Proyecto creado exitosamente");
            queryClient.invalidateQueries({ queryKey: ["projects"] });
            if (onComplete) onComplete();
        },
        onError: (err) => {
            toast.error(err.response?.data?.message || "Error al crear el proyecto");
        },
    });

    const handleProjectCreation = async () => {
        try {
            if (!projectData.title || !projectData.content) {
                return toast.error("El título y la descripción son obligatorios");
            }

            const data = { ...projectData };
            
            if (projectData.image) {
                data.image = await readFileAsDataURL(projectData.image);
            }

            createProjectMutation(data);
        } catch (error) {
            console.error("Error in handleProjectCreation:", error);
            toast.error("Error al crear el proyecto");
        }
    };

    const resetForm = () => {
        setProjectData({
            title: "",
            content: "",
            image: null,
            projectRequirements: "",
            projectGoals: "",
            expirationDays: "30"
        });
        setImagePreview(null);
    };

    const handleImageChange = (e) => {
        const file = e.target.files[0];
        setProjectData({ ...projectData, image: file });
        
        if (file) {
            readFileAsDataURL(file).then(setImagePreview);
        } else {
            setImagePreview(null);
        }
    };

    const readFileAsDataURL = (file) => {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.onloadend = () => resolve(reader.result);
            reader.onerror = reject;
            reader.readAsDataURL(file);
        });
    };

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setProjectData({ ...projectData, [name]: value });
    };

    return (
        <div className="bg-white rounded-lg shadow p-6 border-2 border-primary">
            <h2 className="text-xl font-bold mb-4">Crear Nuevo Proyecto</h2>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Título del Proyecto*</label>
                <input
                    type="text"
                    name="title"
                    value={projectData.title}
                    onChange={handleInputChange}
                    placeholder="Escribe un título llamativo para tu proyecto"
                    className="w-full p-3 border rounded-lg"
                    required
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Descripción*</label>
                <textarea
                    name="content"
                    value={projectData.content}
                    onChange={handleInputChange}
                    placeholder="Describe tu proyecto, sus objetivos y lo que buscas"
                    className="w-full p-3 border rounded-lg min-h-[120px]"
                    required
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Requisitos</label>
                <textarea
                    name="projectRequirements"
                    value={projectData.projectRequirements}
                    onChange={handleInputChange}
                    placeholder="Detalla los requisitos o habilidades necesarias para participar"
                    className="w-full p-3 border rounded-lg min-h-[80px]"
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Metas</label>
                <textarea
                    name="projectGoals"
                    value={projectData.projectGoals}
                    onChange={handleInputChange}
                    placeholder="¿Cuáles son las metas a corto y largo plazo del proyecto?"
                    className="w-full p-3 border rounded-lg min-h-[80px]"
                />
            </div>
            
            <div className="mb-4">
                <label className="block text-sm font-medium mb-1">Tiempo de Expiración</label>
                <div className="flex items-center">
                    <Calendar size={20} className="mr-2 text-gray-500" />
                    <select
                        name="expirationDays"
                        value={projectData.expirationDays}
                        onChange={handleInputChange}
                        className="p-2 border rounded-lg"
                    >
                        <option value="7">7 días</option>
                        <option value="14">14 días</option>
                        <option value="30">30 días</option>
                        <option value="60">60 días</option>
                        <option value="90">90 días</option>
                    </select>
                </div>
            </div>

            {imagePreview && (
                <div className="mt-4 mb-4">
                    <img src={imagePreview} alt="Vista previa" className="w-full h-auto rounded-lg" />
                </div>
            )}

            <div className="flex justify-between items-center mt-6">
                <div className="flex items-center">
                    <label className="flex items-center text-primary hover:text-primary-dark transition-colors duration-200 cursor-pointer">
                        <Image size={20} className="mr-2" />
                        <span>Añadir imagen</span>
                        <input type="file" accept="image/*" className="hidden" onChange={handleImageChange} />
                    </label>
                </div>

                <div className="flex space-x-3">
                    <button
                        onClick={resetForm}
                        className="px-4 py-2 border border-gray-300 rounded-lg"
                    >
                        Cancelar
                    </button>
                    <button
                        className="bg-primary text-white rounded-lg px-4 py-2 hover:bg-primary-dark transition-colors duration-200 flex items-center"
                        onClick={handleProjectCreation}
                        disabled={isPending}
                    >
                        {isPending ? (
                            <>
                                <Loader className="size-5 animate-spin mr-2" />
                                Creando...
                            </>
                        ) : (
                            "Publicar Proyecto"
                        )}
                    </button>
                </div>
            </div>
        </div>
    );
};

export default ProjectCreation;

================
File: frontend\src\components\ProjectPost.jsx
================
// backend/models/projectPost.model.js
import mongoose from "mongoose";

const projectPostSchema = new mongoose.Schema(
    {
        author: { 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User", 
            required: true 
        },
        title: { 
            type: String, 
            required: true 
        },
        content: { 
            type: String, 
            required: true 
        },
        image: { 
            type: String 
        },
        likes: [{ 
            type: mongoose.Schema.Types.ObjectId, 
            ref: "User" 
        }],
        comments: [
            {
                content: { type: String },
                user: { type: mongoose.Schema.Types.ObjectId, ref: "User" },
                createdAt: { type: Date, default: Date.now },
            },
        ],
        interestedUsers: [
            {
                user: { 
                    type: mongoose.Schema.Types.ObjectId, 
                    ref: "User" 
                },
                createdAt: { 
                    type: Date, 
                    default: Date.now 
                },
            },
        ],
        expirationDate: {
            type: Date,
            default: function() {
                // Default to 30 days from creation
                const date = new Date();
                date.setDate(date.getDate() + 30);
                return date;
            },
            required: true
        },
        status: {
            type: String,
            enum: ["active", "completed", "expired"],
            default: "active"
        },
        projectRequirements: { 
            type: String 
        },
        projectGoals: { 
            type: String 
        }
    },
    { timestamps: true }
);

// Index to help with finding expired projects
projectPostSchema.index({ expirationDate: 1 });
projectPostSchema.index({ status: 1 });
projectPostSchema.index({ author: 1 });

// Virtual field to check if project is expired
projectPostSchema.virtual('isExpired').get(function() {
    return new Date() > this.expirationDate;
});

// Middleware to automatically mark projects as expired
projectPostSchema.pre(['find', 'findOne'], async function(next) {
    try {
        // Only update if we're not specifically querying expired projects
        if (!this._conditions.status || this._conditions.status !== 'expired') {
            await mongoose.model('ProjectPost').updateMany(
                { 
                    status: 'active',
                    expirationDate: { $lt: new Date() }
                },
                { 
                    $set: { status: 'expired' }
                }
            );
        }
        next();
    } catch (error) {
        next(error);
    }
});

const ProjectPost = mongoose.model("ProjectPost", projectPostSchema);

export default ProjectPost;

================
File: frontend\src\components\QuestionnaireModal.jsx
================
// frontend/src/components/QuestionnaireModal.jsx
import React, { useState } from 'react';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { axiosInstance } from '../lib/axios';
import toast from 'react-hot-toast';
import { Briefcase, CheckCircle, ArrowRight, ArrowLeft, Globe, Calendar } from 'lucide-react';

const QuestionnaireModal = ({ isOpen, onClose, user }) => {
  const queryClient = useQueryClient();
  const [step, setStep] = useState(1);
  const [companyInfo, setCompanyInfo] = useState(user?.companyInfo || {});
  const [hasWebsite, setHasWebsite] = useState(!!user?.companyInfo?.website);
  const [isSubmitting, setIsSubmitting] = useState(false);

  // Check if required fields for the current step are filled
  const canProceed = () => {
    if (step === 1) {
      return !!companyInfo.companyName;
    }
    return true;
  };

  // Mutation to save company info and mark first login as completed
  const { mutate: completeSetup } = useMutation({
    mutationFn: async () => {
      // If website toggle is off, remove website field
      const dataToSubmit = { ...companyInfo };
      if (!hasWebsite) {
        dataToSubmit.website = "";
      }
      
      return axiosInstance.put('/users/complete-first-login', {
        companyInfo: dataToSubmit
      });
    },
    onSuccess: () => {
      toast.success('¡Información de la empresa guardada exitosamente!');
      
      // Update user data in the cache
      queryClient.invalidateQueries(['authUser']);
      
      // Close modal and reset state
      setIsSubmitting(false);
      if (onClose) onClose();
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al guardar la información');
      setIsSubmitting(false);
    }
  });

  const handleSubmit = () => {
    setIsSubmitting(true);
    completeSetup();
  };

  const handleSkip = () => {
    if (window.confirm('¿Estás seguro de que deseas omitir el cuestionario? La información de tu empresa no estará completa.')) {
      setIsSubmitting(true);
      completeSetup();
    }
  };

  // Don't render anything if the modal isn't open
  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="bg-primary text-white px-6 py-4 flex justify-between items-center rounded-t-lg">
          <div className="flex items-center">
            <Briefcase className="mr-2" />
            <h2 className="text-xl font-bold">Configuración de Información de Empresa</h2>
          </div>
        </div>
        
        {/* Body */}
        <div className="p-6">
          {/* Progress indicator */}
          <div className="mb-6 flex justify-between items-center">
            <div className="flex items-center">
              <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                step >= 1 ? 'bg-primary text-white' : 'bg-gray-200'
              }`}>
                1
              </div>
              <div className={`h-1 w-12 ${step >= 2 ? 'bg-primary' : 'bg-gray-200'}`}></div>
              <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                step >= 2 ? 'bg-primary text-white' : 'bg-gray-200'
              }`}>
                2
              </div>
            </div>
            <div>
              Paso {step} de 2
            </div>
          </div>
          
          {/* Step content */}
          {step === 1 && (
            <div>
              <h3 className="text-lg font-semibold mb-4">Información Básica de la Empresa</h3>
              <p className="text-gray-600 mb-4">
                Como usuario empresario, necesitamos algunos detalles sobre su negocio para mostrar en su perfil.
                Esta información ayudará a los egresados a conocer mejor su empresa.
              </p>
              
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700">Nombre de la Empresa *</label>
                  <input
                    type="text"
                    value={companyInfo.companyName || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, companyName: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                    required
                  />
                  <p className="text-xs text-gray-500 mt-1">Campo obligatorio</p>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Industria</label>
                  <input
                    type="text"
                    value={companyInfo.industry || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, industry: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Año de Fundación</label>
                  <div className="relative">
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <Calendar className="h-5 w-5 text-gray-400" />
                    </div>
                    <input
                      type="number"
                      min="1900"
                      max={new Date().getFullYear()}
                      value={companyInfo.foundedYear || ''}
                      onChange={(e) => setCompanyInfo({...companyInfo, foundedYear: e.target.value})}
                      className="mt-1 p-2 pl-10 w-full border rounded-md"
                      placeholder={new Date().getFullYear()}
                    />
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Ubicación</label>
                  <input
                    type="text"
                    value={companyInfo.location || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, location: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                  />
                </div>
              </div>
            </div>
          )}
          
          {step === 2 && (
            <div>
              <h3 className="text-lg font-semibold mb-4">Detalles Adicionales</h3>
              <p className="text-gray-600 mb-4">
                Proporcione información adicional que ayude a presentar mejor su empresa a los egresados.
              </p>
              
              <div className="space-y-4">
                <div>
                  <div className="flex items-center justify-between mb-2">
                    <label className="block text-sm font-medium text-gray-700">Sitio Web</label>
                    <div className="flex items-center">
                      <span className="text-sm text-gray-500 mr-2">
                        {hasWebsite ? "Activado" : "Desactivado"}
                      </span>
                      <label className="relative inline-flex items-center cursor-pointer">
                        <input 
                          type="checkbox" 
                          checked={hasWebsite}
                          onChange={(e) => setHasWebsite(e.target.checked)}
                          className="sr-only peer" 
                        />
                        <div className="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                      </label>
                    </div>
                  </div>
                  {hasWebsite && (
                    <div className="relative">
                      <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <Globe className="h-5 w-5 text-gray-400" />
                      </div>
                      <input
                        type="url"
                        value={companyInfo.website || ''}
                        onChange={(e) => setCompanyInfo({...companyInfo, website: e.target.value})}
                        className="mt-1 p-2 pl-10 w-full border rounded-md"
                        placeholder="https://"
                      />
                    </div>
                  )}
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Cantidad de Empleados</label>
                  <select
                    value={companyInfo.employees || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, employees: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                  >
                    <option value="">Seleccionar</option>
                    <option value="1-10">1-10 empleados</option>
                    <option value="11-50">11-50 empleados</option>
                    <option value="51-200">51-200 empleados</option>
                    <option value="201-500">201-500 empleados</option>
                    <option value="501+">501+ empleados</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Descripción</label>
                  <textarea
                    value={companyInfo.description || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, description: e.target.value})}
                    rows="4"
                    className="mt-1 p-2 w-full border rounded-md"
                    placeholder="Describa brevemente su empresa, actividades y misión..."
                  ></textarea>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Email de Contacto</label>
                  <input
                    type="email"
                    value={companyInfo.contactEmail || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactEmail: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                    placeholder="contacto@empresa.com"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700">Teléfono de Contacto</label>
                  <input
                    type="tel"
                    value={companyInfo.contactPhone || ''}
                    onChange={(e) => setCompanyInfo({...companyInfo, contactPhone: e.target.value})}
                    className="mt-1 p-2 w-full border rounded-md"
                    placeholder="+52 (123) 456-7890"
                  />
                </div>
              </div>
            </div>
          )}
        </div>
        
        {/* Footer */}
        <div className="px-6 py-4 bg-gray-50 flex justify-between items-center rounded-b-lg">
          {step === 1 ? (
            <button
              onClick={handleSkip}
              className="text-gray-500 hover:text-gray-700"
              disabled={isSubmitting}
            >
              Omitir por ahora
            </button>
          ) : (
            <button
              onClick={() => setStep(step - 1)}
              className="flex items-center text-gray-700 hover:text-gray-900"
              disabled={isSubmitting}
            >
              <ArrowLeft size={16} className="mr-1" />
              Anterior
            </button>
          )}
          
          {step < 2 ? (
            <button
              onClick={() => setStep(step + 1)}
              disabled={!canProceed() || isSubmitting}
              className={`flex items-center bg-primary text-white px-4 py-2 rounded-md ${
                !canProceed() ? 'opacity-50 cursor-not-allowed' : 'hover:bg-primary-dark'
              }`}
            >
              Siguiente
              <ArrowRight size={16} className="ml-1" />
            </button>
          ) : (
            <button
              onClick={handleSubmit}
              disabled={isSubmitting}
              className="flex items-center bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark"
            >
              {isSubmitting ? (
                <>
                  <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                  </svg>
                  Guardando...
                </>
              ) : (
                <>
                  <CheckCircle size={16} className="mr-1" />
                  Completar Configuración
                </>
              )}
            </button>
          )}
        </div>
      </div>
    </div>
  );
};

export default QuestionnaireModal;

================
File: frontend\src\components\RecommendedUser.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import toast from "react-hot-toast";
import { Link } from "react-router-dom";
import { Check, Clock, UserCheck, UserPlus, X } from "lucide-react";


import { useState } from 'react';
import { Search } from "lucide-react";

const RecommendedUser = ({ user }) => {
	const queryClient = useQueryClient();

	const { data: connectionStatus, isLoading } = useQuery({
		queryKey: ["connectionStatus", user._id],
		queryFn: () => axiosInstance.get(`/connections/status/${user._id}`),
	});

	const { mutate: sendConnectionRequest } = useMutation({
		mutationFn: (userId) => axiosInstance.post(`/connections/request/${userId}`),
		onSuccess: () => {
			toast.success("Solicitud enviada");
			queryClient.invalidateQueries({ queryKey: ["connectionStatus", user._id] });
		},
		onError: (error) => {
			toast.error(error.response?.data?.error || "Ocurrio un problema");
		},
	});

	const { mutate: acceptRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/accept/${requestId}`),
		onSuccess: () => {
			toast.success("Conexión aceptada");
			queryClient.invalidateQueries({ queryKey: ["connectionStatus", user._id] });
		},
		onError: (error) => {
			toast.error(error.response?.data?.error || "Ocurrio un problema");
		},
	});

	const { mutate: rejectRequest } = useMutation({
		mutationFn: (requestId) => axiosInstance.put(`/connections/reject/${requestId}`),
		onSuccess: () => {
			toast.success("Conexión rechazada");
			queryClient.invalidateQueries({ queryKey: ["connectionStatus", user._id] });
		},
		onError: (error) => {
			toast.error(error.response?.data?.error || "ocurrio un problema");
		},
	});

	const renderButton = () => {
		if (isLoading) {
			return (
				<button className='px-3 py-1 rounded-full text-sm bg-gray-200 text-gray-500' disabled>
					Loading...
				</button>
			);
		}

		switch (connectionStatus?.data?.status) {
			case "pending":
				return (
					<button
						className='px-3 py-1 rounded-full text-xs bg-yellow-500 text-white flex items-center'
						disabled
					>
						<Clock size={14} className='mr-1' />
						Pendiente
					</button>
				);
			case "received":
				return (
					<div className='flex gap-2 justify-center'>
						<button
							onClick={() => acceptRequest(connectionStatus.data.requestId)}
							className={`rounded-full p-1 flex items-center justify-center bg-green-500 hover:bg-green-600 text-white`}
						>
							<Check size={16} />
						</button>
						<button
							onClick={() => rejectRequest(connectionStatus.data.requestId)}
							className={`rounded-full p-1 flex items-center justify-center bg-red-500 hover:bg-red-600 text-white`}
						>
							<X size={16} />
						</button>
					</div>
				);
			case "connected":
				return (
					<button
						className='px-3 py-1 rounded-full text-sm bg-green-500 text-white flex items-center'
						disabled
					>
						<UserCheck size={15} className='mr-1' />
						conectado
					</button>
				);
			default:
				return (
					<button
						className='px-1 py-1 rounded-full text-sm border border-primary text-xs hover:bg-primary hover:text-white transition-colors duration-200 flex items-center'
						onClick={handleConnect}
					>
						<UserPlus size={14} className='mr-1' />
						Hacer conexión
					</button>
				);
		}
	};

	const handleConnect = () => {
		if (connectionStatus?.data?.status === "not_connected") {
			sendConnectionRequest(user._id);
		}
	};

	return (
		<div className='flex items-center justify-between mb-4'>
			<Link to={`/profile/${user.username}`} className='flex items-center flex-grow'>
				<img
					src={user.profilePicture || "/avatar.png"}
					alt={user.name}
					className='w-12 h-12 rounded-full mr-3'
				/>
				<div>
					<h3 className='font-semibold text-sm'>{user.name}</h3>
					<p className='text-xs text-info'>{user.headline}</p>
				</div>
			</Link>
			{renderButton()}
		</div>
	);
};



export default RecommendedUser;

================
File: frontend\src\components\Sidebar.jsx
================
import { Link } from "react-router-dom";
import { Home, UserPlus, Bell } from "lucide-react";

export default function Sidebar({ user }) {
	return (
		<div className='bg-secondary rounded-lg shadow'>
			<div className='p-4 text-center'>
				<div
					className='h-16 rounded-t-lg bg-cover bg-center'
					style={{
						backgroundImage: `url("${user.bannerImg || "/banner.png"}")`,
					}}
				/>
				<Link to={`/profile/${user.username}`}>
					<img
						src={user.profilePicture || "/avatar.png"}
						alt={user.name}
						className='w-20 h-20 rounded-full mx-auto mt-[-40px]'
					/>
					<h2 className='text-xl font-semibold mt-2'>{user.name}</h2>
				</Link>
				<p className='text-info'>{user.headline}</p>
				<p className='text-info text-xs'>{user.connections.length} contactos</p>
			</div>
			<div className='border-t border-base-100 p-4'>
				<nav>
					<ul className='space-y-2'>
						<li>
							<Link
								to='/'
								className='flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors'
							>
								<Home className='mr-2' size={20} /> Inicio
							</Link>
						</li>
						<li>
							<Link
								to='/network'
								className='flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors'
							>
								<UserPlus className='mr-2' size={20} /> Mis contactos
							</Link>
						</li>
						<li>
							<Link
								to='/notifications'
								className='flex items-center py-2 px-4 rounded-md hover:bg-primary hover:text-white transition-colors'
							>
								<Bell className='mr-2' size={20} /> Notificaciones
							</Link>
						</li>
					</ul>
				</nav>
			</div>
			<div className='border-t border-base-100 p-4'>
				<Link to={`/profile/${user.username}`} className='text-sm font-semibold'>
					Mi perfil
				</Link>
			</div>
		</div>
	);
}

================
File: frontend\src\components\SkillsSection.jsx
================
import { X } from "lucide-react";
import { useState } from "react";

const SkillsSection = ({ userData, isOwnProfile, onSave }) => {
	const [isEditing, setIsEditing] = useState(false);
	const [skills, setSkills] = useState(userData.skills || []);
	const [newSkill, setNewSkill] = useState("");

	const handleAddSkill = () => {
		if (newSkill && !skills.includes(newSkill)) {
			setSkills([...skills, newSkill]);
			setNewSkill("");
		}
	};

	const handleDeleteSkill = (skill) => {
		setSkills(skills.filter((s) => s !== skill));
	};

	const handleSave = () => {
		onSave({ skills });
		setIsEditing(false);
	};

	return (
		<div className='bg-white shadow rounded-lg p-6'>
			<h2 className='text-xl font-semibold mb-4'>Habilidades</h2>
			<div className='flex flex-wrap'>
				{skills.map((skill, index) => (
					<span
						key={index}
						className='bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm mr-2 mb-2 flex items-center'
					>
						{skill}
						{isEditing && (
							<button onClick={() => handleDeleteSkill(skill)} className='ml-2 text-red-500'>
								<X size={14} />
							</button>
						)}
					</span>
				))}
			</div>

			{isEditing && (
				<div className='mt-4 flex'>
					<input
						type='text'
						placeholder='Nueva habilidad'
						value={newSkill}
						onChange={(e) => setNewSkill(e.target.value)}
						className='flex-grow p-2 border rounded-l'
					/>
					<button
						onClick={handleAddSkill}
						className='bg-primary text-white py-2 px-4 rounded-r hover:bg-primary-dark transition duration-300'
					>
						AÃ±adir habilidad
					</button>
				</div>
			)}

			{isOwnProfile && (
				<>
					{isEditing ? (
						<button
							onClick={handleSave}
							className='mt-4 bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-300'
						>
							Guardar cambios
						</button>
					) : (
						<button
							onClick={() => setIsEditing(true)}
							className='mt-4 text-primary hover:text-primary-dark transition duration-300'
						>
							Editar habilidades
						</button>
					)}
				</>
			)}
		</div>
	);
};
export default SkillsSection;

================
File: frontend\src\components\UserCard.jsx
================
import { Link } from "react-router-dom";

function UserCard({ user, isConnection }) {
	return (
		<div className='bg-white rounded-lg shadow p-4 flex flex-col items-center transition-all hover:shadow-md'>
			<Link to={`/profile/${user.username}`} className='flex flex-col items-center'>
				<img
					src={user.profilePicture || "/avatar.png"}
					alt={user.name}
					className='w-24 h-24 rounded-full object-cover mb-4'
				/>
				<h3 className='font-semibold text-lg text-center'>{user.name}</h3>
			</Link>
			<p className='text-gray-600 text-center'>{user.headline}</p>
			<p className='text-sm text-gray-500 mt-2'>{user.connections?.length} conexiones</p>
			<button className='mt-4 bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition-colors w-full'>
				{isConnection ? "Conectados" : "Connect"}
			</button>
		</div>
	);
}

export default UserCard;

================
File: frontend\src\components\auth\LoginForm.jsx
================
import { useMutation, useQueryClient } from "@tanstack/react-query";
import { useState } from "react";
import { axiosInstance } from "../../lib/axios";
import toast from "react-hot-toast";
import { Loader } from "lucide-react";

const LoginForm = () => {
	const [username, setUsername] = useState("");
	const [password, setPassword] = useState("");
	const queryClient = useQueryClient();

	const { mutate: loginMutation, isLoading } = useMutation({
		mutationFn: (userData) => axiosInstance.post("/auth/login", userData),
		onSuccess: (response) => {
			// Store the isFirstLogin status from the response if it exists
			if (response.data && response.data.isFirstLogin !== undefined) {
				// Pass isFirstLogin to authUser invalidation
				queryClient.invalidateQueries({ 
					queryKey: ["authUser"],
					// When refetching, add the isFirstLogin flag to the result
					updater: (oldData) => {
						if (oldData) {
							return {
								...oldData,
								isFirstLogin: response.data.isFirstLogin
							};
						}
						return oldData;
					}
				});
			} else {
				// Standard invalidation without updater if no isFirstLogin
				queryClient.invalidateQueries({ queryKey: ["authUser"] });
			}
		},
		onError: (err) => {
			toast.error(err.response.data.message || "Something went wrong");
		},
	});

	const handleSubmit = (e) => {
		e.preventDefault();
		loginMutation({ username, password });
	};

	return (
		<form onSubmit={handleSubmit} className='space-y-4 w-full max-w-md'>
			<input
				type='text'
				placeholder='Usuario'
				value={username}
				onChange={(e) => setUsername(e.target.value)}
				className='input input-bordered w-full'
				required
			/>
			<input
				type='password'
				placeholder='ContraseÃ±a'
				value={password}
				onChange={(e) => setPassword(e.target.value)}
				className='input input-bordered w-full'
				required
			/>

			<button type='submit' className='btn btn-primary w-full'>
				{isLoading ? <Loader className='size-5 animate-spin' /> : "Entrar"}
			</button>
		</form>
	);
};
export default LoginForm;

================
File: frontend\src\components\auth\SignUpForm.jsx
================
import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'react-hot-toast';
import axios from 'axios';

const SignupForm = () => {
    const navigate = useNavigate();
    const [formData, setFormData] = useState({
        name: '',
        username: '',
        email: '',
        studentId: '', // New field
        password: '',
        confirmPassword: ''
    });
    
    const [loading, setLoading] = useState(false);
    
    const handleChange = (e) => {
        const { name, value } = e.target;
        
        if (name === 'studentId') {
            // Auto-generate email based on student ID
            if (/^\d{8}$/.test(value)) {
                const generatedEmail = `L${value}@tuxtla.tecnm.mx`;
                setFormData({
                    ...formData,
                    studentId: value,
                    email: generatedEmail
                });
            } else {
                setFormData({
                    ...formData,
                    studentId: value,
                });
            }
        } else {
            setFormData({
                ...formData,
                [name]: value
            });
        }
    };
    
    const handleSubmit = async (e) => {
        e.preventDefault();
        
        if (formData.password !== formData.confirmPassword) {
            toast.error('Las contraseñas no coinciden');
            return;
        }
        
        // Validate student ID format
        if (!/^\d{8}$/.test(formData.studentId)) {
            toast.error('ID de estudiante inválido. Debe ser un número de 8 dígitos.');
            return;
        }
        
        // Validate institutional email format
        const expectedEmail = `L${formData.studentId}@tuxtla.tecnm.mx`;
        if (formData.email !== expectedEmail) {
            toast.error('El correo institucional debe coincidir con tu ID de estudiante');
            return;
        }
        
        try {
            setLoading(true);
            
            const { confirmPassword, ...dataToSend } = formData;
            
			const response = await axios.post('http://localhost:5000/api/v1/auth/signup', dataToSend);
            
            toast.success(response.data.message || 'Registro exitoso');
            navigate('/login');
        } catch (error) {
            toast.error(error.response?.data?.message || 'Error al registrarse');
        } finally {
            setLoading(false);
        }
    };
    
    return (
        <form onSubmit={handleSubmit} className="space-y-4">
            {/* Existing name and username fields */}
            <div>
                <label className="label">Nombre completo</label>
                <input
                    type="text"
                    name="name"
                    value={formData.name}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                />
            </div>
            
            <div>
                <label className="label">Nombre de usuario</label>
                <input
                    type="text"
                    name="username"
                    value={formData.username}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                />
            </div>
            
            {/* New student ID field */}
            <div>
                <label className="label">ID de Estudiante (8 dígitos)</label>
                <input
                    type="text"
                    name="studentId"
                    value={formData.studentId}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    placeholder="Ejemplo: 20270806"
                    required
                />
            </div>
            
            {/* Auto-generated email field (read-only) */}
            <div>
                <label className="label">Correo Institucional</label>
                <input
                    type="email"
                    name="email"
                    value={formData.email}
                    className="input input-bordered w-full"
                    readOnly
                    required
                />
                <p className="text-xs text-gray-500 mt-1">
                    El correo se genera automáticamente a partir de tu ID de estudiante
                </p>
            </div>
            
            {/* Password fields */}
            <div>
                <label className="label">Contraseña</label>
                <input
                    type="password"
                    name="password"
                    value={formData.password}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                    minLength={6}
                />
            </div>
            
            <div>
                <label className="label">Confirmar Contraseña</label>
                <input
                    type="password"
                    name="confirmPassword"
                    value={formData.confirmPassword}
                    onChange={handleChange}
                    className="input input-bordered w-full"
                    required
                    minLength={6}
                />
            </div>
            
            <button 
                type="submit" 
                className="btn btn-primary w-full"
                disabled={loading}
            >
                {loading ? 'Registrando...' : 'Registrarse'}
            </button>
        </form>
    );
};

export default SignupForm;

================
File: frontend\src\components\layout\Layout.jsx
================
import Navbar from "./Navbar";

const Layout = ({ children }) => {
	return (
		<div className='min-h-screen bg-base-100'>
			<Navbar />
			<main className='max-w-7xl mx-auto px-4 py-6'>{children}</main>
		</div>
	);
};
export default Layout;

================
File: frontend\src\components\layout\Navbar.jsx
================
// frontend/src/components/layout/Navbar.jsx
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../../lib/axios";
import { Link } from "react-router-dom";
import { Bell, Home, LogOut, User, Users, Settings, Briefcase } from "lucide-react";

const Navbar = () => {
    const { data: authUser } = useQuery({ queryKey: ["authUser"] });
    const queryClient = useQueryClient();

    const { data: notifications } = useQuery({
        queryKey: ["notifications"],
        queryFn: async () => axiosInstance.get("/notifications"),
        enabled: !!authUser,
    });

    const { data: connectionRequests } = useQuery({
        queryKey: ["connectionRequests"],
        queryFn: async () => axiosInstance.get("/connections/requests"),
        enabled: !!authUser,
    });

    const { mutate: logout } = useMutation({
        mutationFn: () => axiosInstance.post("/auth/logout"),
        onSuccess: () => {
            queryClient.invalidateQueries({ queryKey: ["authUser"] });
        },
    });

    const unreadNotificationCount = notifications?.data.filter((notif) => !notif.read).length;
    const unreadConnectionRequestsCount = connectionRequests?.data?.length;

    return (
        <nav className='shadow-md sticky top-0 z-10' style={{ backgroundColor: '#1b386a' }}>
    <div className='maindigox-w-7xl mx-auto px-4'>
        <div className='flex justify-between items-center py-3'>
            {/* Rest of the code remains the same */}
                    <div className='flex items-center space-x-4'>
                        <Link to='/'>
                            <img className='h-8 rounded' src='/small-logo.png' alt='LinkedIn' />
                        </Link>
                    </div>
                    <div className='flex items-center gap-2 md:gap-6'>
                        {authUser ? (
                            <>
                                <Link to={"/"} className='text-zinc-50 flex flex-col items-center'>
                                    <Home size={20} />
                                    <span className='text-xs hidden md:block'>Inicio</span>
                                </Link>
                                
                                <Link to='/projects' className='text-zinc-50 flex flex-col items-center'>
                                    <Briefcase size={20} />
                                    <span className='text-xs hidden md:block'>Proyectos</span>
                                </Link>

                                <Link to='/network' className='text-zinc-50 flex flex-col items-center relative'>
                                    <Users size={20} />
                                    <span className='text-xs hidden md:block'>Contactos</span>
                                    {unreadConnectionRequestsCount > 0 && (
                                        <span
                                            className='absolute -top-1 -right-1 md:right-4 bg-blue-500 text-white text-xs 
                                            rounded-full size-3 md:size-4 flex items-center justify-center'
                                        >
                                            {unreadConnectionRequestsCount}
                                        </span>
                                    )}
                                </Link>

                                <Link to='/notifications' className='text-zinc-50 flex flex-col items-center relative'>
                                    <Bell size={20} />
                                    <span className='text-xs hidden md:block'>Notificaciones</span>
                                    {unreadNotificationCount > 0 && (
                                        <span
                                            className='absolute -top-1 -right-1 md:right-4 bg-blue-500 text-white text-xs 
                                            rounded-full size-3 md:size-4 flex items-center justify-center'
                                        >
                                            {unreadNotificationCount}
                                        </span>
                                    )}
                                </Link>

                                <Link
                                    to={`/profile/${authUser.username}`}
                                    className='text-zinc-50 flex flex-col items-center'
                                >
                                    <User size={20} />
                                    <span className='text-xs hidden md:block'>Acerca de mi</span>
                                </Link>
                                
                                {authUser.role === 'administrador' && (
                                    <Link to='/admin' className='text-zinc-50 flex flex-col items-center'>
                                        <Settings size={20} />
                                        <span className='text-xs hidden md:block'>Admin</span>
                                    </Link>
                                )}
                                
                                <button
                                    className='flex items-center space-x-1 text-sm text-gray-400 hover:text-zinc-200'
                                    onClick={() => logout()}
                                >
                                    <LogOut size={20} />
                                    <span className='hidden md:inline'>cerrar sesión</span>
                                </button>
                            </>
                        ) : (
                            <>
                                <Link to='/login' className='btn btn-primary'>
                                    Iniciar sesión
                                </Link>
                                <Link to='/signup' className='btn btn-primary'>
                                    Registrarse
                                </Link>
                            </>
                        )}
                    </div>
                </div>
            </div>
        </nav>
    );
};

export default Navbar;

================
File: frontend\src\lib\axios.js
================
import axios from "axios";

export const axiosInstance = axios.create({
	baseURL: import.meta.env.MODE === "development" ? "http://localhost:5000/api/v1" : "/api/v1",
	withCredentials: true,
});

================
File: frontend\src\pages\AdminDashboardPage.jsx
================
import { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
import { axiosInstance } from '../lib/axios';
import toast from 'react-hot-toast';
import { Loader, Trash2, UserPlus, Edit, Search, AlertCircle } from 'lucide-react';

const AdminDashboardPage = () => {
  const [isAddingUser, setIsAddingUser] = useState(false);
  const [newUser, setNewUser] = useState({
    name: '',
    username: '',
    email: '',
    password: '',
    studentId: '', // Added the studentId field
    role: 'egresado',
  });
  const [search, setSearch] = useState('');
  const [activeTab, setActiveTab] = useState('users'); // 'users' or 'banned'
  
  const queryClient = useQueryClient();
  
  const { data: users, isLoading } = useQuery({
    queryKey: ['admin-users'],
    queryFn: async () => {
      const res = await axiosInstance.get('/admin/users');
      return res.data;
    },
  });
  
  const { data: bannedUsers, isLoading: isLoadingBanned } = useQuery({
    queryKey: ['admin-banned-users'],
    queryFn: async () => {
      const res = await axiosInstance.get('/admin/banned-users');
      return res.data;
    },
    enabled: activeTab === 'banned', // Only fetch when the tab is active
  });
  
  const { mutate: createUser, isPending: isCreatingUser } = useMutation({
    mutationFn: async (userData) => {
      return axiosInstance.post('/admin/users', userData);
    },
    onSuccess: () => {
      toast.success('Usuario creado exitosamente');
      setIsAddingUser(false);
      setNewUser({
        name: '',
        username: '',
        email: '',
        password: '',
        studentId: '', // Reset studentId field
        role: 'egresado',
      });
      queryClient.invalidateQueries(['admin-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al crear usuario');
    },
  });
  
  const { mutate: deleteUser } = useMutation({
    mutationFn: async (userId) => {
      return axiosInstance.delete(`/admin/users/${userId}`);
    },
    onSuccess: () => {
      toast.success('Usuario eliminado exitosamente');
      queryClient.invalidateQueries(['admin-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al eliminar usuario');
    },
  });
  
  const { mutate: updateUserRole } = useMutation({
    mutationFn: async ({ userId, role }) => {
      return axiosInstance.put(`/admin/users/${userId}/role`, { role });
    },
    onSuccess: () => {
      toast.success('Rol actualizado exitosamente');
      queryClient.invalidateQueries(['admin-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al actualizar rol');
    },
  });
  
  const { mutate: banUser } = useMutation({
    mutationFn: async ({ userId, reason }) => {
      return axiosInstance.post(`/admin/users/${userId}/ban`, { reason });
    },
    onSuccess: () => {
      toast.success('Usuario baneado exitosamente');
      queryClient.invalidateQueries(['admin-users']);
      queryClient.invalidateQueries(['admin-banned-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al banear usuario');
    },
  });
  
  const { mutate: unbanUser } = useMutation({
    mutationFn: async (studentId) => {
      return axiosInstance.delete(`/admin/banned-users/${studentId}`);
    },
    onSuccess: () => {
      toast.success('Usuario desbaneado exitosamente');
      queryClient.invalidateQueries(['admin-banned-users']);
    },
    onError: (error) => {
      toast.error(error.response?.data?.message || 'Error al desbanear usuario');
    },
  });
  
  const handleCreateUser = (e) => {
    e.preventDefault();
    createUser(newUser);
  };
  
  const handleDeleteUser = (userId) => {
    if (window.confirm('¿Estás seguro de eliminar este usuario?')) {
      deleteUser(userId);
    }
  };
  
  const handleRoleChange = (userId, role) => {
    updateUserRole({ userId, role });
  };
  
  const handleBanUser = (userId, name) => {
    const reason = prompt(`Ingrese la razón para banear a ${name}:`);
    
    if (reason !== null) { // If user didn't cancel the prompt
      if (window.confirm(`¿Estás seguro de banear a ${name}? Esta acción no se puede deshacer y el usuario no podrá crear una nueva cuenta con el mismo ID.`)) {
        banUser({ userId, reason });
      }
    }
  };
  
  // Handle studentId change with automatic email generation for egresados
  const handleStudentIdChange = (e) => {
    const studentId = e.target.value;
    setNewUser({
      ...newUser, 
      studentId: studentId,
      // Auto-generate institutional email if it's a valid 8-digit ID and role is egresado
      email: newUser.role === 'egresado' && /^\d{8}$/.test(studentId) 
        ? `L${studentId}@tuxtla.tecnm.mx`
        : newUser.email
    });
  };
  
  // Handle role change and manage studentId/email accordingly
  const handleRoleInputChange = (e) => {
    const role = e.target.value;
    setNewUser({
      ...newUser,
      role: role,
      // If changing to egresado and we have a valid studentId, update the email
      email: role === 'egresado' && /^\d{8}$/.test(newUser.studentId)
        ? `L${newUser.studentId}@tuxtla.tecnm.mx`
        : newUser.email
    });
  };
  
  // Fixed filter function with proper null checks
  const filteredUsers = users?.filter(user => 
    (user && user.name && user.name.toLowerCase().includes(search.toLowerCase())) ||
    (user && user.email && user.email.toLowerCase().includes(search.toLowerCase())) ||
    (user && user.username && user.username.toLowerCase().includes(search.toLowerCase()))
  );
  
  const getRoleBadge = (role) => {
    switch(role) {
      case 'empresario':
        return (
          <span className="px-2 py-1 text-xs rounded-full bg-green-100 text-green-800">
            Empresario
          </span>
        );
      case 'administrador':
        return (
          <span className="px-2 py-1 text-xs rounded-full bg-purple-100 text-purple-800">
            Administrador
          </span>
        );
      default:
        return (
          <span className="px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800">
            Egresado
          </span>
        );
    }
  };
  
  return (
    <div className="bg-white rounded-lg shadow p-6">
      <h1 className="text-2xl font-bold mb-6">Panel de Administración</h1>
      
      <div className="mb-6">
        <div className="flex border-b">
          <button
            className={`py-2 px-4 ${activeTab === 'users' 
              ? 'border-b-2 border-primary font-semibold' 
              : 'text-gray-500'}`}
            onClick={() => setActiveTab('users')}
          >
            Usuarios
          </button>
          <button
            className={`py-2 px-4 ${activeTab === 'banned' 
              ? 'border-b-2 border-primary font-semibold' 
              : 'text-gray-500'}`}
            onClick={() => setActiveTab('banned')}
          >
            Usuarios Baneados
          </button>
        </div>
      </div>
      
      {activeTab === 'users' && (
        <>
          <div className="mb-6 flex justify-between items-center">
            <div className="relative w-64">
              <input
                type="text"
                placeholder="Buscar usuarios..."
                value={search}
                onChange={(e) => setSearch(e.target.value)}
                className="w-full pl-10 pr-4 py-2 border rounded-lg"
              />
              <Search className="absolute left-3 top-2.5 text-gray-400" size={18} />
            </div>
            
            <button 
              onClick={() => setIsAddingUser(true)}
              className="bg-primary text-white px-4 py-2 rounded-lg flex items-center"
            >
              <UserPlus size={18} className="mr-2" />
              Crear Usuario
            </button>
          </div>
          
          {isLoading ? (
            <div className="flex justify-center py-8">
              <Loader className="animate-spin" size={32} />
            </div>
          ) : (
            <div className="overflow-x-auto">
              <table className="w-full border-collapse">
                <thead>
                  <tr className="bg-gray-100">
                    <th className="border p-2 text-left">Nombre</th>
                    <th className="border p-2 text-left">Usuario</th>
                    <th className="border p-2 text-left">Correo</th>
                    <th className="border p-2 text-left">Rol</th>
                    <th className="border p-2 text-center">Acciones</th>
                  </tr>
                </thead>
                <tbody>
                  {filteredUsers?.map(user => (
                    <tr key={user._id} className="hover:bg-gray-50">
                      <td className="border p-2">
                        <div className="flex items-center">
                          <span>{user.name}</span>
                        </div>
                      </td>
                      <td className="border p-2">{user.username}</td>
                      <td className="border p-2">{user.email}</td>
                      <td className="border p-2">
                        <div className="flex items-center space-x-2">
                          {getRoleBadge(user.role)}
                          <select
                            value={user.role}
                            onChange={(e) => handleRoleChange(user._id, e.target.value)}
                            className="ml-2 p-1 border rounded"
                          >
                            <option value="egresado">Egresado</option>
                            <option value="empresario">Empresario</option>
                            <option value="administrador">Administrador</option>
                          </select>
                        </div>
                      </td>
                      <td className="border p-2 text-center">
                        <div className="flex justify-center space-x-2">
                          <button 
                            onClick={() => handleDeleteUser(user._id)}
                            className="text-red-500 hover:bg-red-100 p-1 rounded"
                            title="Eliminar Usuario"
                          >
                            <Trash2 size={18} />
                          </button>
                          
                          {/* Only show ban button for egresados */}
                          {user.role === 'egresado' && (
                            <button 
                              onClick={() => handleBanUser(user._id, user.name)}
                              className="text-orange-500 hover:bg-orange-100 p-1 rounded"
                              title="Banear Usuario"
                            >
                              <AlertCircle size={18} />
                            </button>
                          )}
                        </div>
                      </td>
                    </tr>
                  ))}
                  
                  {filteredUsers?.length === 0 && (
                    <tr>
                      <td colSpan="5" className="text-center py-4">
                        No se encontraron usuarios
                      </td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
          )}
        </>
      )}
      
      {activeTab === 'banned' && (
        <div className="overflow-x-auto">
          {isLoadingBanned ? (
            <div className="flex justify-center py-8">
              <Loader className="animate-spin" size={32} />
            </div>
          ) : (
            <table className="w-full border-collapse">
              <thead>
                <tr className="bg-gray-100">
                  <th className="border p-2 text-left">ID Estudiante</th>
                  <th className="border p-2 text-left">Correo</th>
                  <th className="border p-2 text-left">Razón</th>
                  <th className="border p-2 text-left">Baneado Por</th>
                  <th className="border p-2 text-left">Fecha</th>
                  <th className="border p-2 text-center">Acciones</th>
                </tr>
              </thead>
              <tbody>
                {bannedUsers?.map(banned => (
                  <tr key={banned._id} className="hover:bg-gray-50">
                    <td className="border p-2">{banned.studentId}</td>
                    <td className="border p-2">{banned.email}</td>
                    <td className="border p-2">{banned.reason}</td>
                    <td className="border p-2">{banned.bannedBy?.name || 'N/A'}</td>
                    <td className="border p-2">
                      {new Date(banned.bannedAt).toLocaleString()}
                    </td>
                    <td className="border p-2 text-center">
                      <button 
                        onClick={() => {
                          if (window.confirm('¿Estás seguro de desbanear a este usuario?')) {
                            unbanUser(banned.studentId);
                          }
                        }}
                        className="text-blue-500 hover:bg-blue-100 p-1 rounded"
                      >
                        Desbanear
                      </button>
                    </td>
                  </tr>
                ))}
                
                {(!bannedUsers || bannedUsers.length === 0) && (
                  <tr>
                    <td colSpan="6" className="text-center py-4">
                      No hay usuarios baneados
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          )}
        </div>
      )}
      
      {isAddingUser && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 w-full max-w-md">
            <h2 className="text-xl font-semibold mb-4">Crear Nuevo Usuario</h2>
            <form onSubmit={handleCreateUser}>
              <div className="mb-4">
                <label className="block mb-1">Nombre completo</label>
                <input
                  type="text"
                  value={newUser.name}
                  onChange={(e) => setNewUser({...newUser, name: e.target.value})}
                  className="w-full p-2 border rounded"
                  required
                />
              </div>
              
              <div className="mb-4">
                <label className="block mb-1">Nombre de usuario</label>
                <input
                  type="text"
                  value={newUser.username}
                  onChange={(e) => setNewUser({...newUser, username: e.target.value})}
                  className="w-full p-2 border rounded"
                  required
                />
              </div>
              
              <div className="mb-4">
                <label className="block mb-1">Rol</label>
                <select
                  value={newUser.role}
                  onChange={handleRoleInputChange}
                  className="w-full p-2 border rounded"
                >
                  <option value="egresado">Egresado</option>
                  <option value="empresario">Empresario</option>
                  <option value="administrador">Administrador</option>
                </select>
              </div>
              
              {/* Student ID field - only displayed for 'egresado' role */}
              {newUser.role === 'egresado' && (
                <div className="mb-4">
                  <label className="block mb-1">ID de Estudiante (8 dígitos)</label>
                  <input
                    type="text"
                    value={newUser.studentId}
                    onChange={handleStudentIdChange}
                    className="w-full p-2 border rounded"
                    placeholder="Ejemplo: 20270806"
                    required={newUser.role === 'egresado'}
                  />
                </div>
              )}
              
              <div className="mb-4">
                <label className="block mb-1">Correo electrónico</label>
                <input
                  type="email"
                  value={newUser.email}
                  onChange={(e) => setNewUser({...newUser, email: e.target.value})}
                  className="w-full p-2 border rounded"
                  readOnly={newUser.role === 'egresado' && /^\d{8}$/.test(newUser.studentId)}
                  required
                />
                {newUser.role === 'egresado' && /^\d{8}$/.test(newUser.studentId) && (
                  <p className="text-xs text-gray-500 mt-1">
                    El correo se genera automáticamente a partir del ID de estudiante
                  </p>
                )}
              </div>
              
              <div className="mb-4">
                <label className="block mb-1">Contraseña</label>
                <input
                  type="password"
                  value={newUser.password}
                  onChange={(e) => setNewUser({...newUser, password: e.target.value})}
                  className="w-full p-2 border rounded"
                  required
                />
              </div>
              
              <div className="flex justify-end gap-2">
                <button
                  type="button"
                  onClick={() => setIsAddingUser(false)}
                  className="px-4 py-2 border rounded-lg"
                >
                  Cancelar
                </button>
                <button
                  type="submit"
                  className="bg-primary text-white px-4 py-2 rounded-lg flex items-center"
                  disabled={isCreatingUser}
                >
                  {isCreatingUser ? <Loader className="animate-spin mr-2" size={18} /> : <UserPlus size={18} className="mr-2" />}
                  Crear Usuario
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};

export default AdminDashboardPage;

================
File: frontend\src\pages\HomePage.jsx
================
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import PostCreation from "../components/PostCreation";
import Post from "../components/Post";
import { Users, Newspaper, FileText,  } from "lucide-react";
import RecommendedUser from "../components/RecommendedUser";

const HomePage = () => {
	const { data: authUser } = useQuery({ queryKey: ["authUser"] });

	const { data: recommendedUsers } = useQuery({
		queryKey: ["recommendedUsers"],
		queryFn: async () => {
			const res = await axiosInstance.get("/users/suggestions?limit=5");
			return res.data;
		},
	});

	const { data: posts } = useQuery({
		queryKey: ["posts"],
		queryFn: async () => {
			const res = await axiosInstance.get("/posts");
			return res.data;
		},
	});

	console.log("posts", posts);

	return (
		<div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
			<div className='hidden lg:block lg:col-span-1'>
				<Sidebar user={authUser} />
			</div>

			<div className='col-span-1 lg:col-span-2 order-first lg:order-none'>
				<PostCreation user={authUser} />

				{posts?.map((post) => (
					<Post key={post._id} post={post} />
				))}

				{posts?.length === 0 && (
					<div className='bg-white rounded-lg shadow p-8 text-center'>
						<div className='mb-6'>
							<FileText    size={64} className='mx-auto text-blue-500' />
						</div>
						<h2 className='text-2xl font-bold mb-4 text-gray-800'>No hay publicaciones todavía</h2>
						<p className='text-gray-600 mb-6'>Añade personas a tus contactos para porder ver sus posts</p>
					</div>
				)}
			</div>

			{recommendedUsers?.length > 0 && (
				<div className='col-span-1 lg:col-span-1 hidden lg:block'>
					<div className='bg-secondary rounded-lg shadow p-4'>
						<h2 className='font-semibold mb-4'>Personas que quiza conozcas</h2>
						{recommendedUsers?.map((user) => (
							<RecommendedUser key={user._id} user={user} />
						))}
					</div>
				</div>
			)}
		</div>
	);
};
export default HomePage;

================
File: frontend\src\pages\NetworkPage.jsx
================
import { useState } from 'react';
import { useQuery } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import { UserPlus, Search  } from "lucide-react";
import FriendRequest from "../components/FriendRequest";
import UserCard from "../components/UserCard";
import RecommendedUser from "../components/RecommendedUser";
  
const NetworkPage = () => {
	const { data: user } = useQuery({ queryKey: ["authUser"] });

	const { data: connectionRequests } = useQuery({
		queryKey: ["connectionRequests"],
		queryFn: () => axiosInstance.get("/connections/requests"),
	});

	const { data: connections } = useQuery({
		queryKey: ["connections"],
		queryFn: () => axiosInstance.get("/connections"),
	});
 
    const { data: recommendedUsers } = useQuery({
        queryKey: ["recommendedUsersBig"],
        queryFn: async () => {
            const res = await axiosInstance.get("/users/suggestions?limit=50");  // Change limit to 3 or any desired number // aca cambiamos el máximo de usaurios recomendados
            return res.data;
        },
    });

	 // State to manage search input
	 const [searchTerm, setSearchTerm] = useState('');

	 // Filter recommended users based on search term with null checks
	 const filteredUsers = recommendedUsers
		 ? recommendedUsers.filter(user =>
			 (user && user.name && user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||
			 (user && user.username && user.username.toLowerCase().includes(searchTerm.toLowerCase()))
		   )
		 : [];
	
	return (
		<div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
			<div className='col-span-1 lg:col-span-1'>
				<Sidebar user={user} />
			</div>
			<div className='col-span-1 lg:col-span-3'>
				<div className='bg-secondary rounded-lg shadow p-6 mb-6'>
					<h1 className='text-2xl font-bold mb-6'>Mis contactos</h1>

					{connectionRequests?.data?.length > 0 ? (
						<div className='mb-8'>
							<h2 className='text-xl font-semibold mb-2'>Solicitudes de conexión.</h2>
							<div className='space-y-4'>
								{connectionRequests.data.map((request) => (
									<FriendRequest key={request.id} request={request} />
								))}
							</div>
						</div>
					) : (
						<div className='bg-white rounded-lg shadow p-6 text-center mb-6'>
							<UserPlus size={48} className='mx-auto text-gray-400 mb-4' />
							<h3 className='text-xl font-semibold mb-2'>No hay solicitudes de conexión</h3>
							<p className='text-gray-600'>
								No tienes solicitudes de conexión por el momento.
							</p>
							<p className='text-gray-600 mt-2'>
								Explora sugerencias de conexión abajo para expandir tus contactos!
							</p>
						</div>
					)}
					
					{connections?.data?.length > 0 && (
						<div className='mb-8'>
							<h2 className='text-xl font-semibold mb-4'>Mis conexiones</h2>
							<div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>
								{connections.data.map((connection) => (
									<UserCard key={connection._id} user={connection} isConnection={true} />
								))}
							</div>
						</div>
					)}

					{recommendedUsers?.length > 0 && (
                        <div className='mb-8'>
                            <h2 className='text-xl font-semibold mb-4'>Sugerencias de Conexión</h2>
                            <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'>
                                {recommendedUsers.map((suggestedUser) => (
                                    <RecommendedUser key={suggestedUser._id} user={suggestedUser} />
                                ))}
                            </div>
                        </div>
                    )}
				</div>
			</div>
		</div>
	);
};

export default NetworkPage;

================
File: frontend\src\pages\NotificationsPage.jsx
================
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import { toast } from "react-hot-toast";
import { 
  ExternalLink, 
  Eye, 
  MessageSquare, 
  ThumbsUp, 
  Trash2, 
  UserPlus, 
  Users, 
  Briefcase, 
  Clock 
} from "lucide-react";
import { Link } from "react-router-dom";
import Sidebar from "../components/Sidebar";
import { formatDistanceToNow } from "date-fns";

const NotificationsPage = () => {
  const { data: authUser } = useQuery({ queryKey: ["authUser"] });

  const queryClient = useQueryClient();

  const { data: notifications, isLoading } = useQuery({
    queryKey: ["notifications"],
    queryFn: () => axiosInstance.get("/notifications"),
  });

  const { mutate: markAsReadMutation } = useMutation({
    mutationFn: (id) => axiosInstance.put(`/notifications/${id}/read`),
    onSuccess: () => {
      queryClient.invalidateQueries(["notifications"]);
    },
  });

  const { mutate: deleteNotificationMutation } = useMutation({
    mutationFn: (id) => axiosInstance.delete(`/notifications/${id}`),
    onSuccess: () => {
      queryClient.invalidateQueries(["notifications"]);
      toast.success("Notificación eliminada");
    },
  });

  const renderNotificationIcon = (type) => {
    switch (type) {
      case "like":
      case "projectLike":
        return <ThumbsUp className='text-blue-500' />;
      case "comment":
      case "projectComment":
        return <MessageSquare className='text-green-500' />;
      case "connectionAccepted":
        return <UserPlus className='text-purple-500' />;
      case "projectInterest":
        return <Users className='text-yellow-500' />;
      case "projectExpired":
        return <Clock className='text-red-500' />;
      default:
        return null;
    }
  };

  const renderNotificationContent = (notification) => {
    switch (notification.type) {
      case "like":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            dio me gusta a tu post
          </span>
        );
      case "comment":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            comentó en tu post
          </span>
        );
      case "connectionAccepted":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            aceptó tu solicitud de conexión
          </span>
        );
      case "projectInterest":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            mostró interés en tu proyecto
          </span>
        );
      case "projectComment":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            comentó en tu proyecto
          </span>
        );
      case "projectLike":
        return (
          <span>
            <Link to={`/profile/${notification.relatedUser.username}`} className='font-bold'>
              {notification.relatedUser.name}
            </Link>{" "}
            le dio me gusta a tu proyecto
          </span>
        );
      case "projectExpired":
        return (
          <span>
            Tu proyecto ha expirado
          </span>
        );
      default:
        return null;
    }
  };

  const renderRelatedContent = (notification) => {
    // Handle project-related notifications
    if (notification.relatedProject) {
      return (
        <Link
          to={`/projects`} // Link to projects page since there's no single project view
          className='mt-2 p-2 bg-gray-50 rounded-md flex items-center space-x-2 hover:bg-gray-100 transition-colors'
        >
          <Briefcase size={16} className='text-gray-500' />
          <div className='flex-1 overflow-hidden'>
            <p className='text-sm text-gray-600 truncate'>Ver proyecto</p>
          </div>
          <ExternalLink size={14} className='text-gray-400' />
        </Link>
      );
    }
    
    // Handle post-related notifications
    if (!notification.relatedPost) return null;

    return (
      <Link
        to={`/post/${notification.relatedPost._id}`}
        className='mt-2 p-2 bg-gray-50 rounded-md flex items-center space-x-2 hover:bg-gray-100 transition-colors'
      >
        {notification.relatedPost.image && (
          <img src={notification.relatedPost.image} alt='Post preview' className='w-10 h-10 object-cover rounded' />
        )}
        <div className='flex-1 overflow-hidden'>
          <p className='text-sm text-gray-600 truncate'>{notification.relatedPost.content}</p>
        </div>
        <ExternalLink size={14} className='text-gray-400' />
      </Link>
    );
  };

  return (
    <div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
      <div className='col-span-1 lg:col-span-1'>
        <Sidebar user={authUser} />
      </div>
      <div className='col-span-1 lg:col-span-3'>
        <div className='bg-white rounded-lg shadow p-6'>
          <h1 className='text-2xl font-bold mb-6'>Notificaciones</h1>

          {isLoading ? (
            <p>Cargando notificaciones...</p>
          ) : notifications && notifications.data.length > 0 ? (
            <ul>
              {notifications.data.map((notification) => (
                <li
                  key={notification._id}
                  className={`bg-white border rounded-lg p-4 my-4 transition-all hover:shadow-md ${
                    !notification.read ? "border-blue-500" : "border-gray-200"
                  }`}
                >
                  <div className='flex items-start justify-between'>
                    <div className='flex items-center space-x-4'>
                      {notification.relatedUser && (
                        <Link to={`/profile/${notification.relatedUser.username}`}>
                          <img
                            src={notification.relatedUser.profilePicture || "/avatar.png"}
                            alt={notification.relatedUser.name}
                            className='w-12 h-12 rounded-full object-cover'
                          />
                        </Link>
                      )}

                      <div>
                        <div className='flex items-center gap-2'>
                          <div className='p-1 bg-gray-100 rounded-full'>
                            {renderNotificationIcon(notification.type)}
                          </div>
                          <p className='text-sm'>{renderNotificationContent(notification)}</p>
                        </div>
                        <p className='text-xs text-gray-500 mt-1'>
                          {formatDistanceToNow(new Date(notification.createdAt), {
                            addSuffix: true,
                          })}
                        </p>
                        {renderRelatedContent(notification)}
                      </div>
                    </div>

                    <div className='flex gap-2'>
                      {!notification.read && (
                        <button
                          onClick={() => markAsReadMutation(notification._id)}
                          className='p-1 bg-blue-100 text-blue-600 rounded hover:bg-blue-200 transition-colors'
                          aria-label='Mark as read'
                        >
                          <Eye size={16} />
                        </button>
                      )}

                      <button
                        onClick={() => deleteNotificationMutation(notification._id)}
                        className='p-1 bg-red-100 text-red-600 rounded hover:bg-red-200 transition-colors'
                        aria-label='Delete notification'
                      >
                        <Trash2 size={16} />
                      </button>
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          ) : (
            <p>No hay notificaciones por el momento</p>
          )}
        </div>
      </div>
    </div>
  );
};
export default NotificationsPage;

================
File: frontend\src\pages\PostPage.jsx
================
import { useQuery } from "@tanstack/react-query";
import { useParams } from "react-router-dom";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import Post from "../components/Post";

const PostPage = () => {
	const { postId } = useParams();
	const { data: authUser } = useQuery({ queryKey: ["authUser"] });

	const { data: post, isLoading } = useQuery({
		queryKey: ["post", postId],
		queryFn: () => axiosInstance.get(`/posts/${postId}`),
	});

	if (isLoading) return <div>Cargando Post...</div>;
	if (!post?.data) return <div>Post not foundno encontrado</div>;

	return (
		<div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
			<div className='hidden lg:block lg:col-span-1'>
				<Sidebar user={authUser} />
			</div>

			<div className='col-span-1 lg:col-span-3'>
				<Post post={post.data} />
			</div>
		</div>
	);
};
export default PostPage;

================
File: frontend\src\pages\ProfilePage.jsx
================
// frontend/src/pages/ProfilePage.jsx
import { useParams } from "react-router-dom";
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import ProfileHeader from "../components/ProfileHeader";
import AboutSection from "../components/AboutSection";
import ExperienceSection from "../components/ExperienceSection";
import EducationSection from "../components/EducationSection";
import SkillsSection from "../components/SkillsSection";
import CompanyInfoSection from "../components/CompanyInfoSection";
import toast from "react-hot-toast";

const ProfilePage = () => {
  const { username } = useParams();
  const queryClient = useQueryClient();

  const { data: authUser, isLoading } = useQuery({
    queryKey: ["authUser"],
  });

  const { data: userProfile, isLoading: isUserProfileLoading } = useQuery({
    queryKey: ["userProfile", username],
    queryFn: () => axiosInstance.get(`/users/${username}`),
  });

  const { mutate: updateProfile } = useMutation({
    mutationFn: async (updatedData) => {
      await axiosInstance.put("/users/profile", updatedData);
    },
    onSuccess: () => {
      toast.success("Perfil actualizado");
      // Invalidate both user profile and auth user to ensure data is fresh
      queryClient.invalidateQueries(["userProfile", username]);
      queryClient.invalidateQueries(["authUser"]);
    },
  });

  if (isLoading || isUserProfileLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
      </div>
    );
  }

  const isOwnProfile = authUser.username === userProfile?.data?.username;
  const userData = isOwnProfile ? authUser : userProfile?.data;

  const handleSave = (updatedData) => {
    console.log('ProfilePage receiving:', updatedData); // Debug log
    updateProfile(updatedData);
  };

  return (
    <div className="max-w-4xl mx-auto p-4">
      <ProfileHeader userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      
      {/* Company Info Section only for empresarios, show message if first login */}
      {userData.role === 'empresario' && (
        <>
          {userData.isFirstLogin ? (
            <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
              <div className="flex">
                <div className="flex-shrink-0">
                  <svg className="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
                    <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
                  </svg>
                </div>
                <div className="ml-3">
                  <p className="text-sm text-yellow-700">
                    Por favor complete el cuestionario inicial para configurar la informaci√≥n de su empresa.
                  </p>
                </div>
              </div>
            </div>
          ) : (
            <CompanyInfoSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
          )}
        </>
      )}
      
      <AboutSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      <ExperienceSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      <EducationSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
      <SkillsSection userData={userData} isOwnProfile={isOwnProfile} onSave={handleSave} />
    </div>
  );
};

export default ProfilePage;

================
File: frontend\src\pages\ProjectsPage.jsx
================
// frontend/src/pages/ProjectsPage.jsx
import React, { useState } from 'react';
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { axiosInstance } from "../lib/axios";
import Sidebar from "../components/Sidebar";
import ProjectCreation from "../components/ProjectCreation";
import { Briefcase, Plus, Loader, ThumbsUp, MessageSquare, UserPlus, Users, X } from "lucide-react";
import toast from 'react-hot-toast';
import { Link } from "react-router-dom";
import { formatDistanceToNow } from "date-fns";

const ProjectsPage = () => {
    const queryClient = useQueryClient();
    
    const { data: authUser } = useQuery({ 
        queryKey: ["authUser"],
        suspense: false,
    });

    const [showProjectForm, setShowProjectForm] = useState(false);
    const [filters, setFilters] = useState({
        status: "active",
        view: "all"
    });

    const { data: projects = [], isLoading, error } = useQuery({
        queryKey: ["projects", filters],
        queryFn: async () => {
            try {
                const params = new URLSearchParams();
                if (filters.status) params.append('status', filters.status);
                if (filters.view === 'created') params.append('created', 'true');
                if (filters.view === 'interested') params.append('interested', 'true');
                
                const res = await axiosInstance.get(`/projects?${params}`);
                
                // Convert to plain JavaScript objects to avoid mongoose object rendering issues
                return JSON.parse(JSON.stringify(res.data));
            } catch (err) {
                console.error('Error fetching projects:', err);
                throw new Error(err.response?.data?.message || 'Error al cargar los proyectos');
            }
        },
        enabled: !!authUser,
        staleTime: 1000 * 60 * 5, // 5 minutes
    });

    // Like project mutation
    const { mutate: likeProject } = useMutation({
        mutationFn: async (projectId) => {
            const res = await axiosInstance.post(`/projects/${projectId}/like`);
            return res.data;
        },
        onSuccess: () => {
            queryClient.invalidateQueries(["projects", filters]);
            toast.success("Acción realizada correctamente");
        },
        onError: (error) => {
            toast.error(error.response?.data?.message || "Error al realizar la acción");
        }
    });

    // Show interest mutation
  // In the toggleInterest mutation, change the success message to use Spanish
const { mutate: toggleInterest } = useMutation({
    mutationFn: async (projectId) => {
        const res = await axiosInstance.post(`/projects/${projectId}/interest`);
        return res.data;
    },
    onSuccess: (data) => {
        queryClient.invalidateQueries(["projects", filters]);
        // Custom Spanish message instead of using the response message
        const message = data.message.includes("removed") ? 
            "Interés removido" : "Interés añadido";
        toast.success(message);
    },
    onError: (error) => {
        toast.error(error.response?.data?.message || "Error al mostrar interés");
    }
});
    
    // ProjectPost component with like, comment, and show interest functionality
    const ProjectPost = ({ project, isOwner }) => {
        const [showCommentForm, setShowCommentForm] = useState(false);
        const [commentText, setCommentText] = useState('');
        const [showInterestedUsers, setShowInterestedUsers] = useState(false);
        
        const isLiked = project.likes?.includes(authUser._id);
        const isInterested = project.interestedUsers?.some(u => u.user._id === authUser._id);
        
        const handleLike = () => {
            likeProject(project._id);
        };
        
        const handleToggleInterest = () => {
            toggleInterest(project._id);
        };
        
        const { mutate: addComment } = useMutation({
            mutationFn: async () => {
                const res = await axiosInstance.post(`/projects/${project._id}/comment`, {
                    content: commentText
                });
                return res.data;
            },
            onSuccess: () => {
                queryClient.invalidateQueries(["projects", filters]);
                setCommentText('');
                setShowCommentForm(false);
                toast.success("Comentario añadido");
            },
            onError: (error) => {
                toast.error(error.response?.data?.message || "Error al añadir comentario");
            }
        });
        
        const handleSubmitComment = (e) => {
            e.preventDefault();
            if (commentText.trim()) {
                addComment();
            }
        };
        
        return (
            <div className="bg-white rounded-lg shadow p-6 border border-gray-200">
                {/* Header */}
                <div className="flex justify-between mb-4">
                    <div className="flex items-center">
                        <Link to={`/profile/${project.author.username}`}>
                            <img 
                                src={project.author.profilePicture || "/avatar.png"} 
                                alt={project.author.name}
                                className="w-10 h-10 rounded-full mr-3"
                            />
                        </Link>
                        <div>
                            <h3 className="font-semibold text-lg">{project.title}</h3>
                            <div className="flex items-center text-sm text-gray-600">
                                <Link to={`/profile/${project.author.username}`} className="hover:underline">
                                    {project.author.name}
                                </Link>
                                <span className="mx-1">•</span>
                                <span>{formatDistanceToNow(new Date(project.createdAt), { addSuffix: true })}</span>
                            </div>
                        </div>
                    </div>
                    <div className="flex flex-col items-end">
                        {isOwner && (
                            <span className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full mb-2">
                                Tu proyecto
                            </span>
                        )}
                        <span className={`text-xs px-2 py-1 rounded-full ${
                            project.status === 'active' ? 'bg-green-100 text-green-800' :
                            project.status === 'completed' ? 'bg-purple-100 text-purple-800' :
                            'bg-gray-100 text-gray-800'
                        }`}>
                            {project.status === 'active' ? 'Activo' : 
                             project.status === 'completed' ? 'Completado' : 'Expirado'}
                        </span>
                    </div>
                </div>
                
                {/* Content */}
                <p className="mb-4">{project.content}</p>
                {project.image && <img src={project.image} alt="Project image" className="w-full rounded-lg mb-4" />}
                
                {/* Requirements and Goals */}
                {(project.projectRequirements || project.projectGoals) && (
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        {project.projectRequirements && (
                            <div className="bg-gray-50 p-3 rounded">
                                <h4 className="font-semibold mb-2">Requisitos:</h4>
                                <p className="text-sm">{project.projectRequirements}</p>
                            </div>
                        )}
                        {project.projectGoals && (
                            <div className="bg-gray-50 p-3 rounded">
                                <h4 className="font-semibold mb-2">Metas:</h4>
                                <p className="text-sm">{project.projectGoals}</p>
                            </div>
                        )}
                    </div>
                )}
                
                {/* Actions */}
                <div className="flex items-center justify-between p-2 border-t border-b my-3">
                    <button 
                        onClick={handleLike}
                        className={`flex items-center gap-1 px-3 py-1 rounded-full transition-colors
                            ${isLiked ? 'text-blue-600 bg-blue-50' : 'text-gray-500 hover:bg-gray-100'}`}
                    >
                        <ThumbsUp size={18} className={isLiked ? 'fill-blue-600' : ''} />
                        <span>{project.likes?.length || 0}</span>
                    </button>
                    
                    <button 
                        onClick={() => setShowCommentForm(!showCommentForm)}
                        className="flex items-center gap-1 px-3 py-1 rounded-full text-gray-500 hover:bg-gray-100 transition-colors"
                    >
                        <MessageSquare size={18} />
                        <span>{project.comments?.length || 0} Comentarios</span>
                    </button>
                    
                    <button 
                        onClick={handleToggleInterest}
                        className={`flex items-center gap-1 px-3 py-1 rounded-full transition-colors
                            ${isInterested ? 'text-green-600 bg-green-50' : 'text-gray-500 hover:bg-gray-100'}`}
                        disabled={project.status === 'expired'}
                    >
                        <UserPlus size={18} className={isInterested ? 'fill-green-600' : ''} />
                        <span>{isInterested ? 'Interesado' : 'Mostrar interés'}</span>
                    </button>
                </div>
                
                {/* Interest count and list */}
                {project.interestedUsers?.length > 0 && (
                    <div className="mt-2 mb-4">
                        <button 
                            onClick={() => setShowInterestedUsers(!showInterestedUsers)}
                            className="flex items-center text-sm text-gray-600 hover:text-gray-900"
                        >
                            <Users size={16} className="mr-1" />
                            <span>
                                {project.interestedUsers.length} 
                                {project.interestedUsers.length === 1 ? ' persona interesada' : ' personas interesadas'}
                            </span>
                        </button>
                        
                        {/* Interested Users Modal */}
                        {showInterestedUsers && (
                            <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                                <div className="bg-white rounded-lg p-6 w-full max-w-md">
                                    <div className="flex justify-between items-center mb-4">
                                        <h3 className="text-lg font-semibold">Personas interesadas</h3>
                                        <button 
                                            onClick={() => setShowInterestedUsers(false)}
                                            className="text-gray-500 hover:text-gray-700"
                                        >
                                            <X size={20} />
                                        </button>
                                    </div>
                                    
                                    <div className="max-h-80 overflow-y-auto">
                                        {project.interestedUsers.map((interest) => (
                                            <div key={interest.user._id} className="flex items-center p-3 hover:bg-gray-50 rounded">
                                                <Link 
                                                    to={`/profile/${interest.user.username}`}
                                                    className="flex items-center flex-grow"
                                                >
                                                    <img 
                                                        src={interest.user.profilePicture || "/avatar.png"} 
                                                        alt={interest.user.name} 
                                                        className="w-10 h-10 rounded-full mr-3"
                                                    />
                                                    <div>
                                                        <p className="font-medium">{interest.user.name}</p>
                                                        <p className="text-xs text-gray-500">{interest.user.headline}</p>
                                                    </div>
                                                </Link>
                                                <span className="text-xs text-gray-500">
                                                    {formatDistanceToNow(new Date(interest.createdAt), { addSuffix: true })}
                                                </span>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        )}
                    </div>
                )}
                
                {/* Comment form */}
                {showCommentForm && (
                    <form onSubmit={handleSubmitComment} className="mt-4">
                        <textarea
                            value={commentText}
                            onChange={(e) => setCommentText(e.target.value)}
                            placeholder="Escribe un comentario..."
                            className="w-full p-3 border rounded-lg mb-2"
                            rows="2"
                            disabled={project.status === 'expired'}
                        />
                        <button 
                            type="submit" 
                            className="bg-primary text-white px-4 py-2 rounded-lg disabled:opacity-50"
                            disabled={!commentText.trim() || project.status === 'expired'}
                        >
                            Comentar
                        </button>
                    </form>
                )}
                
                {/* Comments section */}
                {showCommentForm && project.comments?.length > 0 && (
                    <div className="mt-4 border-t pt-4">
                        <h4 className="font-semibold mb-2">Comentarios</h4>
                        <div className="space-y-3 max-h-60 overflow-y-auto">
                            {project.comments.map((comment) => (
                                <div key={comment._id} className="flex items-start gap-2 p-2 bg-gray-50 rounded">
                                    <Link to={`/profile/${comment.user.username}`}>
                                        <img 
                                            src={comment.user.profilePicture || "/avatar.png"}
                                            alt={comment.user.name}
                                            className="w-8 h-8 rounded-full"
                                        />
                                    </Link>
                                    <div>
                                        <div className="flex items-baseline gap-2">
                                            <Link to={`/profile/${comment.user.username}`} className="font-semibold text-sm hover:underline">
                                                {comment.user.name}
                                            </Link>
                                            <span className="text-xs text-gray-500">
                                                {formatDistanceToNow(new Date(comment.createdAt), { addSuffix: true })}
                                            </span>
                                        </div>
                                        <p className="text-sm">{comment.content}</p>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                )}
            </div>
        );
    };

    if (error) {
        return (
            <div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
                <div className='hidden lg:block lg:col-span-1'>
                    <Sidebar user={authUser} />
                </div>
                <div className='col-span-1 lg:col-span-3'>
                    <div className='bg-white rounded-lg shadow p-6'>
                        <div className='text-center text-red-600'>
                            <p>Error al cargar los proyectos: {error.message}</p>
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className='grid grid-cols-1 lg:grid-cols-4 gap-6'>
            <div className='hidden lg:block lg:col-span-1'>
                <Sidebar user={authUser} />
            </div>

            <div className='col-span-1 lg:col-span-3'>
                <div className='bg-white rounded-lg shadow p-6 mb-6'>
                    <div className='flex justify-between items-center mb-6'>
                        <h1 className='text-2xl font-bold'>Proyectos</h1>
                        <button 
                            onClick={() => setShowProjectForm(!showProjectForm)}
                            className='bg-primary text-white px-4 py-2 rounded-lg flex items-center gap-2'
                        >
                            <Plus size={20} />
                            {showProjectForm ? "Cerrar" : "Crear Proyecto"}
                        </button>
                    </div>

                    {showProjectForm && (
                        <div className='mb-6'>
                            <ProjectCreation 
                                user={authUser} 
                                onComplete={() => {
                                    setShowProjectForm(false);
                                    toast.success('Proyecto creado exitosamente');
                                }}
                            />
                        </div>
                    )}

                    <div className='flex flex-wrap gap-2 mb-6'>
                        <div className='flex items-center border rounded-lg overflow-hidden'>
                            <button 
                                className={`px-4 py-2 ${filters.view === 'all' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, view: 'all'})}
                            >
                                Todos
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.view === 'created' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, view: 'created'})}
                            >
                                Mis Proyectos
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.view === 'interested' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, view: 'interested'})}
                            >
                                Interesado
                            </button>
                        </div>

                        <div className='flex items-center border rounded-lg overflow-hidden ml-auto'>
                            <button 
                                className={`px-4 py-2 ${filters.status === 'active' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, status: 'active'})}
                            >
                                Activos
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.status === 'completed' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, status: 'completed'})}
                            >
                                Completados
                            </button>
                            <button 
                                className={`px-4 py-2 ${filters.status === 'expired' ? 'bg-primary text-white' : 'bg-gray-100'}`}
                                onClick={() => setFilters({...filters, status: 'expired'})}
                            >
                                Expirados
                            </button>
                        </div>
                    </div>

                    {isLoading ? (
                        <div className="flex items-center justify-center py-10">
                            <Loader className="w-10 h-10 animate-spin text-primary" />
                        </div>
                    ) : projects && projects.length > 0 ? (
                        <div className='space-y-6'>
                            {projects.map((project) => (
                                <ProjectPost 
                                    key={project._id} 
                                    project={project} 
                                    isOwner={project.author._id === authUser._id}
                                />
                            ))}
                        </div>
                    ) : (
                        <div className='text-center py-10 bg-gray-50 rounded-lg'>
                            <Briefcase size={64} className='mx-auto text-gray-400 mb-4' />
                            <h2 className='text-xl font-semibold mb-2'>No hay proyectos disponibles</h2>
                            <p className='text-gray-600 mb-6'>
                                {filters.view === 'created' 
                                    ? 'No has creado ningún proyecto todavía.' 
                                    : filters.view === 'interested'
                                    ? 'No has mostrado interés en ningún proyecto.'
                                    : 'No hay proyectos que coincidan con tus filtros.'}
                            </p>
                            {filters.view === 'created' && (
                                <button
                                    onClick={() => setShowProjectForm(true)}
                                    className='bg-primary text-white px-4 py-2 rounded-lg'
                                >
                                    Crear tu primer proyecto
                                </button>
                            )}
                        </div>
                    )}
                </div>
            </div>
        </div>
    );
};

export default ProjectsPage;

================
File: frontend\src\pages\auth\LoginPage.jsx
================
import { Link } from "react-router-dom";
import LoginForm from "../../components/auth/LoginForm";

const LoginPage = () => {
	return (
		<div className='min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8'>
			<div className='sm:mx-auto sm:w-full sm:max-w-md'>
				<img className='mx-auto h-40 w-auto' src='/logo redondo.png' alt='LinkedIn' />
				<h2 className=' text-center text-3xl font-extrabold text-gray-900'>Iniciar sesión</h2>
			</div>

			<div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md shadow-md'>
				<div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>
					<LoginForm />
					<div className='mt-6'>
						<div className='relative'>
							<div className='absolute inset-0 flex items-center'>
								<div className='w-full border-t border-gray-300'></div>
							</div>
							<div className='relative flex justify-center text-sm'>
								<span className='px-2 bg-white text-gray-500'>¿Aun no tienes una cuenta?</span>
							</div>
						</div>
						<div className='mt-6'>
							<Link
								to='/signup'
								className='w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-blue-600 bg-white hover:bg-gray-50'
							>
								Registrate
							</Link>
						</div>
					</div>
				</div>
			</div>
		</div>
	);
};
export default LoginPage;

================
File: frontend\src\pages\auth\SignUpPage.jsx
================
import { Link } from "react-router-dom";
import SignUpForm from "../../components/auth/SignUpForm";

const SignUpPage = () => {
	return (
		<div className='min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8'>
			<div className='sm:mx-auto sm:w-full sm:max-w-md'>
				<img className='mx-auto h-40 w-auto' src='/logo redondo.png' alt='ITTG' />
				<h2 className='text-center text-3xl font-extrabold text-gray-900'>
					Crea conexiones para tu vida profesional
				</h2>
			</div>
			<div className='mt-8 sm:mx-auto sm:w-full sm:max-w-md shadow-md'>
				<div className='bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10'>
					<SignUpForm />

					<div className='mt-6'>
						<div className='relative'>
							<div className='absolute inset-0 flex items-center'>
								<div className='w-full border-t border-gray-300'></div>
							</div>
							<div className='relative flex justify-center text-sm'>
								<span className='px-2 bg-white text-gray-500'>Â¿Ya tienes una cuenta?</span>
							</div>
						</div>
						<div className='mt-6'>
							<Link
								to='/login'
								className='w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-blue-600 bg-white hover:bg-gray-50'
							>
								Iniciar sesion
							</Link>
						</div>
					</div>
				</div>
			</div>
		</div>
	);
};
export default SignUpPage;

================
File: frontend\src\utils\dateUtils.js
================
import { format, parseISO, isValid } from "date-fns";

export const formatDate = (dateString) => {
	const date = parseISO(dateString);
	return isValid(date) ? format(date, "MMM yyyy") : "Present";
};
